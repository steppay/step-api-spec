{
  "openapi": "3.0.1",
  "info": {
    "title": "Core API",
    "version": "v0.9"
  },
  "servers": [
    {
      "url": "https://api.steppay.kr",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "청구서 API",
      "description": "주문 생성과 동시에 결제할 수 있는 링크가 담긴 메시지, SMS, 카카오 알림톡이 발송됩니다."
    }
  ],
  "paths": {
    "/api/internal/orders/payment": {
      "put": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "updateOrderByPayment_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "updateOrderByPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/payment-method": {
      "put": {
        "tags": [
          "구독 API"
        ],
        "summary": "결제수단 변경",
        "description": "구독의 결제수단을 변경할 때 호출합니다. 변경을 위한 주문이 생성됩니다.",
        "operationId": "changePaymentMethod",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangePaymentMethodDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "정상적으로 주문이 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/items": {
      "put": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 항목 교체",
        "description": "구독 항목을 파라미터로 전달한 데이터로 교체합니다.",
        "operationId": "replaceSubscriptionItems",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "교체할 구독 항목 정보",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionItemReplaceDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 교체됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "구독 항목 교체 정보 검증 실패"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 항목 추가",
        "description": "구독 항목을 추가할 때 호출합니다.",
        "operationId": "addSubscriptionItem",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 추가됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "구독 항목 생성 정보 검증 실패"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독 또는 구독 항목을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/items/{itemId}": {
      "put": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 항목 수정",
        "description": "특정 구독 항목을 수정할 때 사용합니다.",
        "operationId": "updateSubscriptionItem",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "구독 항목 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemChangeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 수정됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "구독 항목 수정 정보 검증 실패"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독 또는 구독 항목을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 항목 삭제",
        "description": "구독 항목을 삭제할 때 호출합니다.",
        "operationId": "removeSubscriptionItem",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "구독 항목 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 삭제됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독 또는 구독 항목을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/interval": {
      "put": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 주기 변경",
        "description": "구독 주기를 변경합니다.",
        "operationId": "changeSubscriptionRecurring",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangeRecurringDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 변경됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "put": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 수정",
        "description": "상품을 수정할 때 호출합니다. 파라미터로 전달된 정보로 가격플랜 정보가 치환됩니다.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 수정됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductV1DTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 삭제",
        "description": "상품을 삭제할 때 호출합니다.",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 삭제됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/product_order": {
      "put": {
        "tags": [
          "상품 API"
        ],
        "operationId": "updateProductOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "product_order",
            "in": "query",
            "description": "상품 순서 수정",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/prices/{priceId}": {
      "get": {
        "tags": [
          "가격플랜 API"
        ],
        "summary": "가격플랜 상세 조회",
        "description": "가격플랜의 상세 정보를 반환합니다.",
        "operationId": "getProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priceId",
            "in": "path",
            "description": "가격 플랜 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품 또는 가격플랜을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceV1DTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "가격플랜 API"
        ],
        "summary": "가격플랜 수정",
        "description": "가격플랜을 수정할 때 호출합니다. 파라미터로 전달된 정보로 가격플랜 정보가 치환됩니다. 연관 주문이 존재한다면 이름과 설명만 수정됩니다.",
        "operationId": "updateProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priceId",
            "in": "path",
            "description": "가격플랜 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 수정됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품 또는 가격플랜을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceV1DTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "가격플랜 API"
        ],
        "summary": "가격 삭제",
        "description": "가격을 삭제할 때 호출합니다.",
        "operationId": "deleteProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priceId",
            "in": "path",
            "description": "가격플랜 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 수정됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품 또는 가격플랜을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderIdOrCode}/retry-payment": {
      "put": {
        "tags": [
          "주문 API"
        ],
        "operationId": "retryPayment",
        "parameters": [
          {
            "name": "orderIdOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBoolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "tags": [
          "청구서 API"
        ],
        "summary": "청구서 상세 조회",
        "description": "청구서의 상세정보를 반환합니다.",
        "operationId": "getInvoiceDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "청구서 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "청구서를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "청구서 API"
        ],
        "summary": "청구서 수정",
        "description": "청구서를 수정할 때 호출합니다. 파라미터로 전달된 정보로 청구서가 치환됩니다.",
        "operationId": "updateInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "청구서 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "temporary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 수정됨"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "청구서를 찾지 못 함"
          }
        }
      },
      "delete": {
        "tags": [
          "청구서 API"
        ],
        "summary": "청구서 삭제",
        "description": "청구서를 삭제할 때 호출합니다.",
        "operationId": "deleteInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "청구서 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 삭제됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "청구서를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{customerId}/payment-method": {
      "put": {
        "tags": [
          "고객 API"
        ],
        "summary": "결제수단 변경",
        "description": "결제수단을 변경할 때 사용합니다. 해당 고객의 모든 구독에 대한 결제수단이 변경됩니다. 결제수단을 처리하기 위한 주문이 생성되며, 주문을 결제하면 등록이 완료됩니다.",
        "operationId": "changePaymentMethodForAllSubscriptions",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "고객 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "정상적으로 주문이 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "변경할 고객 정보를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/logs/{logId}": {
      "put": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "updateSubscriptionLog",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionLogUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "updateSubscriptionLog_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/items/{itemId}": {
      "put": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 상품 변경",
        "operationId": "updateSubscriptionItem_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemChangeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 상품 제거",
        "operationId": "removeSubscriptionItem_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/{quotationId}/logs/{quotationLogId}": {
      "put": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "updateQuotationLog",
        "parameters": [
          {
            "name": "quotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "quotationLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "deleteQuotationLog",
        "parameters": [
          {
            "name": "quotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "quotationLogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getOne_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateProduct_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "deleteProduct_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/status": {
      "put": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateProductStatus",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStatusUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/prices/{priceCode}": {
      "put": {
        "tags": [
          "price-manager-controller"
        ],
        "operationId": "updateProductPrice_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "price-manager-controller"
        ],
        "operationId": "deleteProductPrice_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/product-categories": {
      "get": {
        "tags": [
          "category-manager-controller"
        ],
        "operationId": "getCategories_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "category-manager-controller"
        ],
        "operationId": "upsertCategories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryUpsertDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/{orderCode}/logs/{logId}": {
      "put": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "updateOrderLog",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLogUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "deleteOrderLog",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/item/productOption": {
      "put": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "updateSelectedProductOption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderProductOptionUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/{id}": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getInvoiceDetail_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateInvoice_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "temporary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "deleteInvoice_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/{id}/temporary": {
      "put": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateInvoiceTemporary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/info/{deliveryCode}/recipient": {
      "get": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "getRecipientInfo",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "updateRecipientInfo",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipientDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/to/{toStatus}": {
      "put": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "operationId": "changeStatusToStatus",
        "parameters": [
          {
            "name": "toStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECTED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/to/{toStatus}": {
      "put": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "operationId": "changeStatusToStatus_1",
        "parameters": [
          {
            "name": "toStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "RETURN_REQUEST",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/country-settings/{id}": {
      "get": {
        "tags": [
          "country-settings-manager-controller"
        ],
        "operationId": "getCountrySettingDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CountrySettingDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "country-settings-manager-controller"
        ],
        "operationId": "updateCountrySetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountrySettingUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CountrySettingDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "country-settings-manager-controller"
        ],
        "operationId": "deleteCountrySetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/refreshupdemodata": {
      "put": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "refreshUpDemoData",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/refreshdowndemodata": {
      "put": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "refreshDownDemoData",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/shipping-list/{customerShippingId}": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "getShipping",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerShippingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingListItemDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "updateShipping",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerShippingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingListUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "deleteShipping",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerShippingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/payment-method": {
      "put": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "changePaymentMethod_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangePaymentMethodDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/items": {
      "put": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "replaceSubscriptionItems_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionItemReplaceDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "summary": "구독 항목 추가",
        "operationId": "addSubscriptionItem_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/interval": {
      "put": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "changeSubscriptionRecurring_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangeRecurringDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/{orderCode}/delivery": {
      "put": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "updateAllItemDelivery",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipping"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/delivery/info/{deliveryCode}/recipient": {
      "get": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "getRecipient",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "updateRecipient",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecipientDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/carts/item/quantity": {
      "put": {
        "tags": [
          "장바구니 API (Customer)"
        ],
        "operationId": "cartItemQuantity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartItemModifyRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartListCache"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/pause": {
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 일시 정지",
        "description": "구독을 일시정지 합니다. 활성화 상태의 구독만 일시정지 할 수 있습니다.",
        "operationId": "pauseSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPauseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 처리됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/change-pay-datetime": {
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "결제일 변경",
        "description": "다음 결제일을 변경합니다.",
        "operationId": "changePayDatetimeSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangePayDatetimeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 변경됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/cancel": {
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 취소",
        "description": "구독을 취소합니다. 활성화, 일시정지, 결제실패 상태의 구독만 취소할 수 있습니다.",
        "operationId": "cancelSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCancelDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 처리됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/active": {
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 활성화",
        "description": "구독을 다시 활성화 시킵니다. 일시정지 및 취소 대기중 상태만 변경가능합니다.",
        "operationId": "activeSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "정상적으로 활성화됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{id}/renew": {
      "post": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 갱신 결제",
        "description": "다음 결제일과 상관없이 현재 시점으로 구독을 갱신시킵니다. 결제가 진행되며, 구독 시작, 끝 시점이 갱신됩니다.",
        "operationId": "renewSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 갱신됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseSubscriptionManualRenewResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 목록 조회",
        "operationId": "getProductList",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "조회 시작 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "조회 끝 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호(기본값: 0)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기(기본값: 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준값 - 기본값: 생성 시점",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드. 이름을 검색할 수 있습니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "특정 카테고리 아이디에 포함되어 있는 상품 목록을 반환합니다.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "지정한 상태만 목록을 반환하게 합니다.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SALE",
                "OUT_OF_STOCK",
                "UNSOLD",
                "WAITING_APPROVAL",
                "REJECTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListPageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 생성",
        "description": "상품을 생성할 때 호출합니다.",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "정상적으로 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/prices": {
      "get": {
        "tags": [
          "가격플랜 API"
        ],
        "summary": "가격플랜 목록 조회",
        "description": "특정 상품의 가격플랜 목록을 반환합니다.",
        "operationId": "getProductPriceList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceV1DTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceV1DTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "가격플랜 API"
        ],
        "summary": "가격플랜 생성",
        "description": "가격플랜을 생성할 때 호출합니다.",
        "operationId": "createProductPrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "정상적으로 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "주문 API"
        ],
        "summary": "주문 목록 조회",
        "description": "주문 목록을 반환합니다.",
        "operationId": "getOrderList",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "조회 시작 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "조회 끝 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호(기본값: 0)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기(기본값: 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준값 - 기본값: 생성 시점",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "검색 대상(orderCode, productName, customerName, phone, email)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "지정한 상태만 목록을 반환하게 합니다.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "DEPOSIT_WAITING",
                "CANCELLED",
                "PAID",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY",
                "ORDER_DELIVERY_PREPARING",
                "ORDER_DELIVERY_SUSPENDED",
                "ORDER_DELIVERY_ON_THE_WAY",
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING",
                "EXCHANGE_REJECTED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REJECTED",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY",
                "PAYMENT_FAILURE",
                "FINISHED_EXCHANGE_AVAILABLE",
                "FINISHED_RETURN_AVAILABLE",
                "FINISHED_SUCCESSFULLY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderListPageV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "주문 API"
        ],
        "summary": "주문 생성",
        "description": "주문을 생성할 때 호출합니다.",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateV1DTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "정상적으로 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "정보를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices": {
      "get": {
        "tags": [
          "청구서 API"
        ],
        "summary": "청구서 목록 조회",
        "description": "청구서 목록을 반환합니다.",
        "operationId": "getInvoiceList",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "조회 시작 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "조회 끝 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호(기본값: 0)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기(기본값: 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준값 - 기본값: 생성 시점",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "지정한 상태만 목록을 반환하게 합니다.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "임시저장",
                "발송 예약",
                "발송",
                "결제 완료",
                "미납입",
                "발송 실패"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceListResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "청구서 API"
        ],
        "summary": "청구서 생성",
        "description": "청구서를 생성할 때 호출합니다.",
        "operationId": "createInvoice",
        "parameters": [
          {
            "name": "temporary",
            "in": "query",
            "description": "임시 저장 여부. 임시 저장은 청구서가 발송되지 않습니다.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "정상적으로 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{id}/payment-method": {
      "post": {
        "tags": [
          "고객 API"
        ],
        "summary": "결제수단 등록",
        "description": "결제수단을 등록시킬 때 사용합니다. 결제수단을 처리하기 위한 주문이 생성되며, 주문을 결제하면 등록이 완료됩니다.",
        "operationId": "addPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "고객 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "정상적으로 주문이 생성됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "추가할 고객 정보를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/orders/idKey/{idKey}/transactions": {
      "post": {
        "tags": [
          "주문 API (Public)"
        ],
        "operationId": "startTransaction",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/pause": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 정지",
        "description": "활성화 상태의 구독만 일시정지 할 수 있습니다.",
        "operationId": "pauseSubscription_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPauseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/memo": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 메모",
        "operationId": "updateSubscriptionMemo",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionMemoDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/logs": {
      "post": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "createSubscriptionLog",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionLogCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/items": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 상품 추가",
        "operationId": "addSubscriptionItem_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/change-datetime": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "날짜 변경",
        "operationId": "changePayDatetimeSubscription_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangeDatetimeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/cancel": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 취소",
        "description": "활성화, 일시정지, 결제실패 상태의 구독만 취소할 수 있습니다.",
        "operationId": "cancelSubscription_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCancelDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/active": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "summary": "구독 활성화",
        "description": "일시정지 및 취소 대기중 상태만 변경가능합니다.",
        "operationId": "activeSubscription_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{id}/renew": {
      "post": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "renewSubscription_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/{quotationId}/logs": {
      "post": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "createQuotationLog",
        "parameters": [
          {
            "name": "quotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/{quotationId}/invoice": {
      "post": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "sendInvoice",
        "parameters": [
          {
            "name": "quotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QuotationCreatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getProductList_2",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageProductListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createProduct_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateProductStatusOrTypeList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductStatusOrTypeUpdateDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productId}/link/{addingProductId}": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "linkProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "addingProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/prices": {
      "post": {
        "tags": [
          "price-manager-controller"
        ],
        "operationId": "createProductPrice_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/option-groups": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createOptionGroup",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/option-groups/{groupId}/options": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createOption",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductOptionCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/option-groups/{groupId}/options/{optionId}": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "deleteOption",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/prices": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createDraftProductWithPrice",
        "parameters": [
          {
            "name": "priceType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ONE_TIME",
                "FLAT",
                "UNIT_BASED",
                "USAGE_BASED",
                "VOLUME_BASED",
                "BUNDLE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders": {
      "get": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "getOrderList_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageOrderListResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "createOrder_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/{orderCode}/logs": {
      "post": {
        "tags": [
          "log-manager-controller"
        ],
        "operationId": "createOrderLog",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLogCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/mapper": {
      "post": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "priceModuleMapper",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceModuleMappingRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceModuleInputDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getInvoiceList_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/InvoiceSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceListResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createInvoice_1",
        "parameters": [
          {
            "name": "temporary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "X-StepPay-Dry-Run",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "X-StepPay-Dry-Run-Email",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "updateInvoiceStatusList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceStatusUpdateDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/{id}/send": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "sendInvoiceNow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-StepPay-Dry-Run",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "X-StepPay-Dry-Run-Email",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceSendNowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/{ids}/send-bulk": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "sendInvoiceNowBulk",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceSendNowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/xlsx": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createInvoicesByExcel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInvoicesByExcelResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/bulk": {
      "post": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "createInvoice_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceCreateWithAdditionalRecipientsDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/country-settings": {
      "get": {
        "tags": [
          "country-settings-manager-controller"
        ],
        "operationId": "getCountrySettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountrySettingDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "country-settings-manager-controller"
        ],
        "operationId": "createCountrySetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountrySettingCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CountrySettingDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/{vendorUuid}/check-all": {
      "post": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "checkRecordsAddable",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/SubscriptionCheckBulkResultDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/internal/subscriptions/recurring": {
      "post": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "recurringJob",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/notify_payment": {
      "post": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "notifyPayment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/items/{subscriptionItemId}/pay": {
      "post": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "payPreClaimQuota",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-StepPay-Actor",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MANAGER",
                "V1",
                "RENEW",
                "CUSTOMER",
                "SYSTEM"
              ]
            }
          },
          {
            "name": "X-StepPay-Dry-Run",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreClaimQuotaPaymentRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/check_excel_records/{vendorUuid}": {
      "post": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "checkExcelRecords",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UsageRecordCheckRequestDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageRecordCheckResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/migrate": {
      "post": {
        "tags": [
          "product-internal-controller"
        ],
        "operationId": "optionMigrate",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/badge": {
      "post": {
        "tags": [
          "product-internal-controller"
        ],
        "operationId": "deleteEndedBadge",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "createOrderByAppstore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppstoreOrderCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/send-invoices": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "sendInvoices",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/rollback-transactions": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "rollbackTransactions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/pos": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "createOfflineOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineOrderCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfflineOrderResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/mapper": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "priceModuleMapper_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceModuleMappingRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceModuleInputDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/expire-invoices": {
      "post": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "expireInvoices",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/command": {
      "post": {
        "tags": [
          "command-router-service"
        ],
        "operationId": "handler",
        "parameters": [
          {
            "name": "CommandBus-Routing-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CommandBus-Type-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/cms/webhook": {
      "post": {
        "tags": [
          "appstore-webhook-controller"
        ],
        "operationId": "webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsWebhookPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/shipping-list": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "getShippingList",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingListItemDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "createShipping",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingListCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/pause": {
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "pause",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPauseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/change-pay-datetime": {
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "changePayDatetimeSubscription_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionChangePayDatetimeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/cancel": {
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "cancelSubscription_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/active": {
      "post": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "activeSubscription_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/quotations": {
      "post": {
        "tags": [
          "quotation-customer-controller"
        ],
        "operationId": "createQuotation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuotationCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QuotationCreatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "summary": "주문 리스트 조회",
        "operationId": "getOrderList_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageOrderListCustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "summary": "주문 생성",
        "operationId": "createOrder_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/productCode/{productCode}": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "createOrderAndTransaction",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAndTransactionCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderIdKeyDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/payment-method": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "addCustomerPaymentMethod",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/idKey/{idKey}/transactions": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "startTransaction_1",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/customer/webauthn/register": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "authRegisterWebAuthn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAuthnAuthDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/customer/webauthn/pay": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "authPaymentWebAuthn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAuthnAuthDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/customer/register": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "registerWebAuthn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebAuthnRegisterDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/card-method": {
      "post": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "addCardMethodInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardMethodDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "updateCardMethodInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardMethodDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/carts/add": {
      "post": {
        "tags": [
          "장바구니 API (Customer)"
        ],
        "operationId": "cartAdd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartListCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartListCache"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/subscriptions/{subscriptionId}/manual-renew": {
      "post": {
        "tags": [
          "subscription-admin-controller"
        ],
        "operationId": "manualRenew",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GWAdminDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/subscriptions/{subscriptionId}/manual-notify": {
      "post": {
        "tags": [
          "subscription-admin-controller"
        ],
        "operationId": "manualNotify",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GWAdminDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/subscriptions/change-subscription-items-price": {
      "post": {
        "tags": [
          "subscription-admin-controller"
        ],
        "operationId": "changeSubscriptionItemsPrice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionChangePriceAdminDTO": {
                    "$ref": "#/components/schemas/SubscriptionChangePriceAdminDTO"
                  },
                  "gwAdminDTO": {
                    "$ref": "#/components/schemas/GWAdminDTO"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}/status": {
      "patch": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 게시 상태 변경",
        "description": "상품 게시 상태를 변경할 때 호출합니다. SALE, OUT_OF_STOCK, UNSOLD 사용 가능",
        "operationId": "updateProductStatus_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "상품 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "변경할 상태",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "SALE",
                "OUT_OF_STOCK",
                "UNSOLD",
                "WAITING_APPROVAL",
                "REJECTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 변경됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderIdOrCode}/cancel": {
      "patch": {
        "tags": [
          "주문 API"
        ],
        "summary": "주문 취소",
        "description": "주문을 취소할 때 호출합니다. 결제가 완료된 주문건은 환불되며, 그렇지 않은 주문은 취소됩니다.",
        "operationId": "cancelOrder",
        "parameters": [
          {
            "name": "orderIdOrCode",
            "in": "path",
            "description": "주문 번호",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상적으로 취소됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "주문을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/state": {
      "patch": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "changeState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QuotationStateChangeDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/{orderCode}/cancel": {
      "patch": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "cancelOrder_1",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerFullReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/status/paid": {
      "patch": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "completeOrders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/status/{deliveryCode}/to/{toStatus}": {
      "patch": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "changeStatusToStatus_2",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PREPARING",
                "SUSPENDED",
                "ON_THE_WAY",
                "COMPLETED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/status/{deliveryCode}/depart": {
      "patch": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "changeStatusToOnTheWay",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryTrackingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/status/{deliveryCode}/arrive": {
      "patch": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "changeStatusToCompleted",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/status/start": {
      "patch": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "changeStatusToPreparing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryBunchCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/info/{deliveryCode}/addItems": {
      "patch": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "addItems",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryItemSingle"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/rejectTest": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_COLLECTION_COMPLETED -> RETURN_REJECTED",
        "operationId": "patchReturnRejectTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/prepareRejectDelivery": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "-> RETURN_REJECT_DELIVERY_PREPARING",
        "operationId": "patchReturnPrepareRejectDelivery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/forceStart": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "X_DELIVERY_ -> RETURN_COLLECTION_PREPARING",
        "operationId": "patchReturnManualStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/forceRefund": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "-> RETURN_REFUNDING,RETURN_REFUNDED,RETURN_REFUNDED_PARTIALLY",
        "operationId": "patchCancellationForce",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CSRefundManagerReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/denyRequest": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_REQUEST -> RETURN_REQUEST_REJECTED",
        "operationId": "patchReturnDenyRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/defer": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "X -> RETURN_PENDING",
        "operationId": "patchExchangeDefer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/deferBack": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_PENDING -> X",
        "operationId": "patchExchangeDeferBack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/completeRejectDelivery": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "-> RETURN_REJECT_DELIVERY_COMPLETED",
        "operationId": "patchReturnCompleteRejectDelivery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/completeCollection": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_COLLECTION_PREPARING, RETURN_COLLECTION_ON_THE_WAY -> RETURN_COLLECTION_COMPLETED",
        "operationId": "patchExchangeCompleteCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/approveTest": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_COLLECTION_COMPLETED -> RETURN_REFUNDING,RETURN_REFUNDED,RETURN_REFUNDED_PARTIALLY",
        "operationId": "patchReturnApproveTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CSRefundManagerReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/acceptRequest": {
      "patch": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "description": "RETURN_REQUEST -> RETURN_COLLECTION_PREPARING",
        "operationId": "patchReturnAcceptRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/rejectTest": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_COLLECTION_COMPLETED -> EXCHANGE_REJECTED",
        "operationId": "patchExchangeRejectTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/prepareDelivery": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "-> EXCHANGE_DELIVERY_PREPARING, EXCHANGE_REJECT_DELIVERY_PREPARING",
        "operationId": "patchExchangePrepareDelivery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/forceStart": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "X_DELIVERY_ -> EXCHANGE_REQUEST",
        "operationId": "patchExchangeManualStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/denyRequest": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_REQUEST -> EXCHANGE_REQUEST_REJECTED",
        "operationId": "patchExchangeDenyRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/defer": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_PENDING -> 이전상태",
        "operationId": "patchExchangeDefer_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/deferBack": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_PENDING -> 이전상태",
        "operationId": "patchExchangeDeferBack_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/completeDelivery": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "-> EXCHANGE_DELIVERY_COMPLETED, EXCHANGE_REJECT_DELIVERY_COMPLETED",
        "operationId": "patchExchangeCompleteDelivery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/completeCollection": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_COLLECTION_PREPARING -> EXCHANGE_COLLECTION_COMPLETED",
        "operationId": "patchExchangeCompleteCollection_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/acceptRequest": {
      "patch": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "description": "EXCHANGE_REQUEST -> EXCHANGE_COLLECTION_PREPARING",
        "operationId": "patchExchangeAcceptRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations/status/manualRefund": {
      "patch": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "description": "CANCELLATION_REFUNDING -> CANCELLATION_REFUNDED",
        "operationId": "patchCancellationManual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancellationPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations/status/forceRefund": {
      "patch": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "description": "CANCELLATION_REQUEST -> CANCELLATION_REFUNDED",
        "operationId": "patchCancellationForce_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CSRefundManagerReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations/status/denyRefund": {
      "patch": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "description": "CANCELLATION_REQUEST -> CANCELLATION_REQUEST_DENIED",
        "operationId": "patchCancellationDeny",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancellationPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations/status/acceptRefund": {
      "patch": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "description": "CANCELLATION_REQUEST -> CANCELLATION_REFUNDING",
        "operationId": "patchCancellationAccept",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CSRefundManagerReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/shipping-list/{customerShippingId}/select": {
      "patch": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "selectCustomerShipping",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerShippingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/{orderCode}/cancel": {
      "patch": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "cancelOrder_2",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/card-method/validate": {
      "patch": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "validateCardMethodInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPinCodeReqDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPinCodeValidationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/card-method/reset": {
      "patch": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "resetCardMethodInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/delivery/status/{deliveryCode}/receive": {
      "patch": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "changeToCompletedStatus",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchCustomerSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/returns/status/start": {
      "patch": {
        "tags": [
          "cs-return-customer-controller"
        ],
        "description": "X_DELIVERY_COMPLETED -> RETURN_REQUEST",
        "operationId": "patchReturnStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnStart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/returns/status/receiveDelivery": {
      "patch": {
        "tags": [
          "cs-return-customer-controller"
        ],
        "description": "반품 재배송 도착[준비중]",
        "operationId": "patchReturnReceiveDelivery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/returns/status/departCollection": {
      "patch": {
        "tags": [
          "cs-return-customer-controller"
        ],
        "description": "RETURN_COLLECTION_PREPARING -> RETURN_COLLECTION_ON_THE_WAY",
        "operationId": "patchReturnDepartCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/returns/status/cancelStart": {
      "patch": {
        "tags": [
          "cs-return-customer-controller"
        ],
        "description": "X_DELIVERY_COMPLETED -> RETURN_REQUEST_CANCELLED",
        "operationId": "patchReturnCancelRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReturnPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/exchanges/status/start": {
      "patch": {
        "tags": [
          "cs-exchange-customer-controller"
        ],
        "description": "X_DELIVERY_COMPLETED -> EXCHANGE_REQUEST",
        "operationId": "patchExchangeStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeStart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/exchanges/status/cancelStart": {
      "patch": {
        "tags": [
          "cs-exchange-customer-controller"
        ],
        "description": "EXCHANGE_REQUEST -> EXCHANGE_REQUEST_CANCELLED",
        "operationId": "patchExchangeCancelStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangePatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/cancellations/status/start": {
      "patch": {
        "tags": [
          "cs-cancellation-customer-controller"
        ],
        "description": "PAID -> CANCELLATION_REQUEST",
        "operationId": "patchCancellationSubStatusStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancellationStart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/cancellations/status/cancelStart": {
      "patch": {
        "tags": [
          "cs-cancellation-customer-controller"
        ],
        "description": "CANCELLATION_REQUEST -> CANCELLATION_REQUEST_CANCELLED",
        "operationId": "patchCancellationCancelStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancellationPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CSItemSingleDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions": {
      "get": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 목록 조회",
        "description": "구독 목록을 반환합니다.",
        "operationId": "getSubscriptionList",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "조회 시작 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "조회 끝 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호(기본값: 0)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기(기본값: 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준값 - 기본값: 생성 시점",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionListV1PageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/items/{itemId}/options": {
      "get": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 항목에서 사용할 수 있는 옵션 가져오기",
        "description": "구독 항목에서 사용할 수 있는 옵션 목록을 반환합니다.",
        "operationId": "getSubscriptionItemOptions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "구독 항목 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductOptionGroupDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{subscriptionId}/calculate": {
      "get": {
        "tags": [
          "구독 API"
        ],
        "summary": "사용량 정산",
        "description": "구독 중간에 사용량과 예상 결제 금액을 확인할 때 사용합니다.",
        "operationId": "calculateSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "사용량을 사용할 수 있는 가격 플랜임"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCalculatedV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/subscriptions/{id}": {
      "get": {
        "tags": [
          "구독 API"
        ],
        "summary": "구독 상세 조회",
        "description": "구독의 상세 정보를 반환합니다.",
        "operationId": "getSubscriptionDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "구독을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{code}": {
      "get": {
        "tags": [
          "상품 API"
        ],
        "summary": "상품 상세 조회",
        "description": "상품 상세정보를 반환합니다.",
        "operationId": "getOne",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "상품 코드",
            "required": true,
            "schema": {
              "type": "string",
              "description": "상품 코드"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "상품을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderIdOrCode}": {
      "get": {
        "tags": [
          "주문 API"
        ],
        "summary": "주문 상세 조회",
        "description": "주문 상세정보를 반환합니다.",
        "operationId": "getOrderDetail",
        "parameters": [
          {
            "name": "orderIdOrCode",
            "in": "path",
            "description": "주문 코드",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "주문을 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV1DTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{idOrCode}/pay": {
      "get": {
        "tags": [
          "주문 API"
        ],
        "summary": "주문 결제링크 리다이렉트",
        "description": "주문 결제링크로 리다이렉트 됩니다.",
        "operationId": "payOrder",
        "parameters": [
          {
            "name": "idOrCode",
            "in": "path",
            "description": "주문 번호 또는 코드(주문 번호는 deprecate 될 예정입니다)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "successUrl",
            "in": "query",
            "description": "결제 성공시 리다이렉트 될 URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorUrl",
            "in": "query",
            "description": "결제 실패시 리다이렉트 될 URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelUrl",
            "in": "query",
            "description": "결제 취소시 리다이렉트 될 URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "결제링크로 리다이렉트 됩니다.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "정보를 찾지 못 함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delivery/order/{orderCode}": {
      "get": {
        "tags": [
          "배송 API"
        ],
        "operationId": "searchDeliveryByOrder",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryBunchSingleV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "tags": [
          "고객 API"
        ],
        "summary": "고객 목록 조회",
        "description": "고객 목록을 반환합니다. Pagination 형태로 지원됩니다.",
        "operationId": "getCustomerList",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "조회 시작 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "조회 끝 시점",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "페이지 번호(기본값: 0)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "페이지 크기(기본값: 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "정렬 기준값 - 기본값: 생성 시점",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "검색 키워드 - 이름과 이메일에서 검색됩니다.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerListPageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "tags": [
          "고객 API"
        ],
        "summary": "고객 상세 조회",
        "description": "고객 상세정보를 반환합니다.",
        "operationId": "getCustomerDetail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "고객 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/products": {
      "get": {
        "tags": [
          "상품 API (Public)"
        ],
        "operationId": "getProductList_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageProductListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/products/{productCode}": {
      "get": {
        "tags": [
          "상품 API (Public)"
        ],
        "operationId": "getProductByCode",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requireVendor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/products/summary": {
      "get": {
        "tags": [
          "상품 API (Public)"
        ],
        "operationId": "getCountsOfStatus",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/products/by-codes": {
      "get": {
        "tags": [
          "상품 API (Public)"
        ],
        "operationId": "getProductListByCodes",
        "parameters": [
          {
            "name": "product-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTOForPricingTable"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/product-categories": {
      "get": {
        "tags": [
          "category-public-controller"
        ],
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/orders/{idOrCode}/pay": {
      "get": {
        "tags": [
          "주문 API (Public)"
        ],
        "summary": "주문 결제링크 생성",
        "operationId": "payOrder_1",
        "parameters": [
          {
            "name": "idOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "successUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmUuid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/orders/test": {
      "get": {
        "tags": [
          "주문 API (Public)"
        ],
        "operationId": "redirectTestPayURL",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/orders/idKey/{idKey}": {
      "get": {
        "tags": [
          "주문 API (Public)"
        ],
        "operationId": "findOderByIdKey",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UrlPayOrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/orders/idKey/realm/{idKey}": {
      "get": {
        "tags": [
          "주문 API (Public)"
        ],
        "operationId": "getRealmUuidByIdKey",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "getSubscriptionList_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SubscriptionSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageSubscriptionListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{subscriptionId}/calculate": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "calculateSubscription_1",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/{id}": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "getSubscriptionDetail_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/xls/download": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "downloadXlsFile",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "UNPAID",
                  "PENDING_PAUSE",
                  "PAUSE",
                  "PENDING_CANCEL",
                  "EXPIRED",
                  "CANCELED",
                  "INCOMPLETE",
                  "QUEUEING"
                ]
              }
            }
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/xls/download/usage": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "downloadXlsFileForUsage",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/summary": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "getCountsOfStatus_1",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SubscriptionSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/subscriptions/option/{id}": {
      "get": {
        "tags": [
          "subscription-manager-controller"
        ],
        "operationId": "getSubscriptionId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "옵션 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations": {
      "get": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "getQuotationList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/QuotationSearch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageQuotationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/{quotationId}": {
      "get": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "getQuotation",
        "parameters": [
          {
            "name": "quotationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QuotationDetailDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/quotations/summary": {
      "get": {
        "tags": [
          "quotation-manager-controller"
        ],
        "operationId": "getQuotationSummary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QuotationSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/prices/list": {
      "get": {
        "tags": [
          "price-manager-controller"
        ],
        "operationId": "priceListWithSearching",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceSearchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/navigation": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getNavigation",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NavigationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/vendors/{vendorUuid}/count": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "countProducts",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/type/bundles": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "productBundleList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BundleProductListDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/summary": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getCountsOfStatus_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/not-in-group": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getProductListNotInGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageProductListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/list": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "productListWithSearching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BundleProductListDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/in-group/{groupId}": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getProductsInGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/exists": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "existsByStatusIsSale",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/all/prices/all": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getProductAndPriceWithoutPagination",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/{orderCode}": {
      "get": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "getOrderDetail_1",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/{idOrCode}/pay": {
      "get": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "payOrder_2",
        "parameters": [
          {
            "name": "idOrCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "successUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/vendors/{vendorUuid}/count": {
      "get": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "countOrders",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/orders/summary": {
      "get": {
        "tags": [
          "주문 API (Manager)"
        ],
        "operationId": "getOrderPaymentSummary",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "DEPOSIT_WAITING",
                "CANCELLED",
                "PAID",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY",
                "ORDER_DELIVERY_PREPARING",
                "ORDER_DELIVERY_SUSPENDED",
                "ORDER_DELIVERY_ON_THE_WAY",
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING",
                "EXCHANGE_REJECTED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REJECTED",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY",
                "PAYMENT_FAILURE",
                "FINISHED_EXCHANGE_AVAILABLE",
                "FINISHED_RETURN_AVAILABLE",
                "FINISHED_SUCCESSFULLY"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPaymentSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/{id}/pay": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "payOrder_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "successUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "errorUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/xls/download": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "downloadXlsFile_1",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "임시저장",
                  "발송 예약",
                  "발송",
                  "결제 완료",
                  "미납입",
                  "발송 실패"
                ]
              }
            }
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/invoices/summary": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getInvoiceSummary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/summary": {
      "get": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "getDeliverySummary",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilter"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverySummaryAggregation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/list": {
      "get": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "getDeliveryList",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilter"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDeliveryBunchSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/delivery/listBy/order": {
      "get": {
        "tags": [
          "delivery-manager-controller"
        ],
        "operationId": "searchDeliveryByOrder_1",
        "parameters": [
          {
            "name": "order_codes",
            "in": "query",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/dashboard/sales-status": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "summary": "주문 현황",
        "operationId": "getSalesStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesStatusDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/dashboard/order-status": {
      "get": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "getOrderStatus",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderStatusSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getCustomerList_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCustomerListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/{id}": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getCustomerDetail_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/list": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "customerListWithSearching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerListSearchDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/dormant": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getDormantCustomerList",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCustomerListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/country-summary": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getCountrySummary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerCountrySummaryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/byUsername": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getCustomerOneByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/customers/byEmail": {
      "get": {
        "tags": [
          "customer-manager-controller"
        ],
        "operationId": "getCustomerOneByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns": {
      "get": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "operationId": "getReturns",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilterReturnSubStatusType"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CSList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/returns/status/availableTo": {
      "get": {
        "tags": [
          "cs-return-manager-controller"
        ],
        "operationId": "getStateAvailableTo",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECTED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ORDER_DELIVERY_COMPLETED",
                      "EXCHANGE_DELIVERY_COMPLETED",
                      "EXCHANGE_REQUEST_REJECTED",
                      "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "RETURN_REQUEST",
                      "RETURN_REQUEST_CANCELLED",
                      "RETURN_REQUEST_REJECTED",
                      "RETURN_COLLECTION_PREPARING",
                      "RETURN_COLLECTION_ON_THE_WAY",
                      "RETURN_COLLECTION_COMPLETED",
                      "RETURN_REJECTED",
                      "RETURN_REJECT_DELIVERY_PREPARING",
                      "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                      "RETURN_REJECT_DELIVERY_COMPLETED",
                      "RETURN_PENDING",
                      "RETURN_REFUNDING",
                      "RETURN_REFUNDED",
                      "RETURN_REFUNDED_PARTIALLY"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges": {
      "get": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "operationId": "getExchanges",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilterExchangeSubStatusType"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CSList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/exchanges/status/availableTo": {
      "get": {
        "tags": [
          "cs-exchange-manager-controller"
        ],
        "operationId": "getStateAvailableTo_1",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "RETURN_REQUEST",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ORDER_DELIVERY_COMPLETED",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "CANCELLATION_REQUEST_DENIED",
                      "RETURN_REQUEST",
                      "EXCHANGE_REQUEST",
                      "EXCHANGE_REQUEST_CANCELLED",
                      "EXCHANGE_REQUEST_REJECTED",
                      "EXCHANGE_COLLECTION_PREPARING",
                      "EXCHANGE_COLLECTION_ON_THE_WAY",
                      "EXCHANGE_COLLECTION_COMPLETED",
                      "EXCHANGE_DELIVERY_PREPARING",
                      "EXCHANGE_DELIVERY_ON_THE_WAY",
                      "EXCHANGE_DELIVERY_COMPLETED",
                      "EXCHANGE_REJECTED",
                      "EXCHANGE_REJECT_DELIVERY_PREPARING",
                      "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                      "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                      "EXCHANGE_PENDING"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations": {
      "get": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "operationId": "getCancellations",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilterCancellationSubStatusType"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CSList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/cs/cancellations/status/availableTo": {
      "get": {
        "tags": [
          "cs-cancellation-manager-controller"
        ],
        "description": "현재 상태에서 변경가능한 상태 출력",
        "operationId": "getStateAvailableTo_2",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAID",
                "CANCELLED",
                "ORDER_DELIVERY_PREPARING",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELLED",
                      "ORDER_DELIVERY_PREPARING",
                      "CANCELLATION_REQUEST",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "CANCELLATION_REQUEST_DENIED",
                      "CANCELLATION_REFUNDING",
                      "CANCELLATION_REFUNDED",
                      "CANCELLATION_REFUNDED_PARTIALLY"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions": {
      "get": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "getSubscriptionsBySubscriptionIds",
        "parameters": [
          {
            "name": "subscriptionItemIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/{vendorUuid}/{subscriptionItemId}/check": {
      "get": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "checkRecordAddable",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "checkingDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCheckResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/internal/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "subscription-internal-controller"
        ],
        "operationId": "getSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{productId}/prices/{priceId}": {
      "get": {
        "tags": [
          "price-internal-controller"
        ],
        "operationId": "getPrice",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{code}": {
      "get": {
        "tags": [
          "product-internal-controller"
        ],
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{code}/is_auto_install": {
      "get": {
        "tags": [
          "product-internal-controller"
        ],
        "operationId": "isAutoInstall",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/{orderCode}": {
      "get": {
        "tags": [
          "order-internal-controller"
        ],
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/invoices/{id}": {
      "get": {
        "tags": [
          "invoice-internal-controller"
        ],
        "operationId": "getInvoiceDetail_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}": {
      "get": {
        "tags": [
          "customer-internal-controller"
        ],
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}/subscriptions/summary": {
      "get": {
        "tags": [
          "customer-internal-controller"
        ],
        "operationId": "getCustomerSubscriptionsSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCustomerSubscriptionsSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}/payment-methods": {
      "get": {
        "tags": [
          "customer-internal-controller"
        ],
        "operationId": "checkPaymentMethodAndReturnIdKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pinCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "getSubscriptionList_2",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageSubscriptionListV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "getSubscriptionDetail_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionV1DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/{subscriptionId}/calculate": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "calculateSubscription_2",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "구독 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/subscriptions/products/{code}": {
      "get": {
        "tags": [
          "subscription-customer-controller"
        ],
        "operationId": "existsByProductCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/products": {
      "get": {
        "tags": [
          "product-customer-controller"
        ],
        "operationId": "getProductList_3",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageProductListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/products/{productCode}": {
      "get": {
        "tags": [
          "product-customer-controller"
        ],
        "operationId": "getProductByCode_1",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requireVendor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/products/{productCode}/check-subscribe": {
      "get": {
        "tags": [
          "product-customer-controller"
        ],
        "operationId": "checkProductSubscribeByCode",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/{orderCode}": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "summary": "주문 조회",
        "operationId": "getOrderDetail_2",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/summary": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "getOrderSummary",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderSummaryAggregationCustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/idKey/{idKey}": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "findOderByIdKey_1",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UrlPayOrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/customer/webauthn-register": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "getWebAuthn",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/orders/customer/webauthn-auth": {
      "get": {
        "tags": [
          "주문 API (Customer)"
        ],
        "operationId": "getWebAuthnAuthentication",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WebAuthnDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/delivery/summary": {
      "get": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "getDeliverySummary_1",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilter"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverySummaryAggregation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/delivery/list": {
      "get": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "getDeliveryList_1",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RequestListWithFilter"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PageRequestDTO"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDeliveryBunchCustomerSingle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/delivery/info/{deliveryCode}/tracking": {
      "get": {
        "tags": [
          "delivery-customer-controller"
        ],
        "operationId": "getTracking",
        "parameters": [
          {
            "name": "deliveryCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTrackingDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/customers": {
      "get": {
        "tags": [
          "customer-customer-controller"
        ],
        "operationId": "findOneByUuid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/returns/status/availableTo": {
      "get": {
        "tags": [
          "cs-return-customer-controller"
        ],
        "operationId": "getStateAvailableTo_3",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECTED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ORDER_DELIVERY_COMPLETED",
                      "EXCHANGE_DELIVERY_COMPLETED",
                      "EXCHANGE_REQUEST_REJECTED",
                      "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "RETURN_REQUEST",
                      "RETURN_REQUEST_CANCELLED",
                      "RETURN_REQUEST_REJECTED",
                      "RETURN_COLLECTION_PREPARING",
                      "RETURN_COLLECTION_ON_THE_WAY",
                      "RETURN_COLLECTION_COMPLETED",
                      "RETURN_REJECTED",
                      "RETURN_REJECT_DELIVERY_PREPARING",
                      "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                      "RETURN_REJECT_DELIVERY_COMPLETED",
                      "RETURN_PENDING",
                      "RETURN_REFUNDING",
                      "RETURN_REFUNDED",
                      "RETURN_REFUNDED_PARTIALLY"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/exchanges/status/availableTo": {
      "get": {
        "tags": [
          "cs-exchange-customer-controller"
        ],
        "operationId": "getStateAvailableTo_4",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "RETURN_REQUEST",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ORDER_DELIVERY_COMPLETED",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "CANCELLATION_REQUEST_DENIED",
                      "RETURN_REQUEST",
                      "EXCHANGE_REQUEST",
                      "EXCHANGE_REQUEST_CANCELLED",
                      "EXCHANGE_REQUEST_REJECTED",
                      "EXCHANGE_COLLECTION_PREPARING",
                      "EXCHANGE_COLLECTION_ON_THE_WAY",
                      "EXCHANGE_COLLECTION_COMPLETED",
                      "EXCHANGE_DELIVERY_PREPARING",
                      "EXCHANGE_DELIVERY_ON_THE_WAY",
                      "EXCHANGE_DELIVERY_COMPLETED",
                      "EXCHANGE_REJECTED",
                      "EXCHANGE_REJECT_DELIVERY_PREPARING",
                      "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                      "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                      "EXCHANGE_PENDING"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/cs/cancellations/status/availableTo": {
      "get": {
        "tags": [
          "cs-cancellation-customer-controller"
        ],
        "operationId": "getStateAvailableTo_5",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAID",
                "CANCELLED",
                "ORDER_DELIVERY_PREPARING",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELLED",
                      "ORDER_DELIVERY_PREPARING",
                      "CANCELLATION_REQUEST",
                      "CANCELLATION_REQUEST_CANCELLED",
                      "CANCELLATION_REQUEST_DENIED",
                      "CANCELLATION_REFUNDING",
                      "CANCELLATION_REFUNDED",
                      "CANCELLATION_REFUNDED_PARTIALLY"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/carts": {
      "get": {
        "tags": [
          "장바구니 API (Customer)"
        ],
        "operationId": "cartList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartListCache"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/products/customer/counts": {
      "get": {
        "tags": [
          "product-admin-controller"
        ],
        "operationId": "getProductsForCustomers",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "gwAdminDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GWAdminDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSubscriptionCustomerListDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/orders/{orderId}/invoice": {
      "get": {
        "tags": [
          "order-admin-controller"
        ],
        "operationId": "getInvoice",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "gwAdminDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GWAdminDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionNotifyPaymentMessageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{customerId}/payment-method/{methodId}": {
      "delete": {
        "tags": [
          "고객 API"
        ],
        "summary": "결제수단 삭제",
        "description": "결제수단을 삭제할 때 사용합니다.",
        "operationId": "deletePaymentMethods",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "고객 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "methodId",
            "in": "path",
            "description": "결제수단 번호",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "결제수단이 정상적으로 삭제됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "고객 또는 삭제할 결제수단을 찾지 못함",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUnit"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productId}/link/{deletingProductId}": {
      "delete": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "unlinkProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "deletingProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/products/{productCode}/option-groups/{groupId}": {
      "delete": {
        "tags": [
          "상품 API (Manager)"
        ],
        "operationId": "deleteOptionGroup",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/carts/remove": {
      "delete": {
        "tags": [
          "장바구니 API (Customer)"
        ],
        "operationId": "cartRemove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartListRemoveRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartListCache"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "ReturnError": {
        "type": "object"
      },
      "InternalWebHookRequestDTO": {
        "required": [
          "amount",
          "idKey",
          "orderId",
          "paymentGateway",
          "paymentMethod",
          "webHookType"
        ],
        "type": "object",
        "properties": {
          "webHookType": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "BILLKEY",
              "VBANK",
              "CANCELED",
              "USER_CANCELED",
              "FAILED",
              "CMS"
            ]
          },
          "idKey": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "paymentInfo": {
            "type": "string"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "amount": {
            "type": "number"
          },
          "options": {
            "type": "object"
          }
        }
      },
      "BundleProductDTO": {
        "title": "번들 상품 정보",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "options": {
            "type": "array",
            "description": "상품 옵션 목록",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "상품 가격플랜 목록",
            "items": {
              "$ref": "#/components/schemas/PriceDTO"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          }
        },
        "description": "번들 상품 정보"
      },
      "CSItemDTO": {
        "required": [
          "actor",
          "category",
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "actor": {
            "type": "string",
            "enum": [
              "SYSTEM",
              "SELLER",
              "BUYER"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "CANCELLATION",
              "EXCHANGE",
              "RETURN"
            ]
          },
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "CS기록"
      },
      "Claim": {
        "title": "청구 방식 정보",
        "required": [
          "billingDate",
          "methodType",
          "whenToClaimType"
        ],
        "type": "object",
        "properties": {
          "methodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "provideStartDay": {
            "type": "integer",
            "description": "서비스 제공기간 시작일",
            "format": "int32"
          }
        },
        "description": "청구 방식 정보"
      },
      "CountrySettingDTO": {
        "required": [
          "countryCode",
          "currencyCode",
          "id",
          "isDefault",
          "taxRate",
          "timezoneName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "countryCode": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "taxRate": {
            "type": "number"
          }
        },
        "description": "국가 설정 정보"
      },
      "CustomerDTO": {
        "title": "고객 상세 정보",
        "required": [
          "additionalRecipients",
          "attributes",
          "createdAt",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms",
          "orderCount",
          "orders",
          "paymentMethods",
          "subscriptions",
          "totalPurchasedPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "name": {
            "type": "string",
            "description": "고객 이름"
          },
          "email": {
            "type": "string",
            "description": "고객 이메일"
          },
          "phone": {
            "type": "string",
            "description": "고객 전화번호"
          },
          "orderCount": {
            "type": "integer",
            "description": "고객이 주문한 주문 개수",
            "format": "int32"
          },
          "totalPurchasedPrice": {
            "type": "number",
            "description": "고객이 구매한 전체 금액"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "orders": {
            "type": "array",
            "description": "고객과 연관된 주소 목록",
            "items": {
              "$ref": "#/components/schemas/CustomerOrderDTO"
            }
          },
          "subscriptions": {
            "type": "array",
            "description": "고객과 연관된 구독 목록",
            "items": {
              "$ref": "#/components/schemas/CustomerSubscriptionDTO"
            }
          },
          "paymentMethods": {
            "type": "array",
            "description": "고객이 사용중인 결제수단 목록",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodDTO"
            }
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "고객 추가 데이터"
            },
            "description": "고객 추가 데이터"
          },
          "createdAt": {
            "type": "string",
            "description": "고객 생성 시점",
            "format": "date-time"
          },
          "additionalRecipients": {
            "type": "array",
            "description": "추가 수신인",
            "items": {
              "type": "string",
              "description": "추가 수신인"
            }
          }
        }
      },
      "DemoCycle": {
        "required": [
          "num",
          "type"
        ],
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          }
        },
        "description": "무료체험이 적용됐는지 적용 여부 및 기간"
      },
      "FirstSale": {
        "title": "첫 구매 할인 정보",
        "required": [
          "enabled",
          "price"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부"
          },
          "price": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64"
          }
        },
        "description": "첫 구매 할인 정보"
      },
      "NiceCmsDTO": {
        "required": [
          "accountHolderSocialSecurityNumber",
          "bankAccount",
          "bankCode",
          "companyName",
          "corporateManager",
          "date",
          "status"
        ],
        "type": "object",
        "properties": {
          "corporateManager": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "accountHolderSocialSecurityNumber": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACCOUNT_PENDING",
              "ACCOUNT_FAIL",
              "ACCOUNT_SUCCESS",
              "WITHDRAW_PENDING",
              "WITHDRAW_FAIL",
              "WITHDRAW_SUCCESS"
            ]
          },
          "errorReturn": {
            "type": "string"
          }
        },
        "description": "NICE CMS 정보"
      },
      "OptionCombinationDTO": {
        "required": [
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "HIDDEN"
            ]
          }
        },
        "description": "옵션 조합"
      },
      "OrderCustomerDTO": {
        "title": "주문 고객 정보",
        "required": [
          "attributes",
          "createdAt",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "description": "고객 uuid",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "name": {
            "type": "string",
            "description": "이름"
          },
          "email": {
            "type": "string",
            "description": "이메일"
          },
          "phone": {
            "type": "string",
            "description": "전화번호"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingV1DTO"
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "고객 추가 데이터"
            },
            "description": "고객 추가 데이터"
          },
          "createdAt": {
            "type": "string",
            "description": "고객 생성 시점",
            "format": "date-time"
          }
        },
        "description": "주문 고객 정보"
      },
      "OrderDTO": {
        "title": "주문 상세 정보",
        "required": [
          "code",
          "discountedAmount",
          "leftAmount",
          "orderCode",
          "orderId",
          "orderLogs",
          "paidAmount",
          "productName",
          "relatedOrders",
          "returnedAmount",
          "subscriptions",
          "type"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "orderCode": {
            "type": "string",
            "description": "주문 코드"
          },
          "type": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "paidAmount": {
            "type": "number",
            "description": "주문 금액"
          },
          "returnedAmount": {
            "type": "number",
            "description": "환불된 금액"
          },
          "leftAmount": {
            "type": "number",
            "description": "남은 금액"
          },
          "discountedAmount": {
            "type": "number",
            "description": "할인 금액"
          },
          "productName": {
            "type": "string",
            "description": "상품 이름"
          },
          "items": {
            "type": "array",
            "description": "주문 항목들",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/OrderCustomerDTO"
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "paymentDueDate": {
            "type": "string",
            "description": "결제일 지정",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "청구서 사용시, 구매 기한 시점",
            "format": "date-time"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "payment": {
            "$ref": "#/components/schemas/OrderPaymentDTO"
          },
          "orderLogs": {
            "type": "array",
            "description": "주문 메모 목록",
            "items": {
              "$ref": "#/components/schemas/OrderLogDTO"
            }
          },
          "code": {
            "type": "string",
            "description": "주문 코드"
          },
          "idKey": {
            "type": "string",
            "description": "결제 정보 조회용 idKey"
          },
          "subscriptions": {
            "type": "array",
            "description": "관련 구독 목록",
            "items": {
              "$ref": "#/components/schemas/OrderSubscriptionDTO"
            }
          },
          "parentSubscription": {
            "$ref": "#/components/schemas/OrderSubscriptionDTO"
          },
          "relatedOrders": {
            "type": "array",
            "description": "관련 주문",
            "items": {
              "$ref": "#/components/schemas/RelatedOrder"
            }
          },
          "calculateStartDate": {
            "type": "string",
            "description": "합산 시작 시점",
            "format": "date-time"
          },
          "calculateEndDate": {
            "type": "string",
            "description": "합산 끝 시점",
            "format": "date-time"
          },
          "childOrders": {
            "type": "array",
            "description": "하위 벤더의 주문",
            "items": {
              "$ref": "#/components/schemas/OrderDTO"
            }
          }
        },
        "description": "청구서 주문 정보"
      },
      "OrderItemDTO": {
        "title": "주문 항목 정보",
        "required": [
          "code",
          "createdAt",
          "currency",
          "id",
          "minimumQuantity",
          "modifiedAt",
          "orderItemCode",
          "orderedPlanName",
          "orderedProductName",
          "orderedProductType",
          "paidAmount",
          "quantity",
          "selectedProductOptionIds",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "currency": {
            "type": "string",
            "description": "통화 코드"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDTO"
          },
          "type": {
            "type": "string",
            "description": "주문 항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "status": {
            "type": "string",
            "description": "주문 항목 상태",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 상품 옵션"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션 ID 목록",
            "items": {
              "type": "integer",
              "description": "선택한 옵션 ID 목록",
              "format": "int64"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "canceledDateTime": {
            "type": "string",
            "description": "취소 시점",
            "format": "date-time"
          },
          "orderItemCode": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "orderedProductType": {
            "type": "string",
            "description": "주문 시점의 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "orderedProductName": {
            "type": "string",
            "description": "주문 시점의 상품 이름"
          },
          "orderedPlanName": {
            "type": "string",
            "description": "주문 시점의 가격 플랜 이름"
          },
          "discountName": {
            "type": "string",
            "description": "할인 타입(주문 항목 타입이 DISCOUNT인 경우)"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "description": "연관된 주문 항목 (주문 항목 타입이 DISCOUNT인 경우)",
            "format": "int64"
          },
          "priceSetupType": {
            "type": "string",
            "description": "기본료 주문 항목인 경우 1회 또는 정기적으로 구분하는 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycle"
          },
          "usedCount": {
            "type": "number",
            "description": "사용량(사용량 기반 과금 상품인 경우)"
          },
          "usageFormula": {
            "type": "string",
            "description": "사용량 계산식"
          },
          "deliveryCode": {
            "type": "string",
            "description": "배송코드(매핑값)"
          },
          "histories": {
            "type": "array",
            "description": "CS기록",
            "items": {
              "$ref": "#/components/schemas/CSItemDTO"
            }
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 구매 가능 수량",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "parentOrderItemCode": {
            "type": "string",
            "description": "파생 주문 아이템의 부모(번들) 주문 아이템 코드"
          },
          "unitChangeHistory": {
            "type": "array",
            "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)",
            "items": {
              "$ref": "#/components/schemas/OrderItemUnitChangeHistoryV1DTO"
            }
          },
          "unitCount": {
            "type": "integer",
            "description": "계정 수(계정 수 기반 과금 상품인 경우",
            "format": "int64"
          }
        },
        "description": "주문 항목들"
      },
      "OrderItemUnitChangeHistoryV1DTO": {
        "title": "계정 수 변동 내역",
        "required": [
          "changedCount",
          "days"
        ],
        "type": "object",
        "properties": {
          "changedCount": {
            "type": "integer",
            "description": "계정 수 증감량",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "description": "요금 계산 기준 날짜",
            "format": "int64"
          }
        },
        "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)"
      },
      "OrderLogDTO": {
        "title": "주문 메모 정보",
        "required": [
          "content",
          "createdAt",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "메모 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "메모 타입",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "content": {
            "type": "string",
            "description": "메모 내용"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          }
        },
        "description": "주문 메모 목록"
      },
      "OrderPaymentDTO": {
        "title": "결제 상세 정보",
        "required": [
          "amount",
          "discount"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "description": "결제 수단",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "amount": {
            "type": "integer",
            "description": "결제 금액",
            "format": "int64"
          },
          "discount": {
            "type": "integer",
            "description": "할인 금액",
            "format": "int64"
          },
          "paymentReturn": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "PG사 반환값"
            },
            "description": "PG사 반환값"
          },
          "paymentReceiptUrl": {
            "type": "string",
            "description": "영수증 링크"
          },
          "paymentGateway": {
            "type": "string",
            "description": "사용한 PG",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "cardNumber": {
            "type": "string",
            "description": "결제 정보(카드 번호 등)"
          },
          "vbankDTO": {
            "$ref": "#/components/schemas/VBankDTO"
          },
          "niceCmsDTO": {
            "$ref": "#/components/schemas/NiceCmsDTO"
          },
          "customerDTO": {
            "$ref": "#/components/schemas/CustomerDTO"
          },
          "errorCode": {
            "type": "string",
            "description": "에러 코드(결제 실패시)"
          },
          "errorMessage": {
            "type": "string",
            "description": "에러 메세지(결제 실패시)"
          }
        },
        "description": "결제 상세 정보"
      },
      "OrderSubscriptionDTO": {
        "title": "주문 관련 구독 정보",
        "required": [
          "id",
          "interval",
          "intervalCount",
          "items",
          "price",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemDTO"
            }
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "startDate": {
            "type": "string",
            "description": "구독 시작 시점",
            "format": "date-time"
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "구독 만료 시점",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "description": "구독 주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "구독 주기",
            "format": "int32"
          },
          "trialEndDate": {
            "type": "string",
            "description": "체험기간 종료 시점",
            "format": "date-time"
          }
        },
        "description": "부모 구독 정보(갱신 결제일 경우)"
      },
      "Plan": {
        "title": "가격 플랜 정보",
        "required": [
          "description",
          "isHiddenFromShop",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "플랜 이름"
          },
          "description": {
            "type": "string",
            "description": "플랜 설명"
          },
          "detailDescription": {
            "type": "string",
            "description": "자세히 보기"
          },
          "isHiddenFromShop": {
            "type": "boolean",
            "description": "플랜 사용 여부"
          },
          "adminName": {
            "type": "string",
            "description": "어드민 플랜 이름"
          }
        },
        "description": "가격 플랜 정보"
      },
      "PriceAdditionalBillingDTO": {
        "title": "추가 과금 정보",
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "추가 과금 타입",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "description": "추가 과금 범위 정보",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRangeDTO"
            }
          }
        },
        "description": "추가 과금 정보"
      },
      "PriceAdditionalBillingRangeDTO": {
        "title": "추가 과금 범위 정보",
        "required": [
          "id",
          "price",
          "until"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 범위 번호",
            "format": "int64"
          },
          "until": {
            "type": "integer",
            "description": "범위가 어디까지인지",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "description": "범위에 적용되는 금액"
          }
        },
        "description": "추가 과금 범위 정보"
      },
      "PriceBundleDTO": {
        "required": [
          "price",
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductDTO"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          }
        },
        "description": "번들 플랜 - 번들 상품 구성"
      },
      "PriceDTO": {
        "title": "가격 플랜 정보",
        "required": [
          "basicServing",
          "billingDate",
          "bundlePrices",
          "code",
          "enabledFirstSalePrice",
          "firstSalePrice",
          "id",
          "maximumPurchaseQuantity",
          "membershipExpirationDate",
          "onetimeBundlePrice",
          "options",
          "order",
          "price",
          "type",
          "volumes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "가격 플랜 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "planName": {
            "type": "string",
            "description": "플랜명",
            "deprecated": true
          },
          "planDescription": {
            "type": "string",
            "description": "플랜 설명",
            "deprecated": true
          },
          "type": {
            "type": "string",
            "description": "플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "enabledFirstSalePrice": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부",
            "deprecated": true
          },
          "firstSalePrice": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64",
            "deprecated": true
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매가능 수량",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "description": "구독 만기 기간",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "description": "구독 만기 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionDTO"
          },
          "options": {
            "type": "array",
            "description": "옵션 정보",
            "items": {
              "$ref": "#/components/schemas/PriceOptionDTO"
            }
          },
          "volumes": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceVolumeDTO"
            }
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSale"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "basicServing": {
            "type": "integer",
            "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
            "format": "int32"
          },
          "bundlePrices": {
            "type": "array",
            "description": "번들 플랜 - 번들 상품 구성",
            "items": {
              "$ref": "#/components/schemas/PriceBundleDTO"
            }
          },
          "onetimeBundlePrice": {
            "type": "number",
            "description": "번들 플랜 - 단건 상품 금액"
          },
          "order": {
            "type": "integer",
            "description": "우선 순위",
            "format": "int32"
          }
        },
        "description": "가격 플랜 정보"
      },
      "PriceOptionDTO": {
        "title": "가격 플랜 옵션 정보",
        "required": [
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "productCode": {
            "type": "string",
            "description": "연관 상품 코드"
          },
          "type": {
            "type": "string",
            "description": "옵션 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "가격",
            "format": "int64"
          },
          "priceCode": {
            "type": "string",
            "description": "연관 가격플랜 코드"
          },
          "priceName": {
            "type": "string",
            "description": "연관 가격플랜 이름"
          },
          "productType": {
            "type": "string",
            "description": "연관 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "recurringDTO": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          }
        },
        "description": "옵션 정보"
      },
      "PriceRecurringDTO": {
        "title": "구독 주기 정보",
        "required": [
          "id",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주기 정보 번호",
            "format": "int64"
          },
          "intervalCount": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          },
          "aggregateUsageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "SUM",
              "LAST_DURING_PERIOD",
              "LAST_EVER",
              "MAX"
            ]
          },
          "interval": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "usageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "LICENSED",
              "METERED"
            ]
          }
        },
        "description": "구독 주기 정보"
      },
      "PriceSetupOptionDTO": {
        "title": "기본료 정보",
        "required": [
          "claimMethodType",
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "기본료 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "기본료 이름"
          },
          "type": {
            "type": "string",
            "description": "기본료 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "기본료 금액",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "description": "기본료가 선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        },
        "description": "기본료 정보"
      },
      "PriceVolumeDTO": {
        "required": [
          "id",
          "max",
          "min",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          }
        },
        "deprecated": true
      },
      "ProductCategoryDTO": {
        "required": [
          "categoryId",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "카테고리"
      },
      "ProductDTO": {
        "title": "상품 상세 정보",
        "required": [
          "categories",
          "code",
          "combinedProducts",
          "createdAt",
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "eventBadge",
          "id",
          "isOnetimePurchasable",
          "optionCombinations",
          "optionGroups",
          "prices",
          "productOrder",
          "status",
          "useCombination",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "상품 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "subTitle": {
            "type": "string",
            "description": "부제목"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 대표 이미지 URL"
          },
          "imageUrls": {
            "type": "array",
            "description": "상품 이미지 URL",
            "items": {
              "type": "string",
              "description": "상품 이미지 URL"
            }
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "summary": {
            "type": "string",
            "description": "상품 요약"
          },
          "reasonOfReject": {
            "type": "string",
            "description": "상품 승인 거절 사유"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "quantity": {
            "type": "integer",
            "description": "재고 수량",
            "format": "int32"
          },
          "combinedProducts": {
            "type": "array",
            "description": "번들 상품 정보",
            "items": {
              "$ref": "#/components/schemas/BundleProductDTO"
            }
          },
          "optionGroups": {
            "type": "array",
            "description": "옵션 그룹 정보",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "useCombination": {
            "type": "boolean",
            "description": "조합형 옵션 사용 여부"
          },
          "optionCombinations": {
            "type": "array",
            "description": "옵션 조합",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationDTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "가격 플랜 목록",
            "items": {
              "$ref": "#/components/schemas/PriceDTO"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정 시점",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean",
            "description": "체험기간 활성화 여부"
          },
          "demoPeriod": {
            "type": "integer",
            "description": "체험 기간",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "description": "체험 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "description": "카테고리",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDTO"
            }
          },
          "vendorUuid": {
            "type": "string",
            "description": "가맹점 UUID",
            "format": "uuid"
          },
          "productOrder": {
            "type": "integer",
            "description": "순서",
            "format": "int32"
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성 구독 제한"
          },
          "eventBadge": {
            "type": "array",
            "description": "이벤트 뱃지",
            "items": {
              "$ref": "#/components/schemas/ProductEventBadge"
            }
          },
          "notice": {
            "type": "string",
            "description": "유의 사항"
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidgetDTO"
          },
          "groupId": {
            "type": "integer",
            "description": "그룹 ID",
            "format": "int64"
          },
          "countrySetting": {
            "$ref": "#/components/schemas/CountrySettingDTO"
          }
        },
        "description": "상품 정보"
      },
      "ProductEventBadge": {
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "끝 시점",
            "format": "date-time"
          }
        },
        "description": "이벤트 뱃지"
      },
      "ProductOptionDTO": {
        "title": "옵션 정보",
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "parent": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductOptionGroupDTO": {
        "title": "상품 옵션 그룹 정보",
        "required": [
          "id",
          "name",
          "options"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 그룹 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 그룹 이름"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionDTO"
            }
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "옵션 그룹 정보"
      },
      "ProductWidgetDTO": {
        "type": "object",
        "properties": {
          "useDemo": {
            "type": "boolean"
          },
          "useEventBadge": {
            "type": "boolean"
          },
          "useOnetimePurchasable": {
            "type": "boolean"
          },
          "useNotice": {
            "type": "boolean"
          }
        },
        "description": "상품 위젯 사용 여부"
      },
      "RelatedOrder": {
        "required": [
          "code",
          "createdAt",
          "id",
          "items",
          "orderType",
          "paidAmount",
          "productName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "주문 코드"
          },
          "orderType": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "productName": {
            "type": "string",
            "description": "상품 이름"
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "items": {
            "type": "array",
            "description": "주문 항목",
            "items": {
              "$ref": "#/components/schemas/RelatedOrderItem"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "관련 주문"
      },
      "RelatedOrderItem": {
        "title": "관련 주문 항목 상세정보",
        "required": [
          "amount",
          "code",
          "orderItemId",
          "plan",
          "priceType",
          "productName",
          "status"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "description": "주문 아이템 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "주문 아이템 코드"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanV1DTO"
          },
          "status": {
            "type": "string",
            "description": "주문 항목 상태",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "amount": {
            "type": "number",
            "description": "가격"
          },
          "priceType": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "parentOrderItemCode": {
            "type": "string",
            "description": "부모 아이템 코드"
          }
        },
        "description": "주문 항목"
      },
      "Shipping": {
        "title": "배송지 정보",
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 이름"
          },
          "phone": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 전화번호"
          },
          "postcode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "우편번호"
          },
          "address1": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "주소"
          },
          "address2": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "세부 주소"
          },
          "state": {
            "type": "string",
            "description": "주 정보"
          },
          "city": {
            "type": "string",
            "description": "도시 정보"
          },
          "countryCode": {
            "type": "string",
            "description": "국가 코드"
          }
        },
        "description": "고객이 최근에 사용한 배송지"
      },
      "SubscriptionItemDTO": {
        "title": "구독 항목 정보",
        "required": [
          "claimMethodType",
          "featuredImageUrl",
          "hasOptions",
          "id",
          "isAdditional",
          "isOnetimePurchasable",
          "keepWhenRenew",
          "plan",
          "price",
          "priceType",
          "productName",
          "productType",
          "quantity",
          "selectedOptions",
          "selectedProductOptionIds",
          "selectedProductOptionPrice",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "구독 항목 코드"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "productType": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성구독 제한 여부"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 옵션 정보"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션들의 ID",
            "items": {
              "type": "integer",
              "description": "선택한 옵션들의 ID",
              "format": "int64"
            }
          },
          "selectedProductOptionPrice": {
            "type": "number",
            "description": "선택한 옵션 추가 금액"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "isAdditional": {
            "type": "boolean",
            "description": "추가 구매 상품인지 여부"
          },
          "keepWhenRenew": {
            "type": "boolean",
            "description": "갱신될 때 유지되는 항목인지 여부"
          },
          "hasOptions": {
            "type": "boolean",
            "description": "옵션이 존재하는지 여부"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "type": {
            "type": "string",
            "description": "항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 정보",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "priceType": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "selectedOptions": {
            "type": "array",
            "description": "선택된 옵션",
            "items": {
              "type": "integer",
              "description": "선택된 옵션",
              "format": "int64"
            }
          },
          "parentSubscriptionItemCode": {
            "type": "string",
            "description": "파생 구독 아이템의 부모(번들) 아이템 코드"
          }
        },
        "description": "구독 항목들"
      },
      "VBankDTO": {
        "required": [
          "accountName",
          "accountNumber",
          "bankDate",
          "bankName"
        ],
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "bankDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "가상 계좌 정보 (paymentMethod가 VBANK 일 때"
      },
      "SubscriptionChangePaymentMethodDTO": {
        "title": "구독 결제수단 변경 정보",
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "description": "사용할 PG. 지정하면 지정된 PG만 사용할 수 있습니다.",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          }
        },
        "description": "결제수단 변경 정보"
      },
      "BundleProductV1DTO": {
        "title": "번들 상품 정보",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "options": {
            "type": "array",
            "description": "상품 옵션 목록",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "상품 가격플랜 목록",
            "items": {
              "$ref": "#/components/schemas/PriceV1DTO"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          }
        },
        "description": "번들 상품 정보"
      },
      "ClaimV1DTO": {
        "title": "청구 방식 정보",
        "required": [
          "billingDate",
          "methodType",
          "whenToClaimType"
        ],
        "type": "object",
        "properties": {
          "methodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "provideStartDay": {
            "type": "integer",
            "description": "서비스 제공기간 시작일",
            "format": "int32"
          }
        },
        "description": "청구 방식 정보"
      },
      "CountrySettingV1DTO": {
        "required": [
          "countryCode",
          "currencyCode",
          "id",
          "isDefault",
          "taxRate",
          "timezoneName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "countryCode": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "taxRate": {
            "type": "number"
          }
        },
        "description": "국가 설정 정보"
      },
      "DemoCycleDTO": {
        "required": [
          "num",
          "type"
        ],
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          }
        },
        "description": "무료체험이 적용됐는지 적용 여부 및 기간"
      },
      "FirstSaleV1DTO": {
        "title": "첫 구매 할인 정보",
        "required": [
          "enabled",
          "price"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부"
          },
          "price": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64"
          }
        },
        "description": "첫 구매 할인 정보"
      },
      "NiceCmsV1DTO": {
        "required": [
          "bankAccount",
          "bankCode",
          "companyName",
          "corporateManager",
          "date",
          "status"
        ],
        "type": "object",
        "properties": {
          "corporateManager": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACCOUNT_PENDING",
              "ACCOUNT_FAIL",
              "ACCOUNT_SUCCESS",
              "WITHDRAW_PENDING",
              "WITHDRAW_FAIL",
              "WITHDRAW_SUCCESS"
            ]
          },
          "errorReturn": {
            "type": "string"
          }
        },
        "description": "NICE CMS 정보"
      },
      "OptionCombinationV1DTO": {
        "required": [
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "HIDDEN"
            ]
          }
        },
        "description": "옵션 조합"
      },
      "OrderCustomerV1DTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "description": "결제자 정보"
      },
      "OrderItemV1DTO": {
        "title": "주문 항목 정보",
        "required": [
          "code",
          "createdAt",
          "currency",
          "id",
          "minimumQuantity",
          "modifiedAt",
          "orderItemCode",
          "orderedPlanName",
          "orderedProductName",
          "orderedProductType",
          "paidAmount",
          "quantity",
          "selectedProductOptionIds",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "currency": {
            "type": "string",
            "description": "통화 코드"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/PriceV1DTO"
          },
          "product": {
            "$ref": "#/components/schemas/ProductV1DTO"
          },
          "type": {
            "type": "string",
            "description": "주문 항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "status": {
            "type": "string",
            "description": "주문 항목 상태",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 상품 옵션"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션 ID 목록",
            "items": {
              "type": "integer",
              "description": "선택한 옵션 ID 목록",
              "format": "int64"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "canceledDateTime": {
            "type": "string",
            "description": "취소 시점",
            "format": "date-time"
          },
          "orderItemCode": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "orderedProductType": {
            "type": "string",
            "description": "주문 시점의 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "orderedProductName": {
            "type": "string",
            "description": "주문 시점의 상품 이름"
          },
          "orderedPlanName": {
            "type": "string",
            "description": "주문 시점의 가격 플랜 이름"
          },
          "discountName": {
            "type": "string",
            "description": "할인 타입(주문 항목 타입이 DISCOUNT인 경우)"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "description": "연관된 주문 항목 (주문 항목 타입이 DISCOUNT인 경우)",
            "format": "int64"
          },
          "priceSetupType": {
            "type": "string",
            "description": "기본료 주문 항목인 경우 1회 또는 정기적으로 구분하는 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycleDTO"
          },
          "usedCount": {
            "type": "number",
            "description": "사용량(사용량 기반 과금 상품인 경우)"
          },
          "usageFormula": {
            "type": "string",
            "description": "사용량 계산식"
          },
          "deliveryCode": {
            "type": "string",
            "description": "배송코드(매핑값)"
          },
          "histories": {
            "type": "array",
            "description": "CS기록",
            "items": {
              "$ref": "#/components/schemas/CSItemDTO"
            }
          },
          "unitChangeHistory": {
            "type": "array",
            "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)",
            "items": {
              "$ref": "#/components/schemas/OrderItemUnitChangeHistoryV1DTO"
            }
          },
          "unitCount": {
            "type": "integer",
            "description": "계정 수(계정 수 기반 과금 상품인 경우",
            "format": "int64"
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 구매 가능 수량",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "parentOrderItemCode": {
            "type": "string",
            "description": "파생 주문 아이템의 부모(번들) 주문 아이템 코드"
          }
        },
        "description": "주문 항목들"
      },
      "OrderLogV1DTO": {
        "title": "주문 메모 정보",
        "required": [
          "content",
          "createdAt",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "메모 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "메모 타입",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "content": {
            "type": "string",
            "description": "메모 내용"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          }
        },
        "description": "주문 메모 목록"
      },
      "OrderPaymentV1DTO": {
        "title": "결제 상세 정보",
        "required": [
          "amount",
          "discount"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "description": "결제 수단",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "amount": {
            "type": "integer",
            "description": "결제 금액",
            "format": "int64"
          },
          "discount": {
            "type": "integer",
            "description": "할인 금액",
            "format": "int64"
          },
          "paymentReturn": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "PG사 반환값"
            },
            "description": "PG사 반환값"
          },
          "paymentReceiptUrl": {
            "type": "string",
            "description": "영수증 링크"
          },
          "paymentGateway": {
            "type": "string",
            "description": "사용한 PG",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "cardNumber": {
            "type": "string",
            "description": "결제 정보(카드 번호 등)"
          },
          "vbankDTO": {
            "$ref": "#/components/schemas/VBankV1DTO"
          },
          "niceCmsDTO": {
            "$ref": "#/components/schemas/NiceCmsV1DTO"
          },
          "customerDTO": {
            "$ref": "#/components/schemas/OrderCustomerV1DTO"
          },
          "errorCode": {
            "type": "string",
            "description": "에러 코드(결제 실패시)"
          },
          "errorMessage": {
            "type": "string",
            "description": "에러 메세지(결제 실패시)"
          }
        },
        "description": "결제 정보"
      },
      "OrderSubscriptionV1DTO": {
        "title": "주문 관련 구독 정보",
        "required": [
          "id",
          "interval",
          "intervalCount",
          "items",
          "price",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemV1DTO"
            }
          },
          "price": {
            "$ref": "#/components/schemas/PriceV1DTO"
          },
          "startDate": {
            "type": "string",
            "description": "구독 시작 시점",
            "format": "date-time"
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "구독 만료 시점",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "description": "구독 주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "구독 주기",
            "format": "int32"
          },
          "trialEndDate": {
            "type": "string",
            "description": "체험기간 종료 시점",
            "format": "date-time"
          }
        },
        "description": "부모 구독 정보(갱신 결제일 경우)"
      },
      "OrderV1DTO": {
        "title": "주문 상세 정보",
        "required": [
          "discountedAmount",
          "id",
          "leftAmount",
          "orderCode",
          "orderId",
          "orderLogs",
          "paidAmount",
          "productName",
          "relatedOrders",
          "returnedAmount",
          "subscriptions",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "orderId": {
            "type": "integer",
            "description": "주문 번호 (이전 버전 호환)",
            "format": "int64"
          },
          "orderCode": {
            "type": "string",
            "description": "주문 코드"
          },
          "type": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "leftAmount": {
            "type": "number",
            "description": "남은 금액"
          },
          "returnedAmount": {
            "type": "number",
            "description": "환불 금액"
          },
          "items": {
            "type": "array",
            "description": "주문 항목들",
            "items": {
              "$ref": "#/components/schemas/OrderItemV1DTO"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/OrderCustomerDTO"
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "청구서 사용시, 구매 기한",
            "format": "date-time"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingV1DTO"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "payment": {
            "$ref": "#/components/schemas/OrderPaymentV1DTO"
          },
          "orderLogs": {
            "type": "array",
            "description": "주문 메모 목록",
            "items": {
              "$ref": "#/components/schemas/OrderLogV1DTO"
            }
          },
          "code": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "description": "관련 구독 목록",
            "items": {
              "$ref": "#/components/schemas/OrderSubscriptionV1DTO"
            }
          },
          "parentSubscription": {
            "$ref": "#/components/schemas/OrderSubscriptionV1DTO"
          },
          "invoiceId": {
            "type": "integer",
            "description": "청구서 ID",
            "format": "int64"
          },
          "discountedAmount": {
            "type": "number",
            "description": "할인 금액"
          },
          "productName": {
            "type": "string",
            "description": "상품 이름"
          },
          "paymentDueDate": {
            "type": "string",
            "description": "결제일 지정",
            "format": "date-time"
          },
          "idKey": {
            "type": "string",
            "description": "결제 정보 조회용 idKey"
          },
          "relatedOrders": {
            "type": "array",
            "description": "관련 주문",
            "items": {
              "$ref": "#/components/schemas/RelatedOrder"
            }
          },
          "calculateStartDate": {
            "type": "string",
            "description": "합산 시작 시점",
            "format": "date-time"
          },
          "calculateEndDate": {
            "type": "string",
            "description": "합산 끝 시점",
            "format": "date-time"
          },
          "childOrders": {
            "type": "array",
            "description": "하위 벤더의 주문",
            "items": {
              "$ref": "#/components/schemas/OrderV1DTO"
            }
          }
        },
        "description": "관련 주문"
      },
      "PlanV1DTO": {
        "title": "가격 플랜 정보",
        "required": [
          "description",
          "isHiddenFromShop",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "플랜 이름"
          },
          "description": {
            "type": "string",
            "description": "플랜 설명"
          },
          "detailDescription": {
            "type": "string",
            "description": "자세히 보기"
          },
          "isHiddenFromShop": {
            "type": "boolean",
            "description": "플랜 사용 여부"
          },
          "adminName": {
            "type": "string",
            "description": "어드민 플랜 이름"
          }
        },
        "description": "가격 플랜 정보"
      },
      "PriceAdditionalBillingRangeV1DTO": {
        "title": "추가 과금 범위 정보",
        "required": [
          "id",
          "price",
          "until"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 범위 번호",
            "format": "int64"
          },
          "until": {
            "type": "integer",
            "description": "범위가 어디까지인지",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "description": "범위에 적용되는 금액"
          }
        },
        "description": "추가 과금 범위 정보"
      },
      "PriceAdditionalBillingV1DTO": {
        "title": "추가 과금 정보",
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "추가 과금 타입",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "description": "추가 과금 범위 정보",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRangeV1DTO"
            }
          }
        },
        "description": "추가 과금 정보"
      },
      "PriceBundleV1DTO": {
        "required": [
          "price",
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductV1DTO"
          },
          "price": {
            "$ref": "#/components/schemas/PriceV1DTO"
          }
        },
        "description": "번들 플랜 - 번들 상품 구성"
      },
      "PriceOptionV1DTO": {
        "title": "가격 플랜 옵션 정보",
        "required": [
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "productCode": {
            "type": "string",
            "description": "연관 상품 코드"
          },
          "type": {
            "type": "string",
            "description": "옵션 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "가격",
            "format": "int64"
          },
          "priceCode": {
            "type": "string",
            "description": "연관 가격플랜 코드"
          },
          "priceName": {
            "type": "string",
            "description": "연관 가격플랜 이름"
          },
          "productType": {
            "type": "string",
            "description": "연관 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "recurringDTO": {
            "$ref": "#/components/schemas/PriceRecurringV1DTO"
          }
        },
        "description": "옵션 정보",
        "deprecated": true
      },
      "PriceRecurringV1DTO": {
        "title": "구독 주기 정보",
        "required": [
          "id",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주기 정보 번호",
            "format": "int64"
          },
          "intervalCount": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          },
          "aggregateUsageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "SUM",
              "LAST_DURING_PERIOD",
              "LAST_EVER",
              "MAX"
            ]
          },
          "interval": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "usageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "LICENSED",
              "METERED"
            ]
          }
        },
        "description": "구독 주기 정보"
      },
      "PriceSetupOptionV1DTO": {
        "title": "기본료 정보",
        "required": [
          "claimMethodType",
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "기본료 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "기본료 이름"
          },
          "type": {
            "type": "string",
            "description": "기본료 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "기본료 금액",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "description": "기본료가 선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        },
        "description": "기본료 정보"
      },
      "PriceV1DTO": {
        "title": "가격 플랜 정보",
        "required": [
          "basicServing",
          "billingDate",
          "bundlePrices",
          "code",
          "enabledFirstSalePrice",
          "firstSalePrice",
          "id",
          "maximumPurchaseQuantity",
          "membershipExpirationDate",
          "onetimeBundlePrice",
          "options",
          "order",
          "price",
          "type",
          "volumes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "가격 플랜 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "planName": {
            "type": "string",
            "description": "플랜명",
            "deprecated": true
          },
          "planDescription": {
            "type": "string",
            "description": "플랜 설명",
            "deprecated": true
          },
          "type": {
            "type": "string",
            "description": "플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "enabledFirstSalePrice": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부",
            "deprecated": true
          },
          "firstSalePrice": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64",
            "deprecated": true
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매가능 수량",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "description": "구독 만기 기간",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "description": "구독 만기 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionV1DTO"
          },
          "options": {
            "type": "array",
            "description": "옵션 정보",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceOptionV1DTO"
            }
          },
          "volumes": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceVolumeV1DTO"
            }
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBillingV1DTO"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringV1DTO"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanV1DTO"
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSaleV1DTO"
          },
          "claim": {
            "$ref": "#/components/schemas/ClaimV1DTO"
          },
          "basicServing": {
            "type": "integer",
            "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
            "format": "int32"
          },
          "bundlePrices": {
            "type": "array",
            "description": "번들 플랜 - 번들 상품 구성",
            "items": {
              "$ref": "#/components/schemas/PriceBundleV1DTO"
            }
          },
          "onetimeBundlePrice": {
            "type": "number",
            "description": "번들 플랜 - 단건 상품 금액"
          },
          "order": {
            "type": "integer",
            "description": "우선 순위",
            "format": "int32"
          }
        },
        "description": "가격 플랜 정보"
      },
      "PriceVolumeV1DTO": {
        "required": [
          "id",
          "max",
          "min",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          }
        },
        "deprecated": true
      },
      "ProductCategoryV1DTO": {
        "required": [
          "categoryId",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "카테고리"
      },
      "ProductEventBadgeV1DTO": {
        "title": "첫 구매 할인 정보",
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "끝 시점",
            "format": "date-time"
          }
        },
        "description": "이벤트 뱃지",
        "deprecated": true
      },
      "ProductOptionGroupV1DTO": {
        "title": "상품 옵션 그룹 정보",
        "required": [
          "id",
          "name",
          "options"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 그룹 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 그룹 이름"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionV1DTO"
            }
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "옵션 그룹 정보"
      },
      "ProductOptionV1DTO": {
        "title": "옵션 정보",
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "parent": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductV1DTO": {
        "title": "상품 상세 정보",
        "required": [
          "categories",
          "code",
          "combinedProducts",
          "createdAt",
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "eventBadge",
          "id",
          "isOnetimePurchasable",
          "optionCombinations",
          "optionGroups",
          "prices",
          "productOrder",
          "status",
          "useCombination",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "상품 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "subTitle": {
            "type": "string",
            "description": "부제목"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 대표 이미지 URL"
          },
          "imageUrls": {
            "type": "array",
            "description": "상품 이미지 URL",
            "items": {
              "type": "string",
              "description": "상품 이미지 URL"
            }
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "summary": {
            "type": "string",
            "description": "상품 요약"
          },
          "reasonOfReject": {
            "type": "string",
            "description": "상품 승인 거절 사유"
          },
          "sku": {
            "type": "string",
            "description": "SKU",
            "deprecated": true
          },
          "quantity": {
            "type": "integer",
            "description": "재고 수량",
            "format": "int32"
          },
          "combinedProducts": {
            "type": "array",
            "description": "번들 상품 정보",
            "items": {
              "$ref": "#/components/schemas/BundleProductV1DTO"
            }
          },
          "optionGroups": {
            "type": "array",
            "description": "옵션 그룹 정보",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
            }
          },
          "useCombination": {
            "type": "boolean",
            "description": "조합형 옵션 사용 여부"
          },
          "optionCombinations": {
            "type": "array",
            "description": "옵션 조합",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationV1DTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "가격 플랜 목록",
            "items": {
              "$ref": "#/components/schemas/PriceV1DTO"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정 시점",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean",
            "description": "체험기간 활성화 여부"
          },
          "demoPeriod": {
            "type": "integer",
            "description": "체험 기간",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "description": "체험 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "description": "카테고리",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryV1DTO"
            }
          },
          "vendorUuid": {
            "type": "string",
            "description": "가맹점 UUID",
            "format": "uuid"
          },
          "productOrder": {
            "type": "integer",
            "description": "순서",
            "format": "int32"
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성 구독 제한",
            "deprecated": true
          },
          "eventBadge": {
            "type": "array",
            "description": "이벤트 뱃지",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ProductEventBadgeV1DTO"
            }
          },
          "notice": {
            "type": "string",
            "description": "유의 사항",
            "deprecated": true
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidgetV1DTO"
          },
          "groupId": {
            "type": "integer",
            "description": "그룹 ID",
            "format": "int64",
            "deprecated": true
          },
          "countrySetting": {
            "$ref": "#/components/schemas/CountrySettingV1DTO"
          }
        },
        "description": "상품 정보"
      },
      "ProductWidgetV1DTO": {
        "type": "object",
        "properties": {
          "useDemo": {
            "type": "boolean"
          },
          "useEventBadge": {
            "type": "boolean"
          },
          "useOnetimePurchasable": {
            "type": "boolean"
          },
          "useNotice": {
            "type": "boolean"
          }
        },
        "description": "상품 위젯 사용 여부",
        "deprecated": true
      },
      "ShippingV1DTO": {
        "title": "배송지 정보",
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 이름"
          },
          "phone": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 전화번호"
          },
          "postcode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "우편번호"
          },
          "address1": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "주소"
          },
          "address2": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "세부 주소"
          },
          "state": {
            "type": "string",
            "description": "주 정보"
          },
          "city": {
            "type": "string",
            "description": "도시 정보"
          },
          "countryCode": {
            "type": "string",
            "description": "국가 코드"
          }
        },
        "description": "고객이 최근에 사용한 배송 정보 - 주소"
      },
      "SubscriptionItemV1DTO": {
        "title": "구독 항목 정보",
        "required": [
          "claimMethodType",
          "featuredImageUrl",
          "hasOptions",
          "id",
          "isAdditional",
          "isOnetimePurchasable",
          "keepWhenRenew",
          "plan",
          "price",
          "priceType",
          "productName",
          "productType",
          "quantity",
          "selectedOptions",
          "selectedProductOptionIds",
          "selectedProductOptionPrice",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "구독 항목 코드"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "productType": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성구독 제한 여부"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 옵션 정보"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션들의 ID",
            "items": {
              "type": "integer",
              "description": "선택한 옵션들의 ID",
              "format": "int64"
            }
          },
          "selectedProductOptionPrice": {
            "type": "number",
            "description": "선택한 옵션 추가 금액"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanV1DTO"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "isAdditional": {
            "type": "boolean",
            "description": "추가 구매 상품인지 여부"
          },
          "keepWhenRenew": {
            "type": "boolean",
            "description": "갱신될 때 유지되는 항목인지 여부"
          },
          "hasOptions": {
            "type": "boolean",
            "description": "옵션이 존재하는지 여부"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "type": {
            "type": "string",
            "description": "항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 정보",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "priceType": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "selectedOptions": {
            "type": "array",
            "description": "선택된 옵션",
            "items": {
              "type": "integer",
              "description": "선택된 옵션",
              "format": "int64"
            }
          },
          "parentSubscriptionItemCode": {
            "type": "string",
            "description": "파생 구독 아이템의 부모(번들) 아이템 코드"
          }
        },
        "description": "구독 항목들"
      },
      "VBankV1DTO": {
        "required": [
          "accountName",
          "accountNumber",
          "bankDate",
          "bankName"
        ],
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "bankDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "가상 계좌 정보 (paymentMethod가 VBANK 일 때"
      },
      "CustomerPaymentMethodV1DTO": {
        "title": "결제 수단 정보",
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "description": "사용한 PG",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentInfo": {
            "type": "string",
            "description": "결제수단 정보(카드번호 등)"
          }
        },
        "description": "연관 결제수단"
      },
      "PeriodDTO": {
        "title": "기간 정보",
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "끝 시점",
            "format": "date-time"
          }
        },
        "description": "현재 주기 정보"
      },
      "SubscriptionCustomerV1DTO": {
        "title": "구독 고객 정보",
        "required": [
          "attributes",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "description": "고객 UUID",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "name": {
            "type": "string",
            "description": "이름"
          },
          "email": {
            "type": "string",
            "description": "이메일"
          },
          "phone": {
            "type": "string",
            "description": "전화번호"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingV1DTO"
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "고객 추가 데이터"
            },
            "description": "고객 추가 데이터"
          }
        },
        "description": "고객 정보"
      },
      "SubscriptionV1DTO": {
        "title": "구독 상세 정보",
        "required": [
          "currentPeriod",
          "customer",
          "id",
          "interval",
          "intervalCount",
          "price",
          "recurringCount",
          "relatedOrders",
          "startDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "price": {
            "$ref": "#/components/schemas/PriceV1DTO"
          },
          "startDate": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "trialPeriod": {
            "$ref": "#/components/schemas/PeriodDTO"
          },
          "lastPaymentDate": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "종료일",
            "format": "date-time"
          },
          "parentOrder": {
            "$ref": "#/components/schemas/OrderV1DTO"
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemV1DTO"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/SubscriptionCustomerV1DTO"
          },
          "relatedOrders": {
            "type": "array",
            "description": "관련 주문",
            "items": {
              "$ref": "#/components/schemas/OrderV1DTO"
            }
          },
          "pausedDateTime": {
            "type": "string",
            "description": "일시정지 시점",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "description": "구독 주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "구독 주기",
            "format": "int32"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CustomerPaymentMethodV1DTO"
          },
          "originNextPaymentDate": {
            "type": "string",
            "description": "최초 다음 결제 시점 - nextPaymentDate 는 변경될 수 있기 때문에 변경 전 데이터를 저장합니다.",
            "format": "date-time"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingV1DTO"
          },
          "canceledVia": {
            "type": "string",
            "description": "구독이 취소되었을 때 어떤 경로로 취소되었는지 정보",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "recurringCount": {
            "type": "integer",
            "description": "구독이 몇번 갱신되었는지 나타내는 정보",
            "format": "int32"
          },
          "currentPeriod": {
            "$ref": "#/components/schemas/PeriodDTO"
          }
        }
      },
      "SubscriptionItemReplaceDTO": {
        "title": "구독 항목 교체 정보",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 상품 옵션 정보",
            "items": {
              "type": "integer",
              "description": "선택한 상품 옵션 정보",
              "format": "int64"
            }
          }
        }
      },
      "SubscriptionItemChangeDTO": {
        "title": "구독 항목 수정 정보",
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "selectedProductOptions": {
            "type": "array",
            "description": "선택한 상품 옵션 정보",
            "items": {
              "type": "integer",
              "description": "선택한 상품 옵션 정보",
              "format": "int64"
            }
          }
        }
      },
      "ApiResponse": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "type": "object",
            "description": "관련 데이터"
          }
        }
      },
      "SubscriptionChangeRecurringDTO": {
        "title": "구독 주기 변경 정보",
        "required": [
          "interval",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "description": "구독 주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "구독 주기",
            "format": "int32"
          }
        },
        "description": "변경할 주기 정보"
      },
      "ApiResponseUnit": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "$ref": "#/components/schemas/Unit"
          }
        }
      },
      "Unit": {
        "type": "object",
        "description": "관련 데이터"
      },
      "OptionCombinationCreateDTO": {
        "required": [
          "addQuantity",
          "optionIds",
          "price",
          "status"
        ],
        "type": "object",
        "properties": {
          "optionIds": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "addQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "HIDDEN"
            ]
          }
        },
        "description": "옵션 조합"
      },
      "ProductOptionCreateDTO": {
        "required": [
          "addQuantity",
          "groupName",
          "key",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "description": "조합형 옵션 사용시 무시됩니다.",
            "format": "int32"
          },
          "addQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "조합형 옵션 사용시 무시됩니다."
          },
          "key": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          }
        },
        "description": "세부 옵션"
      },
      "ProductOptionGroupCreateDTO": {
        "required": [
          "name",
          "options",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SELECT",
              "COLOR",
              "PRODUCT"
            ]
          },
          "options": {
            "type": "array",
            "description": "세부 옵션",
            "items": {
              "$ref": "#/components/schemas/ProductOptionCreateDTO"
            }
          }
        },
        "description": "옵션 그룹 수정 데이터"
      },
      "ProductUpdateDTO": {
        "title": "상품 수정 데이터",
        "required": [
          "categoryIds",
          "combinedProducts",
          "demoPeriod",
          "eventBadge",
          "productOrder",
          "subTitle"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "subTitle": {
            "type": "string",
            "description": "부제목"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 대표 이미지 URL"
          },
          "imageUrls": {
            "type": "array",
            "description": "상품 이미지 URL",
            "items": {
              "type": "string",
              "description": "상품 이미지 URL"
            }
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "summary": {
            "type": "string",
            "description": "상품 요약"
          },
          "reasonOfReject": {
            "type": "string",
            "description": "상품 승인 거절 사유"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "quantity": {
            "type": "integer",
            "description": "재고 수량",
            "format": "int32"
          },
          "eventBadge": {
            "type": "array",
            "description": "이벤트 뱃지",
            "items": {
              "$ref": "#/components/schemas/ProductEventBadge"
            }
          },
          "notice": {
            "type": "string",
            "description": "유의 사항"
          },
          "productOrder": {
            "type": "integer",
            "description": "순서",
            "format": "int32"
          },
          "enabledDemo": {
            "type": "boolean",
            "description": "체험기간 활성 여부"
          },
          "demoPeriod": {
            "type": "integer",
            "description": "체험기간",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "description": "체험기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "combinedProducts": {
            "type": "array",
            "description": "번들 상품 번호",
            "items": {
              "type": "integer",
              "description": "번들 상품 번호",
              "format": "int64"
            }
          },
          "optionGroups": {
            "type": "array",
            "description": "옵션 그룹 수정 데이터",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
            }
          },
          "useCombination": {
            "type": "boolean",
            "description": "조합형 옵션 사용 여부"
          },
          "optionCombinations": {
            "type": "array",
            "description": "옵션 조합",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationCreateDTO"
            }
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "1회 구매 상품"
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidgetCreatDTO"
          },
          "categoryIds": {
            "type": "array",
            "description": "카테고리 리스트 아이디",
            "items": {
              "type": "integer",
              "description": "카테고리 리스트 아이디",
              "format": "int64"
            }
          },
          "countrySettingId": {
            "type": "integer",
            "description": "결제 국가 설정 ID",
            "format": "int64"
          }
        },
        "description": "상품 수정 데이터"
      },
      "ProductWidgetCreatDTO": {
        "type": "object",
        "properties": {
          "useDemo": {
            "type": "boolean"
          },
          "useEventBadge": {
            "type": "boolean"
          },
          "useOnetimePurchasable": {
            "type": "boolean"
          },
          "useNotice": {
            "type": "boolean"
          }
        },
        "description": "상품 위젯 사용 여부"
      },
      "PriceAdditionalBillingRangeCreateDTO": {
        "title": "추가 과금 생성 정보",
        "required": [
          "price",
          "until"
        ],
        "type": "object",
        "properties": {
          "until": {
            "type": "integer",
            "description": "범위가 어디까지인지. -1 이면 무한대의 범위를 나타내며, -1 값은 배열에 적어도 하나 있어야 합니다.",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "description": "범위에 적용되는 금액"
          }
        },
        "description": "추가 과금 범위 정보"
      },
      "PriceAdditionalBillingUpdateDTO": {
        "title": "추가 과금 수정 정보",
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "추가 과금 타입",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "description": "추가 과금 범위 정보",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRangeCreateDTO"
            }
          }
        },
        "description": "추가 과금 수정 정보"
      },
      "PriceOptionUpdateDTO": {
        "title": "가격 플랜 옵션 수정 정보",
        "required": [
          "id",
          "priceCode",
          "productCode",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "옵션 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "priceCode": {
            "type": "string",
            "description": "가격플랜 코드"
          }
        },
        "description": "가격플랜 옵션 수정 정보",
        "deprecated": true
      },
      "PriceRecurringUpdateDTO": {
        "title": "구독 주기 수정 정보",
        "required": [
          "aggregateUsageType",
          "id",
          "interval",
          "intervalCount",
          "usageType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주기 정보 번호",
            "format": "int64"
          },
          "intervalCount": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          },
          "interval": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "aggregateUsageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "SUM",
              "LAST_DURING_PERIOD",
              "LAST_EVER",
              "MAX"
            ]
          },
          "usageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "LICENSED",
              "METERED"
            ]
          }
        },
        "description": "구독 주기 수정 정보"
      },
      "PriceSetupOptionUpdateDTO": {
        "title": "기본료 수정 정보",
        "required": [
          "id",
          "name",
          "price",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "기본료 정보 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "기본료 이름"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "기본료 수정 정보"
      },
      "PriceUpdateDTO": {
        "title": "가격플랜 수정 데이터",
        "required": [
          "basicServing",
          "plan",
          "price",
          "type",
          "unit"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "가격"
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSale"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매 수량",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "description": "구독 만기 기간",
            "format": "int32",
            "deprecated": true
          },
          "membershipExpirationDateType": {
            "type": "string",
            "description": "구독 만기 기간 단위",
            "deprecated": true,
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "expiryPaymentCount": {
            "type": "integer",
            "description": "구독 만료되는 결제 횟수",
            "format": "int32"
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionUpdateDTO"
          },
          "options": {
            "type": "array",
            "description": "가격플랜 옵션 수정 정보",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceOptionUpdateDTO"
            }
          },
          "volumes": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceVolumeUpdateDTO"
            }
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringUpdateDTO"
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBillingUpdateDTO"
          },
          "basicServing": {
            "type": "integer",
            "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
            "format": "int32"
          },
          "isRepresentative": {
            "type": "boolean",
            "description": "대표 가격 지정 - 스텝샵에서 기본 가격으로 설정됩니다."
          },
          "bundlePrices": {
            "type": "array",
            "description": "번들 가격 코드 - 번들로 만들 가격 코드를 입력합니다.",
            "items": {
              "type": "string",
              "description": "번들 가격 코드 - 번들로 만들 가격 코드를 입력합니다."
            }
          },
          "onetimeBundlePrice": {
            "type": "number",
            "description": "번들 플랜 설정 - 번들 플랜에 포함된 단건 가격이 설정됩니다."
          },
          "type": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          }
        },
        "description": "가격플랜 수정 데이터"
      },
      "PriceVolumeUpdateDTO": {
        "required": [
          "id",
          "max",
          "min",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "min": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number"
          }
        },
        "deprecated": true
      },
      "ApiResponseBoolean": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "type": "boolean",
            "description": "관련 데이터"
          }
        }
      },
      "InvoiceProductDTO": {
        "title": "청구서 상품 및 가격플랜 정보",
        "required": [
          "minimumQuantity",
          "priceCode",
          "productCode"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 수량. 청구서를 받은 고객은 이 수량보다 적은 수량으로 구매할 수 없습니다.",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 수량. 청구서를 받은 고객은 이 수량보다 많은 수량으로 구매할 수 없습니다.",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "price": {
            "type": "number",
            "description": "가격"
          }
        },
        "description": "청구서 상품 및 가격 플랜 목록"
      },
      "InvoiceUpdateDTO": {
        "title": "청구서 수정 데이터",
        "required": [
          "customerId",
          "discount",
          "id",
          "products",
          "publishMethods",
          "publishType",
          "purchaseDeadline"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "description": "청구서 받을 고객 번호",
            "format": "int64"
          },
          "products": {
            "type": "array",
            "description": "청구서 상품 및 가격 플랜 목록",
            "items": {
              "$ref": "#/components/schemas/InvoiceProductDTO"
            }
          },
          "publishType": {
            "type": "string",
            "description": "청구서 발행 타입",
            "enum": [
              "NOW",
              "RESERVATION"
            ]
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "구매 가능 기한",
            "format": "date-time"
          },
          "reservationAt": {
            "type": "string",
            "description": "예약 발송 시점",
            "format": "date-time"
          },
          "publishMethods": {
            "uniqueItems": true,
            "type": "array",
            "description": "발송 수단 목록",
            "items": {
              "type": "string",
              "description": "발송 수단 목록",
              "enum": [
                "KAKAO",
                "SMS",
                "EMAIL"
              ]
            }
          },
          "discount": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "할인 금액"
          },
          "memoToCustomer": {
            "type": "string",
            "description": "청구서 메모"
          }
        },
        "description": "청구서 수정 데이터"
      },
      "SubscriptionLogUpdateDTO": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "LogRequestDTO": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "ProductStatusUpdateDTO": {
        "title": "상품 수정 데이터",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          }
        }
      },
      "CategoryUpsertDTO": {
        "required": [
          "name",
          "order",
          "visibleOnMyStoreBreadcrumb"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "visibleOnMyStoreBreadcrumb": {
            "type": "boolean"
          },
          "order": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseString": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "type": "string",
            "description": "관련 데이터"
          }
        }
      },
      "OrderLogUpdateDTO": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "OrderProductOptionUpdateDTO": {
        "required": [
          "orderItemCode",
          "productOptionIds"
        ],
        "type": "object",
        "properties": {
          "orderItemCode": {
            "type": "string"
          },
          "productOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RecipientDTO": {
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        }
      },
      "ReturnPatch": {
        "required": [
          "orderCode",
          "orderItemCodes",
          "reason"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CSHistorySingleDTO": {
        "required": [
          "actor",
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "actor": {
            "type": "string",
            "enum": [
              "SYSTEM",
              "SELLER",
              "BUYER"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SubStatusTypeInterface"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CSItemSingleDTO": {
        "required": [
          "category",
          "histories",
          "orderCode",
          "orderItemCode",
          "status",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "orderCode": {
            "type": "string"
          },
          "orderItemCode": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "CANCELLATION",
              "EXCHANGE",
              "RETURN"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SubStatusTypeInterface"
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CSHistorySingleDTO"
            }
          }
        }
      },
      "SubStatusTypeInterface": {
        "required": [
          "description",
          "endCS",
          "endOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "endOrder": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "endCS": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ExchangePatch": {
        "required": [
          "orderCode",
          "orderItemCodes",
          "reason"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CountrySettingUpdateDTO": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "taxRate": {
            "type": "number"
          }
        }
      },
      "ShippingListUpdateDTO": {
        "required": [
          "isDefaultAddress",
          "label",
          "shipping"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "isDefaultAddress": {
            "type": "boolean"
          }
        }
      },
      "CartItemModifyRequestDTO": {
        "required": [
          "currency",
          "priceCode",
          "productCode",
          "quantity",
          "selectedOptions"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CartItemCache": {
        "required": [
          "claim",
          "currency",
          "maximumPurchaseQuantity",
          "priceCode",
          "productCode",
          "quantity",
          "selectedOptionPrice",
          "selectedOptions",
          "selectedOptionsLabel"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycle"
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSale"
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionDTO"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "id": {
            "type": "string"
          },
          "selectedOptionsLabel": {
            "type": "string"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "selectedOptionPrice": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "selectedPrice": {
            "$ref": "#/components/schemas/CartItemPriceCache"
          },
          "productSnapshot": {
            "$ref": "#/components/schemas/CartItemSnapshotCache"
          }
        }
      },
      "CartItemPriceCache": {
        "required": [
          "code",
          "planDescription",
          "planName",
          "price",
          "priceType",
          "unit"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "planDescription": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          }
        }
      },
      "CartItemSnapshotCache": {
        "required": [
          "productCode",
          "productName",
          "productOptions",
          "productPrices"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "productFeaturedImageUrl": {
            "type": "string"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemSnapshotOptionCache"
            }
          },
          "productPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemPriceCache"
            }
          }
        }
      },
      "CartItemSnapshotOptionCache": {
        "required": [
          "optionId",
          "optionName",
          "subOption"
        ],
        "type": "object",
        "properties": {
          "optionId": {
            "type": "integer",
            "format": "int64"
          },
          "optionName": {
            "type": "string"
          },
          "subOption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemSnapshotOptionSubCache"
            }
          }
        }
      },
      "CartItemSnapshotOptionSubCache": {
        "required": [
          "optionId",
          "optionName",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "optionId": {
            "type": "integer",
            "format": "int64"
          },
          "optionName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CartListCache": {
        "required": [
          "customerUuid",
          "items",
          "shippingFee",
          "storeUuid",
          "totalDiscount",
          "totalPay",
          "totalPrice",
          "totalSubscription",
          "valueAddedTax"
        ],
        "type": "object",
        "properties": {
          "storeUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "_items": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/CartItemCache"
            }
          },
          "totalPrice": {
            "type": "number"
          },
          "totalSubscription": {
            "type": "number"
          },
          "totalDiscount": {
            "type": "number"
          },
          "shippingFee": {
            "type": "number"
          },
          "valueAddedTax": {
            "type": "number"
          },
          "totalPay": {
            "type": "number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemCache"
            }
          }
        }
      },
      "CycleDTO": {
        "title": "기간 정보",
        "required": [
          "interval",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "description": "기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "기간",
            "format": "int32"
          }
        },
        "description": "whenToResume 이 PAUSED_UNTIL 일 경우 필수값입니다. 일시정지 되기까지의 기간을 설정합니다. "
      },
      "SubscriptionPauseDTO": {
        "title": "구독 일시정지 정보",
        "required": [
          "whenToPause",
          "whenToResume"
        ],
        "type": "object",
        "properties": {
          "whenToResume": {
            "type": "string",
            "description": "일시정지 후 언제 재개되는지를 설정합니다.",
            "enum": [
              "NOTHING",
              "PAUSED_UNTIL"
            ]
          },
          "whenToPause": {
            "type": "string",
            "description": "언제 일시정지 시킬 지를 설정합니다.",
            "enum": [
              "IMMEDIATE",
              "LAZY"
            ]
          },
          "until": {
            "$ref": "#/components/schemas/CycleDTO"
          }
        },
        "description": "일시정지 정보 - 일시정지, 재개 시점을 설정합니다."
      },
      "SubscriptionItemCreateDTO": {
        "title": "구독 항목 생성 정보",
        "required": [
          "priceCode",
          "productCode",
          "quantity",
          "selectedProductOptions",
          "type"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "추가할 상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "추가할 가격플랜 코드"
          },
          "quantity": {
            "minimum": 1,
            "type": "integer",
            "description": "상품 수량",
            "format": "int32",
            "default": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "selectedProductOptions": {
            "type": "array",
            "description": "상품 옵션",
            "items": {
              "type": "integer",
              "description": "상품 옵션",
              "format": "int64"
            },
            "default": []
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          }
        },
        "description": "추가할 구독 항목 정보"
      },
      "SubscriptionChangePayDatetimeDTO": {
        "title": "결제일 변경 정보",
        "required": [
          "when"
        ],
        "type": "object",
        "properties": {
          "when": {
            "type": "string",
            "description": "변경될 시점. 현재보다 미래 시점으로 설정해야 합니다.",
            "format": "date-time"
          }
        },
        "description": "결제일 변경을 위한 정보"
      },
      "SubscriptionCancelDTO": {
        "title": "구독 취소 정보",
        "required": [
          "whenToCancel"
        ],
        "type": "object",
        "properties": {
          "whenToCancel": {
            "type": "string",
            "description": "언제 취소되는지를 설정합니다. NOW일 경우 바로 취소되며, 이외에는 설정 시점이 되었을 때까지 취소 대기중 상태가 됩니다.",
            "enum": [
              "NOW",
              "END_OF_PERIOD",
              "SPECIFIC_DATE_TIME"
            ]
          },
          "when": {
            "type": "string",
            "description": "whenToCancel 이 SPECIFIC_DATE_TIME 일 경우 필수값입니다. 취소되는 시점을 설정할 수 있으며, 시점이 되기 전까지는 취소 대기중 상태가 됩니다.",
            "format": "date-time"
          }
        },
        "description": "취소 정보 - 취소 시점을 설정합니다."
      },
      "ApiResponseSubscriptionManualRenewResultDTO": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "$ref": "#/components/schemas/SubscriptionManualRenewResultDTO"
          }
        }
      },
      "SubscriptionManualRenewResultDTO": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "관련 데이터"
      },
      "ProductCreateDTO": {
        "title": "상품 생성 데이터",
        "required": [
          "categoryIds",
          "demoPeriod",
          "demoPeriodUnit",
          "description",
          "enabledDemo",
          "eventBadge",
          "featuredImageUrl",
          "imageUrls",
          "isOnetimePurchasable",
          "name",
          "optionCombinations",
          "optionGroups",
          "productOrder",
          "status",
          "subTitle",
          "type",
          "useCombination"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "상품 타입을 지정합니다.",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태를 지정합니다.",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "productOrder": {
            "type": "integer",
            "description": "순서",
            "format": "int32"
          },
          "subTitle": {
            "type": "string",
            "description": "부제목"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "결제화면에서 나타는 상품 이미지 입니다."
          },
          "imageUrls": {
            "type": "array",
            "description": "상품 이미지 URL",
            "items": {
              "type": "string",
              "description": "상품 이미지 URL"
            }
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "summary": {
            "type": "string",
            "description": "상품 요약"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "quantity": {
            "type": "integer",
            "description": "상품 수량 - null 로 지정하면 상품 구매시 수량이 감소되지 않습니다.",
            "format": "int32"
          },
          "enabledDemo": {
            "type": "boolean",
            "description": "체험 기간 사용 여부"
          },
          "demoPeriod": {
            "type": "integer",
            "description": "체험 기간",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "description": "체험 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "optionGroups": {
            "type": "array",
            "description": "옵션 그룹 설정",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
            }
          },
          "useCombination": {
            "type": "boolean",
            "description": "조합형 옵션 사용 여부"
          },
          "optionCombinations": {
            "type": "array",
            "description": "옵션 조합",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationCreateDTO"
            }
          },
          "categoryIds": {
            "type": "array",
            "description": "카테고리",
            "items": {
              "type": "integer",
              "description": "카테고리",
              "format": "int64"
            }
          },
          "eventBadge": {
            "type": "array",
            "description": "이벤트 뱃지",
            "items": {
              "$ref": "#/components/schemas/ProductEventBadge"
            }
          },
          "notice": {
            "type": "string",
            "description": "유의 사항"
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성 구독 제한"
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidget"
          },
          "countrySettingId": {
            "type": "integer",
            "description": "결제 국가 설정 ID",
            "format": "int64"
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProductWidget": {
        "required": [
          "useDemo",
          "useEventBadge",
          "useNotice",
          "useOnetimePurchasable"
        ],
        "type": "object",
        "properties": {
          "useDemo": {
            "type": "boolean"
          },
          "useEventBadge": {
            "type": "boolean"
          },
          "useOnetimePurchasable": {
            "type": "boolean"
          },
          "useNotice": {
            "type": "boolean"
          }
        },
        "description": "상품 위젯 사용 여부"
      },
      "PriceCreateDTO": {
        "title": "가격플랜 생성 데이터",
        "required": [
          "options",
          "plan",
          "price",
          "type",
          "unit"
        ],
        "type": "object",
        "properties": {
          "price": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "기본 가격"
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "type": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSale"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 개수 지정",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "description": "구독 만기 기간",
            "format": "int32",
            "deprecated": true
          },
          "membershipExpirationDateType": {
            "type": "string",
            "description": "구독 만기 기간 단위",
            "deprecated": true,
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "expiryRecurringCount": {
            "type": "integer",
            "description": "구독 만료되는 결제 횟수",
            "format": "int32"
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionCreateDTO"
          },
          "options": {
            "type": "array",
            "description": "추가 구매 가능한 상품 옵션",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceOptionCreateDTO"
            }
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringCreateDTO"
          },
          "basicServing": {
            "type": "integer",
            "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
            "format": "int32"
          },
          "isRepresentative": {
            "type": "boolean",
            "description": "대표 가격 지정 - 스텝샵에서 기본 가격으로 설정됩니다."
          },
          "onetimeBundlePrice": {
            "type": "number",
            "description": "번들 플랜 설정 - 번들 플랜의 단건 가격을 설정합니다."
          }
        },
        "description": "가격플랜 생성 데이터"
      },
      "PriceOptionCreateDTO": {
        "required": [
          "priceCode"
        ],
        "type": "object",
        "properties": {
          "priceCode": {
            "type": "string"
          }
        },
        "description": "추가 구매 가능한 상품 옵션",
        "deprecated": true
      },
      "PriceRecurringCreateDTO": {
        "required": [
          "aggregateUsageType",
          "interval",
          "intervalCount",
          "usageType"
        ],
        "type": "object",
        "properties": {
          "intervalCount": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "aggregateUsageType": {
            "type": "string",
            "enum": [
              "SUM",
              "LAST_DURING_PERIOD",
              "LAST_EVER",
              "MAX"
            ]
          },
          "usageType": {
            "type": "string",
            "enum": [
              "LICENSED",
              "METERED"
            ]
          }
        },
        "description": "반복 주기, 가격 타입이 ONE_TIME이 아닌 경우 필수값입니다. "
      },
      "PriceSetupOptionCreateDTO": {
        "required": [
          "claimMethodType",
          "name",
          "price",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        },
        "description": "도입비, 설치비 옵션"
      },
      "OrderCreateV1DTO": {
        "title": "주문 생성 데이터",
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 0,
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "customerCode": {
            "type": "string",
            "description": "고객 코드"
          },
          "customerUuid": {
            "type": "string",
            "description": "고객 uuid",
            "format": "uuid"
          },
          "items": {
            "minLength": 1,
            "type": "array",
            "description": "주문 항목 생성 데이터 목록",
            "items": {
              "$ref": "#/components/schemas/OrderItemCreateV1DTO"
            }
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
            "format": "date-time"
          },
          "paymentGateway": {
            "type": "string",
            "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          }
        },
        "description": "주문 생성 데이터"
      },
      "OrderItemCreateV1DTO": {
        "title": "주문 항목 생성 데이터",
        "minLength": 1,
        "required": [
          "currency",
          "minimumQuantity",
          "priceCode",
          "productCode"
        ],
        "type": "object",
        "properties": {
          "productOption": {
            "type": "array",
            "description": "상품 옵션을 고정하는데 사용됩니다.",
            "items": {
              "type": "integer",
              "description": "상품 옵션을 고정하는데 사용됩니다.",
              "format": "int64"
            },
            "default": []
          },
          "currency": {
            "type": "string",
            "description": "통화 코드",
            "default": "KRW"
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 수량을 지정합니다.",
            "format": "int32",
            "default": 0
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 수량을 지정합니다.",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격플랜 코드"
          }
        },
        "description": "주문 항목 생성 데이터 목록"
      },
      "InvoiceCreateDTO": {
        "title": "청구서 생성 데이터",
        "required": [
          "customerId",
          "discount",
          "items",
          "paymentGateway",
          "publishMethods",
          "publishType"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 0,
            "type": "integer",
            "description": "청구서를 받을 고객 번호",
            "format": "int64"
          },
          "items": {
            "minLength": 1,
            "type": "array",
            "description": "청구 상품 및 가격플랜 목록",
            "items": {
              "$ref": "#/components/schemas/InvoiceProductDTO"
            }
          },
          "publishType": {
            "type": "string",
            "description": "청구서 발행 타입",
            "enum": [
              "NOW",
              "RESERVATION"
            ],
            "default": "NOW"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
            "format": "date-time"
          },
          "reservationAt": {
            "type": "string",
            "description": "발송 시간을 나타냅니다. ISO 8601 형식",
            "format": "date-time"
          },
          "publishMethods": {
            "type": "array",
            "description": "사용할 발송 수단 목록",
            "items": {
              "type": "string",
              "description": "사용할 발송 수단 목록",
              "enum": [
                "KAKAO",
                "SMS",
                "EMAIL"
              ]
            }
          },
          "discount": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "할인 금액",
            "default": 0
          },
          "instantAmount": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "청구서 즉시 결제"
          },
          "memoToCustomer": {
            "type": "string",
            "description": "청구서 메모"
          },
          "paymentGateway": {
            "type": "string",
            "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          }
        },
        "description": "청구서 생성 데이터"
      },
      "InvoiceResponseDTO": {
        "title": "청구서 생성 응답 정보",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          }
        }
      },
      "OrderTransactionCustomer": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          }
        }
      },
      "OrderTransactionDTO": {
        "required": [
          "customer",
          "isDefaultShipping",
          "items",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionItemDTO"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/OrderTransactionCustomer"
          },
          "totalAmount": {
            "type": "number"
          },
          "isDefaultShipping": {
            "type": "boolean"
          }
        }
      },
      "OrderTransactionItemDTO": {
        "required": [
          "orderItemType",
          "quantity",
          "selectedPriceOptions",
          "selectedProductOptions",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number"
          },
          "selectedProductOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectedProductOptionDTO"
            }
          },
          "selectedPriceOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectedPriceOptionDTO"
            }
          },
          "orderItemType": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "discountName": {
            "type": "string"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "usedCount": {
            "type": "number"
          }
        }
      },
      "SelectedPriceOptionDTO": {
        "required": [
          "priceCode",
          "priceOptionId",
          "productCode",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "priceOptionId": {
            "type": "integer",
            "format": "int64"
          },
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SelectedProductOptionDTO": {
        "title": "선택한 옵션 정보",
        "required": [
          "optionIds",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "옵션 수량",
            "format": "int32"
          },
          "optionIds": {
            "type": "array",
            "description": "선택한 옵션 번호 목록",
            "items": {
              "type": "integer",
              "description": "선택한 옵션 번호 목록",
              "format": "int64"
            }
          }
        }
      },
      "SubscriptionMemoDTO": {
        "type": "object",
        "properties": {
          "subscriptionMemo": {
            "type": "string"
          }
        }
      },
      "SubscriptionLogCreateDTO": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "SubscriptionChangeDatetimeDTO": {
        "required": [
          "type",
          "when"
        ],
        "type": "object",
        "properties": {
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "enum": [
              "PAY",
              "TRIAL",
              "MEMBERSHIP"
            ]
          }
        }
      },
      "QuotationCreatedDTO": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderCreateDTO": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "minimum": 0,
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "customerCode": {
            "type": "string",
            "description": "고객 코드"
          },
          "customerUuid": {
            "type": "string",
            "description": "고객 uuid",
            "format": "uuid"
          },
          "items": {
            "minLength": 1,
            "type": "array",
            "description": "주문 항목 생성 데이터 목록",
            "items": {
              "$ref": "#/components/schemas/OrderItemCreateDTO"
            }
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
            "format": "date-time"
          },
          "paymentGateway": {
            "type": "string",
            "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          }
        }
      },
      "OrderItemCreateDTO": {
        "title": "주문 항목 생성 데이터",
        "minLength": 1,
        "required": [
          "currency",
          "minimumQuantity",
          "priceCode",
          "productCode"
        ],
        "type": "object",
        "properties": {
          "productOption": {
            "type": "array",
            "description": "상품 옵션을 고정하는데 사용됩니다.",
            "items": {
              "type": "integer",
              "description": "상품 옵션을 고정하는데 사용됩니다.",
              "format": "int64"
            },
            "default": []
          },
          "currency": {
            "type": "string",
            "description": "통화 코드",
            "default": "KRW"
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 수량을 지정합니다.",
            "format": "int32",
            "default": 0
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 수량을 지정합니다.",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격플랜 코드"
          }
        },
        "description": "주문 항목 생성 데이터 목록"
      },
      "OrderLogCreateDTO": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "PriceModuleMappingRequestDTO": {
        "required": [
          "items",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceQuantityPare"
            }
          },
          "vendorUuid": {
            "type": "string"
          },
          "invoiceDiscount": {
            "type": "number"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "postcode": {
            "type": "string"
          }
        }
      },
      "PriceQuantityPare": {
        "required": [
          "priceId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "priceId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BigDecimal": {
        "type": "object"
      },
      "Customer": {
        "type": "object",
        "properties": {
          "postalCode": {
            "type": "string"
          }
        }
      },
      "DeliveryCharge": {
        "required": [
          "defaultDeliveryCharge",
          "deliveryChargeType",
          "freeShipOverAmount",
          "islandAndMountainShipAmount",
          "jejuShipAmount",
          "useDeliveryCharge",
          "useLocalShipCharge"
        ],
        "type": "object",
        "properties": {
          "useDeliveryCharge": {
            "type": "boolean"
          },
          "deliveryChargeType": {
            "type": "string",
            "enum": [
              "FREE",
              "CONDITIONAL_FREE",
              "FIXED"
            ]
          },
          "defaultDeliveryCharge": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "freeShipOverAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "useLocalShipCharge": {
            "type": "boolean"
          },
          "jejuShipAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "islandAndMountainShipAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "OrderItem": {
        "required": [
          "amount",
          "applyDemo",
          "applyFirstSale",
          "claimMethodType",
          "isBox",
          "isBundle",
          "isDerived",
          "key",
          "plan",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "FEE",
              "USAGE",
              "DEFERRED",
              "ADD",
              "INSTANT"
            ]
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productCode": {
            "type": "string"
          },
          "isBox": {
            "type": "boolean"
          },
          "applyFirstSale": {
            "type": "boolean"
          },
          "applyDemo": {
            "type": "boolean"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "onetimePrice": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "isDerived": {
            "type": "boolean"
          },
          "isBundle": {
            "type": "boolean"
          },
          "relatedItem": {
            "$ref": "#/components/schemas/OrderItem"
          },
          "description": {
            "type": "string"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "PriceModuleInputDTO": {
        "required": [
          "deliveryCharges",
          "items",
          "type",
          "vendorSettings"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "RECURRING_INITIAL"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "deliveryCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryCharge"
            }
          },
          "vendorSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorSettings"
            }
          },
          "invoiceDiscount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "VendorSettings": {
        "required": [
          "vatIncluded",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "vatIncluded": {
            "type": "boolean"
          },
          "vatRate": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "paymentAmountScale": {
            "type": "integer",
            "format": "int32"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "CustomerOrderDTO": {
        "title": "고객과 연관된 주소 정보",
        "required": [
          "amount",
          "claimMethodType",
          "createdAt",
          "id",
          "productName",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "amount": {
            "type": "number",
            "description": "주문 금액"
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 정보",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "생성 일시",
            "format": "date-time"
          }
        },
        "description": "고객과 연관된 주소 목록"
      },
      "CustomerSubscriptionDTO": {
        "title": "고객과 연관된 구독 정보",
        "required": [
          "code",
          "id",
          "items",
          "recurring",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "구독 코드"
          },
          "nextPaymentDateTime": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemDTO"
            }
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "recurring": {
            "$ref": "#/components/schemas/Interval"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDTO"
          },
          "endDate": {
            "type": "string",
            "description": "종료일",
            "format": "date-time"
          },
          "lastPaymentDateTime": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          }
        },
        "description": "고객과 연관된 구독 목록"
      },
      "Interval": {
        "required": [
          "interval",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "구독 주기 정보"
      },
      "InvoiceDTO": {
        "title": "청구서 상세 정보",
        "required": [
          "discount",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "청구서 상태",
            "enum": [
              "임시저장",
              "발송 예약",
              "발송",
              "결제 완료",
              "미납입",
              "발송 실패"
            ]
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerDTO"
          },
          "publishType": {
            "type": "string",
            "description": "청구서 발행 상태",
            "enum": [
              "NOW",
              "RESERVATION"
            ]
          },
          "order": {
            "$ref": "#/components/schemas/OrderDTO"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "구매 기한",
            "format": "date-time"
          },
          "publishMethod": {
            "uniqueItems": true,
            "type": "array",
            "description": "발송 수단 목록",
            "items": {
              "type": "string",
              "description": "발송 수단 목록",
              "enum": [
                "KAKAO",
                "SMS",
                "EMAIL"
              ]
            }
          },
          "discount": {
            "type": "integer",
            "description": "할인 금액",
            "format": "int64"
          },
          "memoToCustomer": {
            "type": "string",
            "description": "청구서 메모"
          },
          "reservationAt": {
            "type": "string",
            "description": "예약 일시",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "삭제 일시",
            "format": "date-time"
          }
        }
      },
      "PaymentMethodDTO": {
        "title": "결제수단 정보",
        "required": [
          "id",
          "paymentInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "결제수단 번호",
            "format": "int64"
          },
          "paymentInfo": {
            "type": "string",
            "description": "결제수단 정보"
          }
        },
        "description": "고객이 사용중인 결제수단 목록"
      },
      "InvoiceSendNowDTO": {
        "type": "object",
        "properties": {
          "newPurchaseDeadline": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateInvoicesByExcelFailedRowDTO": {
        "required": [
          "discount",
          "invalidColumns",
          "memo",
          "priceCode",
          "publishMethods",
          "quantity",
          "recipients",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "recipients": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "publishMethods": {
            "type": "string"
          },
          "reservationAt": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "invalidColumns": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateInvoicesByExcelRawData": {
        "required": [
          "discount",
          "memo",
          "priceCode",
          "publishMethods",
          "quantity",
          "recipients",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "recipients": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "publishMethods": {
            "type": "string"
          },
          "reservationAt": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateInvoicesByExcelResultDTO": {
        "required": [
          "failedResult",
          "nowStatusCount",
          "reservationStatusCount",
          "succeededResult"
        ],
        "type": "object",
        "properties": {
          "succeededResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceCreateWithAdditionalRecipientsDTO"
            }
          },
          "failedResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoicesByExcelFailedRowDTO"
            }
          },
          "nowStatusCount": {
            "type": "integer",
            "format": "int32"
          },
          "reservationStatusCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceCreateWithAdditionalRecipientsDTO": {
        "required": [
          "invoiceCreateDTO",
          "rawData",
          "recipientEmails"
        ],
        "type": "object",
        "properties": {
          "recipientEmails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "invoiceCreateDTO": {
            "$ref": "#/components/schemas/InvoiceCreateDTO"
          },
          "rawData": {
            "$ref": "#/components/schemas/CreateInvoicesByExcelRawData"
          }
        }
      },
      "CountrySettingCreateDTO": {
        "required": [
          "countryCode",
          "currencyCode",
          "isDefault",
          "taxRate",
          "timezoneName"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "taxRate": {
            "type": "number"
          }
        }
      },
      "SubscriptionCheckBulkResultDTO": {
        "required": [
          "currentPeriodEndDate",
          "currentPeriodStartDate"
        ],
        "type": "object",
        "properties": {
          "trialPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PreClaimQuotaPaymentRequestDTO": {
        "required": [
          "deltaAmount"
        ],
        "type": "object",
        "properties": {
          "usedAmount": {
            "type": "number"
          },
          "prevAmount": {
            "type": "number"
          },
          "deltaAmount": {
            "type": "number"
          }
        }
      },
      "UsageRecordCheckRequestDTO": {
        "required": [
          "adminName",
          "customerName",
          "mainPlanCode",
          "mainPlanName",
          "planCode",
          "planName",
          "priceType",
          "productName",
          "record",
          "startDate",
          "subPlanCode",
          "subPlanName",
          "subProductName",
          "subscriptionId"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "planCode": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "record": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "priceType": {
            "type": "string"
          },
          "mainPlanCode": {
            "type": "string"
          },
          "subPlanCode": {
            "type": "string"
          },
          "mainPlanName": {
            "type": "string"
          },
          "subPlanName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "adminName": {
            "type": "string"
          },
          "subProductName": {
            "type": "string"
          }
        }
      },
      "UsageRecordCheckResponseDTO": {
        "required": [
          "inTrialPeriod",
          "invalidCustomerName",
          "invalidPlanCode",
          "invalidPlanName",
          "notInPeriod",
          "subscriptionItemId",
          "subscriptionNotFound",
          "valid"
        ],
        "type": "object",
        "properties": {
          "notInPeriod": {
            "type": "boolean"
          },
          "subscriptionNotFound": {
            "type": "boolean"
          },
          "invalidCustomerName": {
            "type": "boolean"
          },
          "invalidPlanCode": {
            "type": "boolean"
          },
          "invalidPlanName": {
            "type": "boolean"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          },
          "inTrialPeriod": {
            "type": "boolean"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "AppstoreOrderCreateRequestDTO": {
        "required": [
          "customerUuid",
          "priceCode",
          "productCode",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          }
        }
      },
      "OrderInternalResponseDTO": {
        "required": [
          "amount",
          "code",
          "createAt",
          "customerUuid",
          "discountedAmount",
          "id",
          "leftAmount",
          "paidAmount",
          "product",
          "returnedAmount",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "priceCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "amount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "product": {
            "type": "string"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "payment": {
            "$ref": "#/components/schemas/OrderPaymentInternalDTO"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemInternalDTO"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
            }
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "paidAmount": {
            "type": "number"
          },
          "leftAmount": {
            "type": "number"
          },
          "returnedAmount": {
            "type": "number"
          },
          "discountedAmount": {
            "type": "number"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingDTO"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "idKey": {
            "type": "string"
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderItemInternalDTO": {
        "required": [
          "claimMethodType",
          "code",
          "currency",
          "id",
          "paidAmount",
          "planName",
          "priceType",
          "productName",
          "productType",
          "quantity",
          "selectedProductOptionIds",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "paidAmount": {
            "type": "number"
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "onetimeBundlePrice": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "usedCount": {
            "type": "number"
          },
          "additionalBillings": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "minimumQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "parentOrderItemCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "currency": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "selectedProductOptionLabel": {
            "type": "string"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "canceledDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "discountName": {
            "type": "string"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "priceSetupType": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycleDTO"
          }
        }
      },
      "OrderPaymentInternalDTO": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "cardNumber": {
            "type": "string"
          }
        }
      },
      "ShippingDTO": {
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        }
      },
      "SubscriptionInternalResponseDTO": {
        "required": [
          "claimMethodType",
          "code",
          "currentPeriodEnd",
          "currentPeriodStart",
          "customerId",
          "customerUuid",
          "id",
          "interval",
          "isMultipleItem",
          "items",
          "paymentInfo",
          "price",
          "priceCodes",
          "product",
          "productCodes",
          "recurringCount",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "productCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priceCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          },
          "currentPeriodStart": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "provideStartDay": {
            "type": "integer",
            "format": "int32"
          },
          "recurringCount": {
            "type": "integer",
            "format": "int32"
          },
          "claimMethodType": {
            "type": "string"
          },
          "isMultipleItem": {
            "type": "boolean"
          },
          "paymentInfo": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemInternalResponseDTO"
            }
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionMemo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "trialStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "originNextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "pausedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "intervalUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/SubscriptionPaymentMethod"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "notiBeforePaymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscriptionItemInternalResponseDTO": {
        "required": [
          "id",
          "isAdditional",
          "keepWhenRenew",
          "planName",
          "price",
          "priceType",
          "productName",
          "quantity",
          "selectedOptions",
          "selectedProductOptionIds",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "productCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productFeaturedImageUrl": {
            "type": "string"
          },
          "planCode": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "parentSubscriptionItemCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "optionName": {
            "type": "string"
          },
          "additionalBillings": {
            "type": "string"
          },
          "usedCount": {
            "type": "integer",
            "format": "int64"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "isAdditional": {
            "type": "boolean"
          },
          "keepWhenRenew": {
            "type": "boolean"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "priceCode": {
            "type": "string"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "SubscriptionPaymentMethod": {
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentInfo": {
            "type": "string"
          }
        }
      },
      "OfflineOrderCreateRequestDTO": {
        "required": [
          "items",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            }
          }
        }
      },
      "OfflineOrderItemResponseDTO": {
        "required": [
          "code",
          "priceCode",
          "productCode",
          "productOptions",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONETIME",
              "RECURRING"
            ]
          },
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OfflineOrderResponseDTO": {
        "required": [
          "amount",
          "code",
          "items"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfflineOrderItemResponseDTO"
            }
          }
        }
      },
      "CmsWebhookPayload": {
        "required": [
          "created_at",
          "entry",
          "event",
          "model"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "model": {
            "type": "string"
          },
          "entry": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "ShippingListCreateDTO": {
        "required": [
          "isDefaultAddress",
          "label",
          "shipping"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "isDefaultAddress": {
            "type": "boolean"
          }
        }
      },
      "QuotationCreateDTO": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemCreateDTO"
            }
          },
          "requestMemo": {
            "type": "string"
          }
        }
      },
      "OrderAndTransactionCreateDTO": {
        "required": [
          "customer",
          "isDefaultShipping",
          "items",
          "priceCode",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "priceCode": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTransactionItemDTO"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/OrderTransactionCustomer"
          },
          "totalAmount": {
            "type": "number"
          },
          "isDefaultShipping": {
            "type": "boolean"
          }
        }
      },
      "OrderIdKeyDTO": {
        "required": [
          "aSKUItemId",
          "idKey",
          "orderCode"
        ],
        "type": "object",
        "properties": {
          "idKey": {
            "type": "string"
          },
          "aSKUItemId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          }
        }
      },
      "WebAuthnAuthDTO": {
        "type": "object",
        "properties": {
          "webAuthnRequestData": {
            "type": "string"
          },
          "webAuthnResponseData": {
            "type": "string"
          },
          "idKey": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WebAuthnRegisterDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "idKey": {
            "type": "string"
          },
          "webAuthnRequestData": {
            "type": "string"
          },
          "webAuthnResponseData": {
            "type": "string"
          }
        }
      },
      "CardMethodDTO": {
        "required": [
          "customerId",
          "idKey"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "idKey": {
            "type": "string"
          },
          "pinCode": {
            "type": "string"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "newPinCode": {
            "type": "string"
          }
        }
      },
      "CartItemCreateDTO": {
        "required": [
          "currency",
          "priceCode",
          "productCode",
          "quantity",
          "selectedOptions"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CartListCreateDTO": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemCreateDTO"
            }
          }
        }
      },
      "GWAdminDTO": {
        "required": [
          "adminUuid",
          "email",
          "fedUuid",
          "nickname",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "adminUuid": {
            "type": "string",
            "format": "uuid"
          },
          "fedUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SubscriptionChangePriceAdminDTO": {
        "required": [
          "price",
          "productCode",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "type": "number"
          },
          "productCode": {
            "type": "string"
          }
        }
      },
      "ReqV1": {
        "required": [
          "requestPrice"
        ],
        "type": "object",
        "properties": {
          "requestPrice": {
            "minimum": 0,
            "type": "number",
            "description": "환불 요청 금액"
          },
          "reason": {
            "type": "string",
            "description": "환불 사유"
          }
        },
        "description": "주문 취소 요청 데이터"
      },
      "QuotationStateChangeDTO": {
        "required": [
          "id",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "ProductStatusOrTypeUpdateDTO": {
        "required": [
          "productCode"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "countrySettingId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ManagerFullReq": {
        "title": "주문 전체취소 요청 데이터",
        "required": [
          "requestPrice"
        ],
        "type": "object",
        "properties": {
          "requestPrice": {
            "minimum": 0,
            "type": "number",
            "description": "환불 요청 금액"
          },
          "reason": {
            "type": "string",
            "description": "환불 사유"
          }
        }
      },
      "InvoiceStatusUpdateDTO": {
        "required": [
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "임시저장",
              "발송 예약",
              "발송",
              "결제 완료",
              "미납입",
              "발송 실패"
            ]
          }
        }
      },
      "DeliveryBunchSingle": {
        "required": [
          "code",
          "createdAt",
          "customerName",
          "customerUuid",
          "deliveryCharge",
          "deliveryItemList",
          "direction",
          "orderCode",
          "orderCreatedAt",
          "orderId",
          "orderPaymentDate",
          "purpose",
          "recipient",
          "status",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "purpose": {
            "type": "string",
            "enum": [
              "ORDER",
              "EXCHANGE_COLLECTION",
              "EXCHANGE_DELIVERY",
              "EXCHANGE_REJECTED",
              "RETURN_COLLECTION",
              "RETURN_REJECTED"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "TO_BUYER",
              "TO_SELLER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PREPARING",
              "SUSPENDED",
              "ON_THE_WAY",
              "COMPLETED"
            ]
          },
          "deliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "orderCode": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "orderPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientDTO"
          },
          "deliveryItemList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItemSingle"
            }
          },
          "tracking": {
            "$ref": "#/components/schemas/DeliveryTrackingDTO"
          },
          "orderPaidAmount": {
            "type": "number"
          },
          "orderReturnedAmount": {
            "type": "number"
          },
          "orderDiscountedAmount": {
            "type": "number"
          }
        }
      },
      "DeliveryItemSingle": {
        "required": [
          "orderItemCode",
          "paidAmount",
          "pricePlanName",
          "pricePrice",
          "priceType",
          "productName",
          "productType",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "orderItemCode": {
            "type": "string"
          },
          "paidAmount": {
            "type": "number"
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "pricePrice": {
            "type": "number"
          },
          "pricePlanName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "selectedProductOptionLabel": {
            "type": "string"
          },
          "movedTo": {
            "type": "string"
          }
        }
      },
      "DeliveryTrackingDTO": {
        "required": [
          "courier",
          "trackingNumber"
        ],
        "type": "object",
        "properties": {
          "courier": {
            "type": "string",
            "enum": [
              "DOOR_TO_DOOR",
              "LOTTE",
              "DONGBUEXPRESS",
              "HANIPS",
              "HANJIN",
              "HLC",
              "KDEXP",
              "KGLOGIS",
              "KOREANAIR",
              "ILOGEN",
              "EPANTOS",
              "EPOST",
              "INNOGIS",
              "ILYANGLOGIS",
              "CVSNET",
              "EPOST_EMS",
              "FEDEX",
              "KGBLS",
              "OCSKOREA",
              "TNT",
              "UPS",
              "DHL",
              "ETC"
            ]
          },
          "trackingNumber": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "departedAt": {
            "type": "string",
            "format": "date-time"
          },
          "arrivedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeliveryBunchCreateRequest": {
        "required": [
          "direction",
          "orderCode",
          "orderItemCodes",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "enum": [
              "ORDER",
              "EXCHANGE_COLLECTION",
              "EXCHANGE_DELIVERY",
              "EXCHANGE_REJECTED",
              "RETURN_COLLECTION",
              "RETURN_REJECTED"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "TO_BUYER",
              "TO_SELLER"
            ]
          },
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CSRefundItemManagerReq": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "requestPrice": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "환불 처리 금액"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "환불할 항목 코드"
          }
        },
        "description": "이게 있으면 부분환불, 없으면 전체환불"
      },
      "CSRefundManagerReq": {
        "title": "주문 환불 처리 데이터",
        "required": [
          "code",
          "items"
        ],
        "type": "object",
        "properties": {
          "requestPrice": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "환불 처리 금액합계"
          },
          "reason": {
            "type": "string",
            "description": "환불 사유"
          },
          "code": {
            "type": "string",
            "description": "주문 번호"
          },
          "items": {
            "type": "array",
            "description": "이게 있으면 부분환불, 없으면 전체환불",
            "items": {
              "$ref": "#/components/schemas/CSRefundItemManagerReq"
            }
          }
        }
      },
      "CancellationPatch": {
        "required": [
          "orderCode",
          "orderItemCodes",
          "reason"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CustomerReq": {
        "title": "주문 전체환불 요청 데이터",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "환불 사유"
          }
        }
      },
      "CustomerPinCodeReqDTO": {
        "required": [
          "pinCode"
        ],
        "type": "object",
        "properties": {
          "pinCode": {
            "type": "string"
          }
        }
      },
      "CustomerPinCodeValidationDTO": {
        "required": [
          "isPinCorrect",
          "pinCodeCount"
        ],
        "type": "object",
        "properties": {
          "pinCodeCount": {
            "type": "integer",
            "format": "int32"
          },
          "isPinCorrect": {
            "type": "boolean"
          }
        }
      },
      "DeliveryBunchCustomerSingle": {
        "required": [
          "code",
          "createdAt",
          "customerName",
          "customerUuid",
          "deliveryCharge",
          "direction",
          "orderCode",
          "orderCreatedAt",
          "orderId",
          "orderItems",
          "orderPaymentDate",
          "purpose",
          "recipient",
          "status",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "purpose": {
            "type": "string",
            "enum": [
              "ORDER",
              "EXCHANGE_COLLECTION",
              "EXCHANGE_DELIVERY",
              "EXCHANGE_REJECTED",
              "RETURN_COLLECTION",
              "RETURN_REJECTED"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "TO_BUYER",
              "TO_SELLER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PREPARING",
              "SUSPENDED",
              "ON_THE_WAY",
              "COMPLETED"
            ]
          },
          "deliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "orderCode": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "orderPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientDTO"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            }
          },
          "tracking": {
            "$ref": "#/components/schemas/DeliveryTrackingDTO"
          },
          "orderPaidAmount": {
            "type": "number"
          },
          "orderReturnedAmount": {
            "type": "number"
          },
          "orderDiscountedAmount": {
            "type": "number"
          },
          "receiptUrl": {
            "type": "string"
          }
        }
      },
      "ReturnStart": {
        "required": [
          "orderCode",
          "orderItemCodes",
          "reason"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ExchangeStart": {
        "required": [
          "orderCode",
          "orderItemCodes",
          "reason"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CancellationStart": {
        "required": [
          "orderCode",
          "orderItemCodes"
        ],
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string"
          },
          "orderItemCodes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "PageableDTO": {
        "title": "Pagination 정보",
        "required": [
          "offset",
          "pageNumber",
          "pageSize",
          "paged",
          "sort",
          "unpaged"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "오프셋",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "paged": {
            "type": "boolean",
            "description": "Pagination 정보 포함 여부"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "unpaged": {
            "type": "boolean",
            "description": "Pagination 정보 미포함 여부"
          }
        },
        "description": "Pagination 정보"
      },
      "SortDTO": {
        "title": "Pagination 정렬 정보",
        "required": [
          "empty",
          "sorted",
          "unsorted"
        ],
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean",
            "description": "비어있는지 여부"
          },
          "sorted": {
            "type": "boolean",
            "description": "정렬되어 있는지 여부"
          },
          "unsorted": {
            "type": "boolean",
            "description": "정렬되어 있지 않은지 여부"
          }
        },
        "description": "정렬 정보"
      },
      "SubscriptionListV1DTO": {
        "title": "구독 목록 정보",
        "required": [
          "customerName",
          "id",
          "interval",
          "intervalCount",
          "items",
          "lastPaymentDateTime",
          "price",
          "productName",
          "startDateTime",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "customerName": {
            "type": "string",
            "description": "고객명"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "price": {
            "$ref": "#/components/schemas/PriceV1DTO"
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemV1DTO"
            }
          },
          "startDateTime": {
            "type": "string",
            "description": "구독 시작 시점",
            "format": "date-time"
          },
          "lastPaymentDateTime": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          },
          "nextPaymentDateTime": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "expiredDateTime": {
            "type": "string",
            "description": "구독 만료 시점",
            "format": "date-time"
          },
          "pausedDateTime": {
            "type": "string",
            "description": "구독 일시정지 시점",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "description": "구독 주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "description": "구독 주기",
            "format": "int32"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CustomerPaymentMethodV1DTO"
          },
          "endDate": {
            "type": "string",
            "description": "종료일",
            "format": "date-time"
          }
        },
        "description": "구독 목록"
      },
      "SubscriptionListV1PageDTO": {
        "title": "구독 목록 Pagination 정보",
        "required": [
          "content",
          "empty",
          "first",
          "last",
          "number",
          "numberOfElements",
          "pageable",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "구독 목록",
            "items": {
              "$ref": "#/components/schemas/SubscriptionListV1DTO"
            }
          },
          "empty": {
            "type": "boolean",
            "description": "목록이 비어있는지 여부"
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지인지 여부"
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지인지 여부"
          },
          "number": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "페이지 내 고객 목록 개수",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableDTO"
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 고객 개수",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지수",
            "format": "int32"
          }
        }
      },
      "SubscriptionCalculatedDTO": {
        "title": "사용량 정산 정보",
        "required": [
          "amount",
          "endDate",
          "items",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "예상 결제 금액"
          },
          "items": {
            "type": "array",
            "description": "예상 결제 금액 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionCalculatedItemDTO"
            }
          },
          "startDate": {
            "type": "string",
            "description": "측정 시작 시점",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "측정 종료 시점",
            "format": "date-time"
          }
        }
      },
      "SubscriptionCalculatedItemDTO": {
        "required": [
          "amount",
          "name",
          "subscriptionItemId",
          "type"
        ],
        "type": "object",
        "properties": {
          "subscriptionItemId": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "count": {
            "type": "number",
            "description": "현재 사용량"
          },
          "amount": {
            "type": "number",
            "description": "예상 결제 금액"
          },
          "name": {
            "type": "string",
            "description": "이름"
          },
          "type": {
            "type": "string",
            "description": "타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "additionalBillings": {
            "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
          },
          "usageFormula": {
            "type": "string",
            "description": "사용량 기반 과금 계산식"
          }
        },
        "description": "예상 결제 금액 항목들"
      },
      "SubscriptionCalculatedItemV1DTO": {
        "required": [
          "amount",
          "name",
          "subscriptionItemId",
          "type"
        ],
        "type": "object",
        "properties": {
          "subscriptionItemId": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "count": {
            "type": "number",
            "description": "현재 사용량"
          },
          "amount": {
            "type": "number",
            "description": "예상 결제 금액"
          },
          "name": {
            "type": "string",
            "description": "이름"
          },
          "type": {
            "type": "string",
            "description": "타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "additionalBillings": {
            "$ref": "#/components/schemas/PriceAdditionalBillingV1DTO"
          }
        },
        "description": "예상 결제 금액 항목들"
      },
      "SubscriptionCalculatedV1DTO": {
        "title": "사용량 정산 정보",
        "required": [
          "amount",
          "endDate",
          "items",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "예상 결제 금액"
          },
          "items": {
            "type": "array",
            "description": "예상 결제 금액 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionCalculatedItemV1DTO"
            }
          },
          "startDate": {
            "type": "string",
            "description": "측정 시작 시점",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "측정 종료 시점",
            "format": "date-time"
          }
        }
      },
      "ProductListDTO": {
        "required": [
          "categories",
          "code",
          "createdAt",
          "description",
          "enabledDemo",
          "featuredImageUrl",
          "id",
          "modifiedAt",
          "name",
          "prices",
          "productOrder",
          "status",
          "type",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDTO"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDTO"
            }
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "isOnetimePurchasable": {
            "type": "boolean"
          },
          "productOrder": {
            "type": "integer",
            "format": "int32"
          },
          "countrySetting": {
            "$ref": "#/components/schemas/CountrySettingDTO"
          }
        },
        "description": "상품 목록"
      },
      "ProductListPageDTO": {
        "title": "상품 목록 Pagination 정보",
        "required": [
          "content",
          "empty",
          "first",
          "last",
          "number",
          "numberOfElements",
          "pageable",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "상품 목록",
            "items": {
              "$ref": "#/components/schemas/ProductListDTO"
            }
          },
          "empty": {
            "type": "boolean",
            "description": "목록이 비어있는지 여부"
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지인지 여부"
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지인지 여부"
          },
          "number": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "페이지 내 고객 목록 개수",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableDTO"
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 고객 개수",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지수",
            "format": "int32"
          }
        }
      },
      "OrderListPageV1DTO": {
        "title": "주문 목록 Pagination 정보",
        "required": [
          "content",
          "empty",
          "first",
          "last",
          "number",
          "numberOfElements",
          "pageable",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "주문 목록",
            "items": {
              "$ref": "#/components/schemas/OrderListV1DTO"
            }
          },
          "empty": {
            "type": "boolean",
            "description": "목록이 비어있는지 여부"
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지인지 여부"
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지인지 여부"
          },
          "number": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "페이지 내 고객 목록 개수",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableDTO"
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 고객 개수",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지수",
            "format": "int32"
          }
        }
      },
      "OrderListV1DTO": {
        "title": "주문 목록 정보",
        "required": [
          "claimMethodType",
          "createdAt",
          "id",
          "items",
          "leftAmount",
          "paidAmount",
          "price",
          "productName",
          "returnedAmount",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "description": "고객명"
          },
          "type": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "items": {
            "type": "array",
            "description": "주문 항목",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            }
          },
          "price": {
            "type": "integer",
            "description": "가격",
            "format": "int32"
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "청구서 사용시, 구매 기한",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "description": "주문 생성 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "주문 수정 시점",
            "format": "date-time"
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지, 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "returnedAmount": {
            "type": "number",
            "description": "환불 금액"
          },
          "leftAmount": {
            "type": "number",
            "description": "환불 안 된 금액"
          }
        },
        "description": "주문 목록"
      },
      "ApplicationContext": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "autowireCapableBeanFactory": {
            "$ref": "#/components/schemas/AutowireCapableBeanFactory"
          },
          "applicationName": {
            "type": "string"
          },
          "startupDate": {
            "type": "integer",
            "format": "int64"
          },
          "parent": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "id": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "beanDefinitionCount": {
            "type": "integer",
            "format": "int32"
          },
          "beanDefinitionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentBeanFactory": {
            "$ref": "#/components/schemas/BeanFactory"
          },
          "classLoader": {
            "type": "object",
            "properties": {
              "parent": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "unnamedModule": {
                    "type": "object",
                    "properties": {
                      "layer": {
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "descriptor": {
                        "type": "object",
                        "properties": {
                          "open": {
                            "type": "boolean"
                          },
                          "automatic": {
                            "type": "boolean"
                          }
                        }
                      },
                      "classLoader": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "defaultAssertionStatus": {
                            "type": "boolean",
                            "writeOnly": true
                          },
                          "registeredAsParallelCapable": {
                            "type": "boolean"
                          },
                          "definedPackages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "specificationTitle": {
                                  "type": "string"
                                },
                                "specificationVersion": {
                                  "type": "string"
                                },
                                "specificationVendor": {
                                  "type": "string"
                                },
                                "implementationTitle": {
                                  "type": "string"
                                },
                                "implementationVersion": {
                                  "type": "string"
                                },
                                "implementationVendor": {
                                  "type": "string"
                                },
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "sealed": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "named": {
                        "type": "boolean"
                      },
                      "packages": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "defaultAssertionStatus": {
                    "type": "boolean",
                    "writeOnly": true
                  },
                  "registeredAsParallelCapable": {
                    "type": "boolean"
                  },
                  "definedPackages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "specificationTitle": {
                          "type": "string"
                        },
                        "specificationVersion": {
                          "type": "string"
                        },
                        "specificationVendor": {
                          "type": "string"
                        },
                        "implementationTitle": {
                          "type": "string"
                        },
                        "implementationVersion": {
                          "type": "string"
                        },
                        "implementationVendor": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "declaredAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "sealed": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "unnamedModule": {
                "type": "object",
                "properties": {
                  "layer": {
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "descriptor": {
                    "type": "object",
                    "properties": {
                      "open": {
                        "type": "boolean"
                      },
                      "automatic": {
                        "type": "boolean"
                      }
                    }
                  },
                  "classLoader": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "defaultAssertionStatus": {
                        "type": "boolean",
                        "writeOnly": true
                      },
                      "registeredAsParallelCapable": {
                        "type": "boolean"
                      },
                      "definedPackages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "specificationTitle": {
                              "type": "string"
                            },
                            "specificationVersion": {
                              "type": "string"
                            },
                            "specificationVendor": {
                              "type": "string"
                            },
                            "implementationTitle": {
                              "type": "string"
                            },
                            "implementationVersion": {
                              "type": "string"
                            },
                            "implementationVendor": {
                              "type": "string"
                            },
                            "annotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "declaredAnnotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "sealed": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "declaredAnnotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "named": {
                    "type": "boolean"
                  },
                  "packages": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "defaultAssertionStatus": {
                "type": "boolean",
                "writeOnly": true
              },
              "registeredAsParallelCapable": {
                "type": "boolean"
              },
              "definedPackages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "specificationTitle": {
                      "type": "string"
                    },
                    "specificationVersion": {
                      "type": "string"
                    },
                    "specificationVendor": {
                      "type": "string"
                    },
                    "implementationTitle": {
                      "type": "string"
                    },
                    "implementationVersion": {
                      "type": "string"
                    },
                    "implementationVendor": {
                      "type": "string"
                    },
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "sealed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AutowireCapableBeanFactory": {
        "type": "object"
      },
      "BeanFactory": {
        "type": "object"
      },
      "Environment": {
        "type": "object",
        "properties": {
          "activeProfiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultProfiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RedirectView": {
        "type": "object",
        "properties": {
          "applicationContext": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "servletContext": {
            "type": "object",
            "properties": {
              "majorVersion": {
                "type": "integer",
                "format": "int32"
              },
              "minorVersion": {
                "type": "integer",
                "format": "int32"
              },
              "attributeNames": {
                "type": "object"
              },
              "contextPath": {
                "type": "string"
              },
              "initParameterNames": {
                "type": "object"
              },
              "servletNames": {
                "type": "object",
                "deprecated": true
              },
              "sessionCookieConfig": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "maxAge": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "httpOnly": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "jspConfigDescriptor": {
                "type": "object",
                "properties": {
                  "jspPropertyGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scriptingInvalid": {
                          "type": "string"
                        },
                        "elIgnored": {
                          "type": "string"
                        },
                        "pageEncoding": {
                          "type": "string"
                        },
                        "isXml": {
                          "type": "string"
                        },
                        "includePreludes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "includeCodas": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "deferredSyntaxAllowedAsLiteral": {
                          "type": "string"
                        },
                        "trimDirectiveWhitespaces": {
                          "type": "string"
                        },
                        "errorOnUndeclaredNamespace": {
                          "type": "string"
                        },
                        "buffer": {
                          "type": "string"
                        },
                        "urlPatterns": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "defaultContentType": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "taglibs": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "taglibURI": {
                          "type": "string"
                        },
                        "taglibLocation": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "virtualServerName": {
                "type": "string"
              },
              "sessionTimeout": {
                "type": "integer",
                "format": "int32"
              },
              "requestCharacterEncoding": {
                "type": "string"
              },
              "responseCharacterEncoding": {
                "type": "string"
              },
              "effectiveMajorVersion": {
                "type": "integer",
                "format": "int32"
              },
              "effectiveMinorVersion": {
                "type": "integer",
                "format": "int32"
              },
              "servlets": {
                "type": "object",
                "deprecated": true
              },
              "serverInfo": {
                "type": "string"
              },
              "servletContextName": {
                "type": "string"
              },
              "servletRegistrations": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runAsRole": {
                      "type": "string"
                    },
                    "initParameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "className": {
                      "type": "string"
                    }
                  }
                }
              },
              "filterRegistrations": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "servletNameMappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "urlPatternMappings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "initParameters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "className": {
                      "type": "string"
                    }
                  }
                }
              },
              "sessionTrackingModes": {
                "uniqueItems": true,
                "type": "array",
                "writeOnly": true,
                "items": {
                  "type": "string",
                  "enum": [
                    "COOKIE",
                    "URL",
                    "SSL"
                  ]
                }
              },
              "defaultSessionTrackingModes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "COOKIE",
                    "URL",
                    "SSL"
                  ]
                }
              },
              "effectiveSessionTrackingModes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "COOKIE",
                    "URL",
                    "SSL"
                  ]
                }
              },
              "classLoader": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "defaultAssertionStatus": {
                    "type": "boolean",
                    "writeOnly": true
                  },
                  "registeredAsParallelCapable": {
                    "type": "boolean"
                  },
                  "definedPackages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "specificationTitle": {
                          "type": "string"
                        },
                        "specificationVersion": {
                          "type": "string"
                        },
                        "specificationVendor": {
                          "type": "string"
                        },
                        "implementationTitle": {
                          "type": "string"
                        },
                        "implementationVersion": {
                          "type": "string"
                        },
                        "implementationVendor": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "declaredAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "sealed": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "writeOnly": true
          },
          "contentType": {
            "type": "string"
          },
          "requestContextAttribute": {
            "type": "string"
          },
          "staticAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "exposePathVariables": {
            "type": "boolean"
          },
          "exposeContextBeansAsAttributes": {
            "type": "boolean",
            "writeOnly": true
          },
          "exposedContextBeanNames": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          },
          "beanName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "contextRelative": {
            "type": "boolean",
            "writeOnly": true
          },
          "http10Compatible": {
            "type": "boolean",
            "writeOnly": true
          },
          "exposeModelAttributes": {
            "type": "boolean",
            "writeOnly": true
          },
          "encodingScheme": {
            "type": "string",
            "writeOnly": true
          },
          "statusCode": {
            "type": "string",
            "writeOnly": true,
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "expandUriTemplateVariables": {
            "type": "boolean",
            "writeOnly": true
          },
          "propagateQueryParams": {
            "type": "boolean",
            "writeOnly": true
          },
          "hosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "propagateQueryProperties": {
            "type": "boolean"
          },
          "redirectView": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "attributesCSV": {
            "type": "string",
            "writeOnly": true
          },
          "attributesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "InvoiceListDTO": {
        "title": "청구서 목록 정보",
        "required": [
          "id",
          "orderCode",
          "orderType",
          "price",
          "productCountryCode",
          "productCurrencyCode",
          "vendorUUID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "orderCode": {
            "type": "string",
            "description": "관련 주문 코드"
          },
          "customerName": {
            "type": "string",
            "description": "청구서를 받는 고객 이름"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "orderType": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "price": {
            "type": "number",
            "description": "금액"
          },
          "status": {
            "type": "string",
            "description": "청구서 상태",
            "enum": [
              "임시저장",
              "발송 예약",
              "발송",
              "결제 완료",
              "미납입",
              "발송 실패"
            ]
          },
          "paymentDate": {
            "type": "string",
            "description": "결제 시점",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "구매 기한",
            "format": "date-time"
          },
          "vendorUUID": {
            "type": "string",
            "description": "벤더 UUID",
            "format": "uuid"
          },
          "parentVendorUUID": {
            "type": "string",
            "description": "부모 벤더 UUID",
            "format": "uuid"
          },
          "reservationAt": {
            "type": "string",
            "description": "예약 발송일",
            "format": "date-time"
          },
          "productCountryCode": {
            "type": "string",
            "description": "첫번째 상품의 국가 코드"
          },
          "productCurrencyCode": {
            "type": "string",
            "description": "첫번째 상품의 통화 코드"
          }
        },
        "description": "청구서 목록"
      },
      "InvoiceListPageDTO": {
        "title": "청구서 목록 Pagination 정보",
        "required": [
          "content",
          "empty",
          "first",
          "last",
          "number",
          "numberOfElements",
          "pageable",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "청구서 목록",
            "items": {
              "$ref": "#/components/schemas/InvoiceListDTO"
            }
          },
          "empty": {
            "type": "boolean",
            "description": "목록이 비어있는지 여부"
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지인지 여부"
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지인지 여부"
          },
          "number": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "페이지 내 고객 목록 개수",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableDTO"
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 고객 개수",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지수",
            "format": "int32"
          }
        },
        "description": "청구서 목록"
      },
      "InvoiceListResponseDTO": {
        "title": "청구서 목록 및 통계 정보",
        "required": [
          "invoiceList",
          "overdueCount",
          "paidCount",
          "reservationCount",
          "sendCount"
        ],
        "type": "object",
        "properties": {
          "reservationCount": {
            "type": "integer",
            "description": "예약된 청구서 개수",
            "format": "int32"
          },
          "sendCount": {
            "type": "integer",
            "description": "발송한 청구서 개수",
            "format": "int32"
          },
          "paidCount": {
            "type": "integer",
            "description": "결제 완료된 청구서 개수",
            "format": "int32"
          },
          "overdueCount": {
            "type": "integer",
            "description": "결제 기한 지난 청구서 개수",
            "format": "int32"
          },
          "invoiceList": {
            "$ref": "#/components/schemas/InvoiceListPageDTO"
          }
        }
      },
      "DeliveryBunchSingleV1": {
        "required": [
          "createdAt",
          "deliveryCharge",
          "deliveryItemList",
          "direction",
          "purpose",
          "recipient",
          "status"
        ],
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "enum": [
              "ORDER",
              "EXCHANGE_COLLECTION",
              "EXCHANGE_DELIVERY",
              "EXCHANGE_REJECTED",
              "RETURN_COLLECTION",
              "RETURN_REJECTED"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "TO_BUYER",
              "TO_SELLER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PREPARING",
              "SUSPENDED",
              "ON_THE_WAY",
              "COMPLETED"
            ]
          },
          "deliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientDTO"
          },
          "deliveryItemList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryItemSingleV1"
            }
          },
          "tracking": {
            "$ref": "#/components/schemas/DeliveryTrackingDTO"
          }
        }
      },
      "DeliveryItemSingleV1": {
        "required": [
          "orderItemCode"
        ],
        "type": "object",
        "properties": {
          "orderItemCode": {
            "type": "string"
          },
          "movedTo": {
            "type": "string"
          }
        }
      },
      "CustomerListDTO": {
        "title": "고객 목록 정보",
        "required": [
          "activeSubscriptionCount",
          "code",
          "countryCode",
          "customFields",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms",
          "orderCount",
          "paymentMethods"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "name": {
            "type": "string",
            "description": "고객 이름"
          },
          "email": {
            "type": "string",
            "description": "고객 이메일"
          },
          "phone": {
            "type": "string",
            "description": "고객 전화번호"
          },
          "orderCount": {
            "type": "integer",
            "description": "고객이 주문한 주문 개수",
            "format": "int32"
          },
          "activeSubscriptionCount": {
            "type": "integer",
            "description": "고객의 활성 구독 개수",
            "format": "int32"
          },
          "paymentMethods": {
            "type": "array",
            "description": "고객이 사용중인 결제수단 목록",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodDTO"
            }
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "createdAt": {
            "type": "string",
            "description": "고객 생성 일시",
            "format": "date-time"
          },
          "dormantAt": {
            "type": "string",
            "description": "고객 휴면전환 일시",
            "format": "date-time"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "커스텀 필드 영역"
            },
            "description": "커스텀 필드 영역"
          },
          "countryCode": {
            "type": "string",
            "description": "가입한 위치의 국가 코드"
          }
        },
        "description": "고객 목록"
      },
      "CustomerListPageDTO": {
        "title": "고객 목록 Pagination 정보",
        "required": [
          "content",
          "empty",
          "first",
          "last",
          "number",
          "numberOfElements",
          "pageable",
          "size",
          "sort",
          "totalElements",
          "totalPages"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "고객 목록",
            "items": {
              "$ref": "#/components/schemas/CustomerListDTO"
            }
          },
          "empty": {
            "type": "boolean",
            "description": "목록이 비어있는지 여부"
          },
          "first": {
            "type": "boolean",
            "description": "첫 번째 페이지인지 여부"
          },
          "last": {
            "type": "boolean",
            "description": "마지막 페이지인지 여부"
          },
          "number": {
            "type": "integer",
            "description": "페이지 번호",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "페이지 내 고객 목록 개수",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableDTO"
          },
          "size": {
            "type": "integer",
            "description": "페이지 크기",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortDTO"
          },
          "totalElements": {
            "type": "integer",
            "description": "전체 고객 개수",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "전체 페이지수",
            "format": "int32"
          }
        }
      },
      "PageRequestDTO": {
        "required": [
          "page",
          "size",
          "sort",
          "sortDir"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sortDir": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "sort": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SearchDTO": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageProductListDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductListDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ProductSummaryDTO": {
        "required": [
          "statusOutOfStock",
          "statusRejected",
          "statusSale",
          "statusUnsold",
          "statusWaitingApproval",
          "typeBox",
          "typeBundle",
          "typeSoftware"
        ],
        "type": "object",
        "properties": {
          "typeBox": {
            "type": "integer",
            "format": "int64"
          },
          "typeSoftware": {
            "type": "integer",
            "format": "int64"
          },
          "typeBundle": {
            "type": "integer",
            "format": "int64"
          },
          "statusSale": {
            "type": "integer",
            "format": "int64"
          },
          "statusOutOfStock": {
            "type": "integer",
            "format": "int64"
          },
          "statusUnsold": {
            "type": "integer",
            "format": "int64"
          },
          "statusWaitingApproval": {
            "type": "integer",
            "format": "int64"
          },
          "statusRejected": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PriceDTOForPricingTable": {
        "required": [
          "code",
          "plan",
          "price"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          }
        }
      },
      "ProductDTOForPricingTable": {
        "required": [
          "code",
          "description",
          "name",
          "prices"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDTOForPricingTable"
            }
          }
        }
      },
      "CategoryDTO": {
        "required": [
          "categoryId",
          "name",
          "visibleOnMyStoreBreadcrumb"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "visibleOnMyStoreBreadcrumb": {
            "type": "boolean"
          }
        }
      },
      "DeliveryChargeResponseDTO": {
        "required": [
          "islandAndMountainShipAmount",
          "jejuShipAmount",
          "useDefaultCourier",
          "useDeliveryCharge",
          "useLocalShipCharge"
        ],
        "type": "object",
        "properties": {
          "useDefaultCourier": {
            "type": "boolean"
          },
          "defaultCourierId": {
            "type": "string"
          },
          "useDeliveryCharge": {
            "type": "boolean"
          },
          "deliveryChargeType": {
            "type": "string",
            "enum": [
              "FREE",
              "CONDITIONAL_FREE",
              "FIXED"
            ]
          },
          "defaultDeliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "freeShipOverAmount": {
            "type": "integer",
            "format": "int64"
          },
          "useLocalShipCharge": {
            "type": "boolean"
          },
          "jejuShipAmount": {
            "type": "integer",
            "format": "int64"
          },
          "islandAndMountainShipAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EnabledPaymentGatewayDTO": {
        "required": [
          "isBill",
          "isTest",
          "paymentGateway",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "isTest": {
            "type": "boolean"
          },
          "isBill": {
            "type": "boolean"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Period": {
        "title": "기간 정보",
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "끝 시점",
            "format": "date-time"
          }
        }
      },
      "UrlPayCustomerCardMethodDTO": {
        "type": "object",
        "properties": {
          "cardName": {
            "type": "string"
          },
          "cardNum": {
            "type": "string"
          },
          "customerPaymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          }
        }
      },
      "UrlPayOrderCustomerDTO": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "usePinCode": {
            "type": "boolean"
          },
          "useWebAuth": {
            "type": "boolean"
          }
        }
      },
      "UrlPayOrderDTO": {
        "required": [
          "currency",
          "deliveryCharges",
          "enabledPaymentGateways",
          "id",
          "items",
          "orderCode",
          "orderType",
          "productName",
          "useOneClick",
          "vendorSettings"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "orderCode": {
            "type": "string"
          },
          "orderType": {
            "type": "string",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "discount": {
            "type": "integer",
            "format": "int64"
          },
          "instantAmount": {
            "type": "integer",
            "format": "int64"
          },
          "customer": {
            "$ref": "#/components/schemas/UrlPayOrderCustomerDTO"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlPayOrderItem"
            }
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorInfoDTO"
          },
          "deliveryCharges": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
            }
          },
          "vendorSettings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/VendorSettingsDTO"
            }
          },
          "enabledCustomerCardMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlPayCustomerCardMethodDTO"
            }
          },
          "enabledPaymentGateways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnabledPaymentGatewayDTO"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlPaySubscriptionDTO"
            }
          },
          "paymentInfo": {
            "$ref": "#/components/schemas/UrlPayPaymentDTO"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string"
          },
          "parentSubscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "useOneClick": {
            "type": "boolean"
          }
        }
      },
      "UrlPayOrderItem": {
        "required": [
          "applyDemo",
          "applyFirstSale",
          "claimMethodType",
          "code",
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "firstSaleEnabled",
          "firstSalePrice",
          "id",
          "isOnetimePurchasable",
          "optionCombinations",
          "optionGroups",
          "priceAmount",
          "priceType",
          "productType",
          "recurringInterval",
          "recurringIntervalCount",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "baseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "capQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "optionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "optionCombinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationDTO"
            }
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "fixedOption": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "applyDemo": {
            "type": "boolean"
          },
          "applyFirstSale": {
            "type": "boolean"
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "demoPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "firstSaleEnabled": {
            "type": "boolean"
          },
          "firstSalePrice": {
            "type": "number"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "recurringInterval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "recurringIntervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "priceAmount": {
            "type": "number"
          },
          "isOnetimePurchasable": {
            "type": "boolean"
          },
          "setupOptionPrice": {
            "type": "number"
          },
          "parentOrderItemCode": {
            "type": "string"
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UrlPayPaymentDTO": {
        "required": [
          "businessName",
          "itemName",
          "orderId",
          "price"
        ],
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "cardNumber": {
            "type": "string"
          },
          "businessName": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "vBankDTO": {
            "$ref": "#/components/schemas/VBankDTO"
          },
          "niceCmsDTO": {
            "$ref": "#/components/schemas/NiceCmsDTO"
          },
          "vbankDTO": {
            "$ref": "#/components/schemas/VBankDTO"
          }
        }
      },
      "UrlPaySubscriptionDTO": {
        "required": [
          "price",
          "productName"
        ],
        "type": "object",
        "properties": {
          "productName": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/UrlPaySubscriptionPriceDTO"
          },
          "trialPeriod": {
            "$ref": "#/components/schemas/Period"
          }
        }
      },
      "UrlPaySubscriptionPriceDTO": {
        "required": [
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "originPrice",
          "planName",
          "recurring"
        ],
        "type": "object",
        "properties": {
          "originPrice": {
            "type": "number"
          },
          "recurring": {
            "$ref": "#/components/schemas/Interval"
          },
          "planName": {
            "type": "string"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "demoPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          }
        }
      },
      "VendorAppDTO": {
        "required": [
          "installed",
          "priceCode",
          "productCode",
          "status"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "installed": {
            "type": "boolean"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VendorCheckList": {
        "required": [
          "firstActivation"
        ],
        "type": "object",
        "properties": {
          "firstActivation": {
            "type": "boolean"
          }
        }
      },
      "VendorInfoDTO": {
        "required": [
          "apps",
          "checkList",
          "children",
          "deliveryCharge",
          "name",
          "useAuth",
          "usePayout",
          "useStore",
          "uuid",
          "vendorSettings",
          "zoneId"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "parentUuid": {
            "type": "string",
            "format": "uuid"
          },
          "useAuth": {
            "type": "boolean"
          },
          "useStore": {
            "type": "boolean"
          },
          "usePayout": {
            "type": "boolean"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deliveryCharge": {
            "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
          },
          "vendorSettings": {
            "$ref": "#/components/schemas/VendorSettingsDTO"
          },
          "contactUrl": {
            "type": "string"
          },
          "checkList": {
            "$ref": "#/components/schemas/VendorCheckList"
          },
          "apps": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorAppDTO"
            }
          },
          "children": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "zoneId": {
            "type": "string"
          },
          "vendorTerms": {
            "$ref": "#/components/schemas/VendorTermsDTO"
          }
        }
      },
      "VendorSettingsDTO": {
        "required": [
          "notiBeforePayment",
          "notiBeforePaymentDays",
          "vatIncluded",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "vatIncluded": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "number"
          },
          "paymentAmountScale": {
            "type": "integer",
            "format": "int32"
          },
          "notiBeforePayment": {
            "type": "boolean"
          },
          "notiBeforePaymentDays": {
            "type": "integer",
            "format": "int32"
          },
          "notiBeforePaymentTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "VendorTermsAgreeDTO": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "field": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "VendorTermsDTO": {
        "required": [
          "termsAgree",
          "useCheckBox"
        ],
        "type": "object",
        "properties": {
          "useCheckBox": {
            "type": "boolean"
          },
          "termsAgree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTermsAgreeDTO"
            }
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SubscriptionSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "description": "고객이름, 상품이름, 가격플랜을 OR 조건으로 찾습니다."
          },
          "subscriptionId": {
            "type": "integer",
            "description": "구독 ID 를 And 조건으로 찾습니다.",
            "format": "int64"
          },
          "productName": {
            "type": "string",
            "description": "구독 아이템의 상품이름을 And 조건으로 찾습니다."
          },
          "planName": {
            "type": "string",
            "description": "구독 아이템의 가격플랜을 And 조건으로 찾습니다."
          },
          "customerName": {
            "type": "string",
            "description": "구독의 고객이름을 And 조건으로 찾습니다."
          },
          "phone": {
            "type": "string",
            "description": "구독의 고객전화번호를 And 조건으로 찾습니다."
          },
          "email": {
            "type": "string",
            "description": "구독의 고객이메일을 And 조건으로 찾습니다."
          },
          "vendorUuid": {
            "type": "string",
            "description": "하위 벤더들의 구독을 And 조건으로 찾습니다.",
            "format": "uuid"
          },
          "statuses": {
            "type": "array",
            "description": "구독상태를 And 조건으로 찾습니다.",
            "items": {
              "type": "string",
              "description": "구독상태를 And 조건으로 찾습니다.",
              "enum": [
                "ACTIVE",
                "UNPAID",
                "PENDING_PAUSE",
                "PAUSE",
                "PENDING_CANCEL",
                "EXPIRED",
                "CANCELED",
                "INCOMPLETE",
                "QUEUEING"
              ]
            }
          },
          "ids": {
            "type": "array",
            "description": "구독 ID 를 And 조건으로 찾습니다.",
            "items": {
              "type": "integer",
              "description": "구독 ID 를 And 조건으로 찾습니다.",
              "format": "int64"
            }
          },
          "customerUuid": {
            "type": "string",
            "description": "구독의 고객 UUID 를 And 조건으로 찾습니다.",
            "format": "uuid"
          }
        }
      },
      "CustomerPaymentMethodDTO": {
        "title": "결제 수단 정보",
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "description": "사용한 PG",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentInfo": {
            "type": "string",
            "description": "결제수단 정보(카드번호 등)"
          }
        }
      },
      "PageSubscriptionListDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionListDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionItemListDTO": {
        "required": [
          "code",
          "id",
          "planName",
          "priceCode",
          "priceType",
          "productName",
          "unit",
          "usedAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "usedAmount": {
            "type": "number"
          },
          "priceCode": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "selectedOptionsLabel": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "parentSubscriptionItemCode": {
            "type": "string"
          },
          "adminPlanName": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
          }
        }
      },
      "SubscriptionListDTO": {
        "required": [
          "claimMethodType",
          "code",
          "customerName",
          "id",
          "interval",
          "intervalCount",
          "items",
          "lastPaymentDateTime",
          "price",
          "productName",
          "startDateTime",
          "status",
          "totalAmount",
          "vendorUUID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "customerName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastPaymentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "nextPaymentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiredDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "pausedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CustomerPaymentMethodDTO"
          },
          "code": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "canceledDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "cancelRequestAt": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemListDTO"
            }
          },
          "vendorUUID": {
            "type": "string",
            "format": "uuid"
          },
          "parentVendorUUID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SubscriptionCustomerDTO": {
        "title": "구독 고객 정보",
        "required": [
          "attributes",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "description": "고객 UUID",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "name": {
            "type": "string",
            "description": "이름"
          },
          "email": {
            "type": "string",
            "description": "이메일"
          },
          "phone": {
            "type": "string",
            "description": "전화번호"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "고객 추가 데이터"
            },
            "description": "고객 추가 데이터"
          }
        }
      },
      "SubscriptionDTO": {
        "required": [
          "currentPeriod",
          "customer",
          "id",
          "interval",
          "intervalCount",
          "relatedOrders",
          "startDate",
          "status",
          "subscriptionLogs"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemDTO"
            }
          },
          "parentOrder": {
            "$ref": "#/components/schemas/OrderDTO"
          },
          "customer": {
            "$ref": "#/components/schemas/SubscriptionCustomerDTO"
          },
          "relatedOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDTO"
            }
          },
          "subscriptionLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionLogDTO"
            }
          },
          "pausedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/CustomerPaymentMethodDTO"
          },
          "provideStartDay": {
            "type": "integer",
            "format": "int32"
          },
          "billingDate": {
            "type": "integer",
            "format": "int32"
          },
          "canceledVia": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "subscriptionMemo": {
            "type": "string"
          },
          "currentPeriod": {
            "$ref": "#/components/schemas/PeriodDTO"
          }
        }
      },
      "SubscriptionLogDTO": {
        "required": [
          "content",
          "createdAt",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Cancel": {
        "required": [
          "canceled",
          "pendingCancel"
        ],
        "type": "object",
        "properties": {
          "canceled": {
            "type": "integer",
            "format": "int32"
          },
          "pendingCancel": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Pause": {
        "required": [
          "paused",
          "pendingPause"
        ],
        "type": "object",
        "properties": {
          "paused": {
            "type": "integer",
            "format": "int32"
          },
          "pendingPause": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SubscriptionSummaryDTO": {
        "required": [
          "active",
          "cancel",
          "expired",
          "failed",
          "paused"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "integer",
            "format": "int32"
          },
          "failed": {
            "type": "integer",
            "format": "int32"
          },
          "paused": {
            "$ref": "#/components/schemas/Pause"
          },
          "cancel": {
            "$ref": "#/components/schemas/Cancel"
          },
          "expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QuotationSearch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "OrderItemListResponseDTO": {
        "required": [
          "code",
          "isRecurring",
          "priceType",
          "productCountryCode",
          "productCurrencyCode",
          "productName",
          "productType",
          "selectedProductOptionNames",
          "status"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "isRecurring": {
            "type": "boolean"
          },
          "pricePlanName": {
            "type": "string"
          },
          "selectedProductOptionNames": {
            "type": "string"
          },
          "productCountryCode": {
            "type": "string"
          },
          "productCurrencyCode": {
            "type": "string"
          }
        }
      },
      "PageQuotationDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuotationDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "QuotationDTO": {
        "required": [
          "id",
          "interval",
          "intervalCount",
          "orderItemAmount",
          "orderItems",
          "state",
          "vendorUUID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemListResponseDTO"
            }
          },
          "orderItemAmount": {
            "type": "number"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "interval": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "vendorUUID": {
            "type": "string",
            "format": "uuid"
          },
          "parentVendorUUID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LogResponseDTO": {
        "required": [
          "actor",
          "content",
          "createdAt",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "actor": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "QuotationDetailDTO": {
        "required": [
          "createdAt",
          "id",
          "order",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/OrderDTO"
          },
          "requestMemo": {
            "type": "string"
          },
          "quotationMemo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogResponseDTO"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "QuotationSummaryDTO": {
        "required": [
          "completed",
          "invoiced",
          "requested",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "requested": {
            "type": "integer",
            "format": "int64"
          },
          "invoiced": {
            "type": "integer",
            "format": "int64"
          },
          "completed": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "description": "상품이름, 가격플랜을 Or 조건으로 찾습니다."
          },
          "statuses": {
            "type": "array",
            "description": "상품상태를 And 조건으로 찾습니다.",
            "items": {
              "type": "string",
              "description": "상품상태를 And 조건으로 찾습니다.",
              "enum": [
                "SALE",
                "OUT_OF_STOCK",
                "UNSOLD",
                "WAITING_APPROVAL",
                "REJECTED"
              ]
            }
          },
          "categoryId": {
            "type": "integer",
            "description": "상품카테고리를 And 조건으로 찾습니다.",
            "format": "int64"
          },
          "productCode": {
            "type": "string",
            "description": "상품코드를 And 조건으로 찾습니다."
          },
          "productName": {
            "type": "string",
            "description": "상품이름을 And 조건으로 찾습니다."
          },
          "productType": {
            "type": "string",
            "description": "상품타입을 And 조건으로 찾습니다.",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "vendorUuid": {
            "type": "string",
            "description": "하위 벤더들의 상품을 And 조건으로 찾습니다.",
            "format": "uuid"
          }
        }
      },
      "PriceSearchDTO": {
        "required": [
          "billingType",
          "code",
          "plan",
          "planCode",
          "price",
          "productName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "planCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "billingType": {
            "type": "string"
          },
          "recurringDTO": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          }
        }
      },
      "NavigationDTO": {
        "required": [
          "price",
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductNavigation"
          },
          "price": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDTO"
            }
          }
        }
      },
      "ProductNavigation": {
        "required": [
          "categories",
          "code",
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "eventBadge",
          "isOnetimePurchasable",
          "optionCombinations",
          "optionGroups",
          "productOrder",
          "status"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "optionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "optionCombinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationDTO"
            }
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "demoPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDTO"
            }
          },
          "isOnetimePurchasable": {
            "type": "boolean"
          },
          "eventBadge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductEventBadge"
            }
          },
          "notice": {
            "type": "string"
          },
          "productOrder": {
            "type": "integer",
            "format": "int32"
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidgetDTO"
          },
          "countrySetting": {
            "$ref": "#/components/schemas/CountrySettingDTO"
          }
        }
      },
      "BundleProductListDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          }
        }
      },
      "OrderSearch": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CREATED",
                "DEPOSIT_WAITING",
                "CANCELLED",
                "PAID",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY",
                "ORDER_DELIVERY_PREPARING",
                "ORDER_DELIVERY_SUSPENDED",
                "ORDER_DELIVERY_ON_THE_WAY",
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING",
                "EXCHANGE_REJECTED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REJECTED",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY",
                "PAYMENT_FAILURE",
                "FINISHED_EXCHANGE_AVAILABLE",
                "FINISHED_RETURN_AVAILABLE",
                "FINISHED_SUCCESSFULLY"
              ]
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderListResponseDTO": {
        "required": [
          "claimMethodType",
          "code",
          "createdAt",
          "id",
          "items",
          "leftAmount",
          "paidAmount",
          "returnedAmount",
          "type",
          "vendorUUID"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemListResponseDTO"
            }
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "paymentReceiptUrl": {
            "type": "string"
          },
          "idKey": {
            "type": "string"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "code": {
            "type": "string"
          },
          "paidAmount": {
            "type": "number"
          },
          "returnedAmount": {
            "type": "number"
          },
          "leftAmount": {
            "type": "number"
          },
          "vendorUUID": {
            "type": "string",
            "format": "uuid"
          },
          "parentVendorUUID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PageOrderListResponseDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderListResponseDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "OrderPaymentSummaryDTO": {
        "required": [
          "depositWaiting",
          "failed",
          "paid",
          "total"
        ],
        "type": "object",
        "properties": {
          "depositWaiting": {
            "$ref": "#/components/schemas/TotalPricePerUnitDTO"
          },
          "paid": {
            "$ref": "#/components/schemas/TotalPricePerUnitDTO"
          },
          "failed": {
            "$ref": "#/components/schemas/TotalPricePerUnitDTO"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TotalPricePerUnitDTO": {
        "required": [
          "totalPrice",
          "units"
        ],
        "type": "object",
        "properties": {
          "totalPrice": {
            "type": "number"
          },
          "units": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InvoiceSearch": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string",
            "description": "상품이름, 플랜, 고객명, 고객이메일을 Or 조건으로 찾습니다."
          },
          "email": {
            "type": "string",
            "description": "고객이메일을 And 조건으로 찾습니다."
          },
          "status": {
            "type": "string",
            "enum": [
              "임시저장",
              "발송 예약",
              "발송",
              "결제 완료",
              "미납입",
              "발송 실패"
            ]
          }
        }
      },
      "InvoiceSummaryDTO": {
        "required": [
          "overdueCount",
          "paidCount",
          "reservationCount",
          "sendCount"
        ],
        "type": "object",
        "properties": {
          "sendCount": {
            "type": "integer",
            "format": "int64"
          },
          "reservationCount": {
            "type": "integer",
            "format": "int64"
          },
          "paidCount": {
            "type": "integer",
            "format": "int64"
          },
          "overdueCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RequestListWithFilter": {
        "type": "object",
        "properties": {
          "statuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PREPARING",
                "SUSPENDED",
                "ON_THE_WAY",
                "COMPLETED"
              ]
            }
          },
          "directions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TO_BUYER",
                "TO_SELLER"
              ]
            }
          },
          "purposes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDER",
                "EXCHANGE_COLLECTION",
                "EXCHANGE_DELIVERY",
                "EXCHANGE_REJECTED",
                "RETURN_COLLECTION",
                "RETURN_REJECTED"
              ]
            }
          },
          "searchCondition": {
            "type": "string",
            "enum": [
              "ORDER_CODE",
              "CUSTOMER_NAME",
              "ITEM_NAME",
              "CUSTOMER_PHONE_NUMBER",
              "RECIPIENT_NAME",
              "RECIPIENT_PHONE_NUMBER",
              "EMAIL",
              "TRACKING_NUMBER"
            ]
          }
        }
      },
      "DeliverySummaryAggregation": {
        "required": [
          "completed",
          "on_the_way",
          "preparing",
          "suspended",
          "target"
        ],
        "type": "object",
        "properties": {
          "target": {
            "type": "integer",
            "format": "int64"
          },
          "preparing": {
            "type": "integer",
            "format": "int64"
          },
          "on_the_way": {
            "type": "integer",
            "format": "int64"
          },
          "completed": {
            "type": "integer",
            "format": "int64"
          },
          "suspended": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageDeliveryBunchSingle": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryBunchSingle"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "SalesStatusDTO": {
        "required": [
          "untilNow",
          "untilPast"
        ],
        "type": "object",
        "properties": {
          "untilPast": {
            "type": "integer",
            "format": "int64"
          },
          "untilNow": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderStatusSummaryDTO": {
        "required": [
          "cs",
          "deliveryTarget",
          "newOrder",
          "paidOrder",
          "waitingForDeposit"
        ],
        "type": "object",
        "properties": {
          "newOrder": {
            "type": "integer",
            "format": "int64"
          },
          "paidOrder": {
            "type": "integer",
            "format": "int64"
          },
          "deliveryTarget": {
            "type": "integer",
            "format": "int64"
          },
          "waitingForDeposit": {
            "type": "integer",
            "format": "int64"
          },
          "cs": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PageCustomerListDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerListDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "CustomerListSearchDTO": {
        "required": [
          "code",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "marketingSms": {
            "type": "boolean"
          },
          "marketingEmail": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomerCountrySummaryDTO": {
        "required": [
          "count",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RequestListWithFilterReturnSubStatusType": {
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "searchCondition": {
            "type": "string",
            "enum": [
              "ORDER_CODE",
              "CUSTOMER_NAME",
              "ITEM_NAME",
              "CUSTOMER_PHONE_NUMBER",
              "RECIPIENT_NAME",
              "RECIPIENT_PHONE_NUMBER",
              "EMAIL",
              "TRACKING_NUMBER"
            ]
          },
          "statuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "RETURN_REQUEST",
                "RETURN_REQUEST_CANCELLED",
                "RETURN_REQUEST_REJECTED",
                "RETURN_COLLECTION_PREPARING",
                "RETURN_COLLECTION_ON_THE_WAY",
                "RETURN_COLLECTION_COMPLETED",
                "RETURN_REJECTED",
                "RETURN_REJECT_DELIVERY_PREPARING",
                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                "RETURN_REJECT_DELIVERY_COMPLETED",
                "RETURN_PENDING",
                "RETURN_REFUNDING",
                "RETURN_REFUNDED",
                "RETURN_REFUNDED_PARTIALLY"
              ]
            }
          }
        }
      },
      "BuyerDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CSList": {
        "required": [
          "data",
          "statusCount",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "statusCount": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "data": {
            "$ref": "#/components/schemas/PageOrderCSDTO"
          }
        }
      },
      "OrderCSDTO": {
        "required": [
          "buyer",
          "code",
          "createdAt",
          "customerName",
          "customerUuid",
          "deliveryCharge",
          "id",
          "items",
          "leftAmount",
          "paidAmount",
          "paymentGateway",
          "returnedAmount",
          "type",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string"
          },
          "customerPhone": {
            "type": "string"
          },
          "buyer": {
            "$ref": "#/components/schemas/BuyerDTO"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientDTO"
          },
          "deliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "paidAmount": {
            "type": "number"
          },
          "returnedAmount": {
            "type": "number"
          },
          "leftAmount": {
            "type": "number"
          },
          "idKey": {
            "type": "string"
          },
          "paymentReceiptUrl": {
            "type": "string"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemCSDTO"
            }
          }
        }
      },
      "OrderCSHistoryDTO": {
        "required": [
          "actor",
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "actor": {
            "type": "string",
            "enum": [
              "SYSTEM",
              "SELLER",
              "BUYER"
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SubStatusTypeInterface"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderItemCSDTO": {
        "required": [
          "code",
          "paidAmount",
          "pricePrice",
          "priceType",
          "productCountryCode",
          "productCurrencyCode",
          "productName",
          "productType",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "paidAmount": {
            "type": "number"
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "pricePrice": {
            "type": "number"
          },
          "pricePlanName": {
            "type": "string"
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderCSHistoryDTO"
            }
          },
          "selectedOptionsLabel": {
            "type": "string"
          },
          "productCountryCode": {
            "type": "string"
          },
          "productCurrencyCode": {
            "type": "string"
          }
        }
      },
      "PageOrderCSDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderCSDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "RequestListWithFilterExchangeSubStatusType": {
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "searchCondition": {
            "type": "string",
            "enum": [
              "ORDER_CODE",
              "CUSTOMER_NAME",
              "ITEM_NAME",
              "CUSTOMER_PHONE_NUMBER",
              "RECIPIENT_NAME",
              "RECIPIENT_PHONE_NUMBER",
              "EMAIL",
              "TRACKING_NUMBER"
            ]
          },
          "statuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ORDER_DELIVERY_COMPLETED",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "RETURN_REQUEST",
                "EXCHANGE_REQUEST",
                "EXCHANGE_REQUEST_CANCELLED",
                "EXCHANGE_REQUEST_REJECTED",
                "EXCHANGE_COLLECTION_PREPARING",
                "EXCHANGE_COLLECTION_ON_THE_WAY",
                "EXCHANGE_COLLECTION_COMPLETED",
                "EXCHANGE_DELIVERY_PREPARING",
                "EXCHANGE_DELIVERY_ON_THE_WAY",
                "EXCHANGE_DELIVERY_COMPLETED",
                "EXCHANGE_REJECTED",
                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "EXCHANGE_PENDING"
              ]
            }
          }
        }
      },
      "RequestListWithFilterCancellationSubStatusType": {
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "searchCondition": {
            "type": "string",
            "enum": [
              "ORDER_CODE",
              "CUSTOMER_NAME",
              "ITEM_NAME",
              "CUSTOMER_PHONE_NUMBER",
              "RECIPIENT_NAME",
              "RECIPIENT_PHONE_NUMBER",
              "EMAIL",
              "TRACKING_NUMBER"
            ]
          },
          "statuses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PAID",
                "CANCELLED",
                "ORDER_DELIVERY_PREPARING",
                "CANCELLATION_REQUEST",
                "CANCELLATION_REQUEST_CANCELLED",
                "CANCELLATION_REQUEST_DENIED",
                "CANCELLATION_REFUNDING",
                "CANCELLATION_REFUNDED",
                "CANCELLATION_REFUNDED_PARTIALLY"
              ]
            }
          }
        }
      },
      "SubscriptionCheckResultDTO": {
        "required": [
          "isAddable",
          "isInCurrentPeriod",
          "isInTrial"
        ],
        "type": "object",
        "properties": {
          "isAddable": {
            "type": "boolean"
          },
          "isInTrial": {
            "type": "boolean"
          },
          "isInCurrentPeriod": {
            "type": "boolean"
          }
        }
      },
      "IntervalDTO": {
        "title": "주기 정보",
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "count": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          }
        }
      },
      "PriceAdditionalBilling": {
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRange"
            }
          }
        }
      },
      "PriceAdditionalBillingRange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "until": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "PriceBundle": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          }
        }
      },
      "PriceInternalDTO": {
        "required": [
          "basicServing",
          "billingDate",
          "bundlePrices",
          "code",
          "id",
          "maximumPurchaseQuantity",
          "membershipExpirationDate",
          "onetimeBundlePrice",
          "options",
          "price",
          "recurring",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "setupOption": {
            "$ref": "#/components/schemas/SetupOption"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBilling"
          },
          "recurring": {
            "$ref": "#/components/schemas/IntervalDTO"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "firstSaleEnabled": {
            "type": "boolean"
          },
          "firstSalePrice": {
            "type": "integer",
            "format": "int64"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "basicServing": {
            "type": "integer",
            "format": "int32"
          },
          "bundlePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceBundle"
            }
          },
          "onetimeBundlePrice": {
            "type": "number"
          }
        }
      },
      "PriceOption": {
        "required": [
          "id",
          "interval",
          "intervalCount",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "priceCode": {
            "type": "string"
          },
          "priceName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetupOption": {
        "required": [
          "claimMethodType",
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        }
      },
      "ProductCategory": {
        "required": [
          "categoryId",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductInternalDTO": {
        "required": [
          "code",
          "createdAt",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "demoPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          },
          "optionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroup"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceInternalDTO"
            }
          }
        }
      },
      "ProductOption": {
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ProductOptionGroup": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOption"
            }
          }
        }
      },
      "InvoiceInternalDTO": {
        "title": "청구서 상세 정보",
        "required": [
          "discount",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "청구서 상태",
            "enum": [
              "임시저장",
              "발송 예약",
              "발송",
              "결제 완료",
              "미납입",
              "발송 실패"
            ]
          },
          "publishType": {
            "type": "string",
            "description": "청구서 발행 상태",
            "enum": [
              "NOW",
              "RESERVATION"
            ]
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "구매 기한",
            "format": "date-time"
          },
          "publishMethod": {
            "uniqueItems": true,
            "type": "array",
            "description": "발송 수단 목록",
            "items": {
              "type": "string",
              "description": "발송 수단 목록",
              "enum": [
                "KAKAO",
                "SMS",
                "EMAIL"
              ]
            }
          },
          "discount": {
            "type": "integer",
            "description": "할인 금액",
            "format": "int64"
          },
          "memoToCustomer": {
            "type": "string",
            "description": "청구서 메모"
          },
          "reservationAt": {
            "type": "string",
            "description": "예약 일시",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "삭제 일시",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "orderCode": {
            "type": "string",
            "description": "주문 코드"
          },
          "customerId": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          }
        }
      },
      "ProductCustomerSubscriptionsSummaryDTO": {
        "required": [
          "activated",
          "canceled",
          "expired",
          "paused",
          "unpaid"
        ],
        "type": "object",
        "properties": {
          "activated": {
            "type": "integer",
            "format": "int32"
          },
          "unpaid": {
            "type": "integer",
            "format": "int32"
          },
          "paused": {
            "type": "integer",
            "format": "int32"
          },
          "canceled": {
            "type": "integer",
            "format": "int32"
          },
          "expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageSubscriptionListV1DTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionListV1DTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ShippingListItemDTO": {
        "required": [
          "id",
          "isDefaultAddress",
          "isSelected",
          "label",
          "shipping"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "label": {
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "isDefaultAddress": {
            "type": "boolean"
          },
          "isSelected": {
            "type": "boolean"
          }
        }
      },
      "OrderItemCustomerDTO": {
        "required": [
          "currency",
          "modifiedAt",
          "orderItemCode",
          "paidAmount",
          "quantity",
          "selectedProductOptionIds",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "paidAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/PriceDTO"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDTO"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "selectedProductOptionLabel": {
            "type": "string"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "orderItemCode": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryCode": {
            "type": "string"
          },
          "histories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CSItemDTO"
            }
          }
        }
      },
      "OrderListCustomerDTO": {
        "required": [
          "createdAt",
          "items",
          "orderCode",
          "orderId",
          "type"
        ],
        "type": "object",
        "properties": {
          "idKey": {
            "type": "string"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "갱신 결제",
              "단건 주문",
              "결제수단 변경",
              "갱신 결제(최초 주문)",
              "사용량 추가"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemCustomerDTO"
            }
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "receiptUrl": {
            "type": "string"
          }
        }
      },
      "PageOrderListCustomerDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderListCustomerDTO"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "OrderSummaryAggregationCustomerDTO": {
        "required": [
          "canceled",
          "delivered",
          "delivering",
          "includeBox",
          "paid",
          "preparing"
        ],
        "type": "object",
        "properties": {
          "paid": {
            "type": "integer",
            "format": "int64"
          },
          "preparing": {
            "type": "integer",
            "format": "int64"
          },
          "delivering": {
            "type": "integer",
            "format": "int64"
          },
          "delivered": {
            "type": "integer",
            "format": "int64"
          },
          "canceled": {
            "type": "integer",
            "format": "int64"
          },
          "includeBox": {
            "type": "boolean"
          }
        }
      },
      "WebAuthnDTO": {
        "required": [
          "beforeData",
          "credentialGetJson"
        ],
        "type": "object",
        "properties": {
          "beforeData": {
            "type": "string"
          },
          "credentialGetJson": {
            "type": "string"
          }
        }
      },
      "PageDeliveryBunchCustomerSingle": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryBunchCustomerSingle"
            }
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ProductSubscriptionCustomerListDTO": {
        "required": [
          "customerCnt",
          "productCode",
          "productId",
          "productName"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "customerCnt": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SubscriptionNotifyPaymentMessageDTO": {
        "required": [
          "additionalBillings",
          "days",
          "discountTotal",
          "items",
          "paymentAmount",
          "subscriptionId",
          "totalAmount",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "days": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionCalculatedItemDTO"
            }
          },
          "additionalBillings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          },
          "totalAmount": {
            "type": "number"
          },
          "discountTotal": {
            "type": "number"
          },
          "paymentAmount": {
            "type": "number"
          },
          "subscriptionMemo": {
            "type": "string"
          }
        }
      },
      "CartItemUniqueDTO": {
        "required": [
          "priceCode",
          "productCode",
          "selectedOptions"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CartListRemoveRequestDTO": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemUniqueDTO"
            }
          }
        }
      }
    }
  },
  "x-internal": true
}