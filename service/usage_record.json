{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "https://api.steppay.kr",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "사용량 기록",
      "description": "계정/사용량 기반 과금의 사용량을 기록하기 위한 API 입니다."
    }
  ],
  "paths": {
    "/api/v1/usages": {
      "get": {
        "tags": [
          "사용량 기록"
        ],
        "summary": "사용량/계정 조회 API",
        "description": "사용량 또는 계정을 조회할 때 사용합니다.",
        "operationId": "getRecordQuotas",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "사용량/계정 기록이 정상적으로 조회됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecordForV1"
                }
              }
            }
          },
          "400": {
            "description": "사용량/계정 기록을 조회할 수 없는 상황",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "사용량 기록"
        ],
        "summary": "사용량/계정 등록 API",
        "description": "사용량 또는 계정을 등록할 때 사용합니다.",
        "operationId": "createRecordQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Req"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "사용량/계정 기록이 정상적으로 등록됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Res"
                }
              }
            }
          },
          "400": {
            "description": "사용량/계정 기록을 등록할 수 없는 상황",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usage_records": {
      "post": {
        "tags": [
          "사용량 기록"
        ],
        "summary": "사용량/계정 등록 API",
        "description": "사용량 또는 계정을 등록할 때 사용합니다.",
        "operationId": "createUnitRecords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsageRecordCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "사용량/계정 기록이 정상적으로 등록됨",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UsageRecordDTO"
                }
              }
            }
          },
          "400": {
            "description": "사용량/계정 기록을 등록할 수 없는 상황",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/manager/usages": {
      "get": {
        "tags": [
          "usage-manager-api"
        ],
        "operationId": "getRecords",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordForManager"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "usage-manager-api"
        ],
        "operationId": "createRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Req"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/usages/xlsx": {
      "post": {
        "tags": [
          "usage-manager-api"
        ],
        "operationId": "createRecordsByExcel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRecordsByExcelResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/usages/bulk": {
      "post": {
        "tags": [
          "usage-manager-api"
        ],
        "operationId": "createRecords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Req"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/bulk": {
      "post": {
        "tags": [
          "internal-usage-api"
        ],
        "operationId": "getBulkUsedAmountByUsageIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BulkAggregatedUsageRecordRequestDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/InternalUsageDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/usages": {
      "get": {
        "tags": [
          "usage-customer-api"
        ],
        "operationId": "getRecordQuotas_1",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordForCustomer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "usage-customer-api"
        ],
        "operationId": "createRecordQuota_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Req"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Res"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/manager/usages/normalized-amount": {
      "get": {
        "tags": [
          "usage-manager-api"
        ],
        "operationId": "getNormalizedAmount",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "record",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "quota",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CumulativeSumForManager"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/{usageId}": {
      "get": {
        "tags": [
          "internal-usage-api"
        ],
        "operationId": "getUsedAmountByUsageId",
        "parameters": [
          {
            "name": "usageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InternalUsageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/subscription-item/{subscriptionItemId}/used-amount": {
      "get": {
        "tags": [
          "internal-usage-api"
        ],
        "operationId": "getUsedAmountBySubscriptionItemId",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/customer/usages/normalized-amount": {
      "get": {
        "tags": [
          "usage-customer-api"
        ],
        "operationId": "getNormalizedAmount_1",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "record",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "quota",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CumulativeSumForCustomer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "ReturnError": {
        "type": "object"
      },
      "Res": {
        "title": "기록 조회",
        "required": [
          "accumulateRecord",
          "amountForQuota",
          "influxDate",
          "restDays"
        ],
        "type": "object",
        "properties": {
          "accumulateQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulateRecord": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "amountForQuota": {
            "type": "number"
          },
          "restDays": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Req": {
        "title": "기록 생성",
        "required": [
          "influxDate",
          "quota",
          "record",
          "subscriptionItemId"
        ],
        "type": "object",
        "properties": {
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          },
          "quota": {
            "type": "integer",
            "description": "기존 AccumulatedQuota 값에 대하여 증감합니다.",
            "format": "int64"
          },
          "record": {
            "type": "integer",
            "description": "기존 AccumulatedRecord 값에 대하여 증감합니다.",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "description": "인입일",
            "format": "date-time"
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "UsageRecordDTO": {
        "required": [
          "accumulated",
          "id",
          "quantity",
          "startDate",
          "status",
          "subscriptionItemId",
          "via"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "기록 ID",
            "format": "int64"
          },
          "subscriptionItemId": {
            "type": "integer",
            "description": "구독 항목 ID",
            "format": "int64"
          },
          "payload": {
            "type": "string",
            "description": "사용량과 관련하여 추가적으로 저장한 데이터"
          },
          "status": {
            "type": "string",
            "description": "상태",
            "enum": [
              "IN",
              "ACTIVE",
              "OUT",
              "REMOVED"
            ]
          },
          "startDate": {
            "type": "string",
            "description": "기록된 시각",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "이탈한 시각 - 계정 기반 데이터에 사용됩니다.",
            "format": "date-time"
          },
          "quantity": {
            "type": "integer",
            "description": "기록 수량",
            "format": "int64"
          },
          "via": {
            "type": "string",
            "description": "어떤 경로로 기록되었는지",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "accumulated": {
            "type": "integer",
            "description": "누적 사용량",
            "format": "int64"
          }
        }
      },
      "UsageRecordCreateDTO": {
        "title": "기록 생성",
        "required": [
          "quantity",
          "startDate",
          "subscriptionItemId"
        ],
        "type": "object",
        "properties": {
          "subscriptionItemId": {
            "type": "integer",
            "description": "구독 항목 ID",
            "format": "int64"
          },
          "quantity": {
            "minimum": 1,
            "type": "integer",
            "description": "기록 수량",
            "format": "int64"
          },
          "payload": {
            "type": "string",
            "description": "(사용량/계정)과 관련하여 추가적으로 저장이 필요한 데이터가 있을 때 저장하기 위한 공간"
          },
          "startDate": {
            "type": "string",
            "description": "기록한 날짜 - 기본값은 현재 시점입니다.",
            "format": "date-time"
          }
        }
      },
      "CreateRecordsByExcelFailedResultDTO": {
        "required": [
          "message",
          "rows"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecordsByExcelFailedRowDTO"
            }
          }
        }
      },
      "CreateRecordsByExcelFailedRowDTO": {
        "required": [
          "adminName",
          "customerName",
          "invalidColumns",
          "planCode",
          "planName",
          "priceType",
          "productName",
          "record",
          "startDate",
          "subPlanCode",
          "subPlanName",
          "subProductName",
          "subscriptionId"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "planCode": {
            "type": "string"
          },
          "record": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "priceType": {
            "type": "string"
          },
          "subPlanCode": {
            "type": "string"
          },
          "subPlanName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "adminName": {
            "type": "string"
          },
          "subProductName": {
            "type": "string"
          },
          "invalidColumns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateRecordsByExcelResultDTO": {
        "required": [
          "failedResult",
          "succeededResult"
        ],
        "type": "object",
        "properties": {
          "succeededResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Req"
            }
          },
          "failedResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecordsByExcelFailedResultDTO"
            }
          }
        }
      },
      "BulkAggregatedUsageRecordRequestDTO": {
        "required": [
          "endDate",
          "startDate",
          "subscriptionItemId"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InternalUsageDTO": {
        "required": [
          "accumulatedRecord",
          "items",
          "subscriptionId",
          "subscriptionItemId",
          "usageId"
        ],
        "type": "object",
        "properties": {
          "usageId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalUsageRecordQuotaDTO"
            }
          },
          "accumulatedQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulatedRecord": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InternalUsageRecordQuotaDTO": {
        "required": [
          "accumulateRecord",
          "deltaQuota",
          "deltaRecord",
          "id",
          "influxDate",
          "via"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "deltaQuota": {
            "type": "integer",
            "format": "int64"
          },
          "deltaRecord": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "accumulateQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulateRecord": {
            "type": "integer",
            "format": "int64"
          },
          "via": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          }
        }
      },
      "RecordForV1": {
        "required": [
          "influxDate",
          "record",
          "via"
        ],
        "type": "object",
        "properties": {
          "quota": {
            "type": "integer",
            "format": "int64"
          },
          "record": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "via": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "RecordForManager": {
        "required": [
          "accumulateRecord",
          "deltaRecord",
          "influxDate",
          "via"
        ],
        "type": "object",
        "properties": {
          "accumulateQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulateRecord": {
            "type": "integer",
            "format": "int64"
          },
          "deltaQuota": {
            "type": "integer",
            "format": "int64"
          },
          "deltaRecord": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "via": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "CumulativeSumForManager": {
        "required": [
          "afterNormalizedAmount",
          "beforeNormalizedAmount"
        ],
        "type": "object",
        "properties": {
          "beforeNormalizedAmount": {
            "type": "number"
          },
          "afterNormalizedAmount": {
            "type": "number"
          }
        }
      },
      "RecordForCustomer": {
        "required": [
          "accumulateRecord",
          "deltaRecord",
          "influxDate",
          "via"
        ],
        "type": "object",
        "properties": {
          "accumulateQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulateRecord": {
            "type": "integer",
            "format": "int64"
          },
          "deltaQuota": {
            "type": "integer",
            "format": "int64"
          },
          "deltaRecord": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "via": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "CumulativeSumForCustomer": {
        "required": [
          "afterNormalizedAmount",
          "beforeNormalizedAmount"
        ],
        "type": "object",
        "properties": {
          "beforeNormalizedAmount": {
            "type": "number"
          },
          "afterNormalizedAmount": {
            "type": "number"
          }
        }
      }
    }
  },
  "x-internal": true
}