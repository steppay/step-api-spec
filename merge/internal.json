{
  "openapi": "3.0.1",
  "info": {
    "title": "internal",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.steppay.kr",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/internal/vendors/{vendorUuid}": {
      "put": {
        "tags": [
          "vendors"
        ],
        "operationId": "internal_updateVendor_1",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountApiresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/delivery": {
      "get": {
        "tags": [
          "delivery"
        ],
        "operationId": "internal_getDeliverySetting",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "managerUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "delivery"
        ],
        "operationId": "internal_updateDeliverySetting",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "managerUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryChargeUpdateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/dormant": {
      "put": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_batchProcessOnDormantCustomers",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/realms/{realmUuid}/clients/{clientId}/redirect-uris": {
      "put": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_addRedirectUris",
        "parameters": [
          {
            "name": "realmUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/vendors": {
      "post": {
        "tags": [
          "vendors"
        ],
        "operationId": "internal_createVendor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/vendor/{vendorUuid}/appstore": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "internal_createAppstoreCustomer",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/vendors": {
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "internal_createVendor_1",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/realms": {
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "internal_createRealm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRealmRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/realms/{realm}/idps": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "internal_getIdentityProviders",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityProviderDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "internal_addIdentityProvider",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/clients/{realmUuid}": {
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "internal_save",
        "parameters": [
          {
            "name": "realmUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/auth/certs/{realmUuid}": {
      "post": {
        "tags": [
          "test"
        ],
        "operationId": "internal_saveCerts",
        "parameters": [
          {
            "name": "realmUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CertsEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/migrate/vendor": {
      "post": {
        "tags": [
          "migrate"
        ],
        "operationId": "internal_createVendor_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalVendorCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/resetPassword/{realmUuid}": {
      "post": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_setPasswordToInitial",
        "parameters": [
          {
            "name": "realmUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/realms/{realm}/vendors/{vendor}": {
      "post": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_createInternalCustomer",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomerdto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/command": {
      "post": {
        "tags": [
          "command"
        ],
        "operationId": "internal_handler",
        "parameters": [
          {
            "name": "CommandBus-Routing-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CommandBus-Type-Id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/appstore/webhook": {
      "post": {
        "tags": [
          "appstore"
        ],
        "operationId": "internal_handleSubscriptionWebhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppstoreSubscriptionWebhookDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/webhook/{vendorUuid}": {
      "get": {
        "tags": [
          "webhook"
        ],
        "operationId": "internal_getWebhookKeyValues",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/vendor/{vendorUuid}": {
      "get": {
        "tags": [
          "vendor"
        ],
        "operationId": "internal_getVendorInfo_1",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VendorInfoDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/vendor/{vendorUuid}/cover": {
      "get": {
        "tags": [
          "vendor"
        ],
        "operationId": "internal_getVendorForCover",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VendorForCoverDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/tls-check": {
      "get": {
        "tags": [
          "tls-check"
        ],
        "operationId": "internal_tlsCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/realms/{realm}": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "internal_getRealmInfo",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RealmRepresentation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/auth/hello": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "internal_hello",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/auth/codes/{code}": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "internal_findCode",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{uuid}": {
      "get": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_getCustomer",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomerdto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_deleteCustomer_2",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/realms/{realm}/username/{username}": {
      "get": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_getCustomer_1",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCustomerdto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/vendors/{vendorUuid}/permissions/{permission}": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_verifyPermission",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/vendor/{vendorUuid}": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getVendorInfo_2",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VendorInfoDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/settings": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getSetting_2",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/secretToken/{secretToken}": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getVendorDetailFromSecretToken",
        "parameters": [
          {
            "name": "secretToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/realms": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getRealms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RealmDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/realms/{realmUuid}": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getRealms_1",
        "parameters": [
          {
            "name": "realmUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RealmDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/auth/payment-key/{paymentKey}": {
      "get": {
        "tags": [
          "auth"
        ],
        "operationId": "internal_getVendorDetailFromPaymentKey",
        "parameters": [
          {
            "name": "paymentKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/realms/{realm}/idps/{providerId}": {
      "delete": {
        "tags": [
          "test"
        ],
        "operationId": "internal_removeIdentityProvider",
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/refreshupdemodata": {
      "put": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_refreshUpDemoData",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/refreshdowndemodata": {
      "put": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_refreshDownDemoData",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/transfer": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_transfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HPayRealTimePayDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/receiptUrls": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_getReceiptUrlsByIdKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiptUrlsRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ReceiptUrlsResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/nice-batch-send-pay": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_sendPay",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/nice-batch-send-mem": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_agreeOkAndErr",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/nice-batch-send-agree": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_sendAgree",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/nice-batch-recv-pay": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_handlePAY",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/nice-batch-recv-mem": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_handleMEM",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/issue-bill-key": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_issueBillKey",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PayLinkDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/generate-link": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_generatePayRequestLink",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PayLinkDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/generate-link/appstore": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_generateAppstorePayRequestLink",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PayLinkDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/cancel": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_cancelPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/billing": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_billing",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBillingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/billing/sync": {
      "post": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_billingSync",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBillingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/{vendorUuid}": {
      "get": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_getPaymentGatewayList_1",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentEnabledpaymentgatewaydto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/receipt/{idKey}": {
      "get": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_getReceiptData",
        "parameters": [
          {
            "name": "idKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/payment/payment/{paymentId}": {
      "get": {
        "tags": [
          "payment"
        ],
        "operationId": "internal_getPayment",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InternalPaymentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/payment": {
      "put": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_updateOrderByPayment_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_updateOrderByPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/refreshupdemodata": {
      "put": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_refreshUpDemoData_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/refreshdowndemodata": {
      "put": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_refreshDownDemoData_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/{vendorUuid}/check-all": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_checkRecordsAddable",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/SubscriptionCheckBulkResultDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/internal/subscriptions/recurring": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_recurringJob",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/notify_payment": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_notifyPayment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/items/{subscriptionItemId}/pay": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_payPreClaimQuota",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-StepPay-Actor",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MANAGER",
                "V1",
                "RENEW",
                "CUSTOMER",
                "SYSTEM"
              ]
            }
          },
          {
            "name": "X-StepPay-Dry-Run",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreClaimQuotaPaymentRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/check_excel_records/{vendorUuid}": {
      "post": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_checkExcelRecords",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UsageRecordCheckRequestDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageRecordCheckResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/migrate": {
      "post": {
        "tags": [
          "products"
        ],
        "operationId": "internal_optionMigrate",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/badge": {
      "post": {
        "tags": [
          "products"
        ],
        "operationId": "internal_deleteEndedBadge",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_createOrderByAppstore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAppstoreordercreaterequestdto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/send-invoices": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_sendInvoices",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/rollback-transactions": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_rollbackTransactions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/pos": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_createOfflineOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineOrderCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OfflineOrderResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/mapper": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_priceModuleMapper_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceModuleMappingRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceModuleInputDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/expire-invoices": {
      "post": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_expireInvoices",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/cms/webhook": {
      "post": {
        "tags": [
          "cms"
        ],
        "operationId": "internal_webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsWebhookPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_getSubscriptionsBySubscriptionIds",
        "parameters": [
          {
            "name": "subscriptionItemIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/subscriptions/{vendorUuid}/{subscriptionItemId}/check": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_checkRecordAddable",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "checkingDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCheckResultDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/internal/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "operationId": "internal_getSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{productId}/prices/{priceId}": {
      "get": {
        "tags": [
          "products"
        ],
        "operationId": "internal_getPrice",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "priceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PriceInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{code}": {
      "get": {
        "tags": [
          "products"
        ],
        "operationId": "internal_getProduct",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/products/{code}/is_auto_install": {
      "get": {
        "tags": [
          "products"
        ],
        "operationId": "internal_isAutoInstall",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/orders/{orderCode}": {
      "get": {
        "tags": [
          "orders"
        ],
        "operationId": "internal_getOrder",
        "parameters": [
          {
            "name": "orderCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderInternalResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/invoices/{id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "operationId": "internal_getInvoiceDetail_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "vendorUuid",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceInternalDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_getCustomer_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCustomerdto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}/subscriptions/summary": {
      "get": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_getCustomerSubscriptionsSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCustomerSubscriptionsSummaryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/customers/{id}/payment-methods": {
      "get": {
        "tags": [
          "customers"
        ],
        "operationId": "internal_checkPaymentMethodAndReturnIdKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pinCode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/stores": {
      "get": {
        "tags": [
          "stores"
        ],
        "operationId": "internal_findAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "stores"
        ],
        "operationId": "internal_createStore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreateRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/test/now": {
      "get": {
        "tags": [
          "test"
        ],
        "operationId": "internal_getCurrentTime",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/stores/vendor/{vendorUuid}/metadata": {
      "get": {
        "tags": [
          "stores"
        ],
        "operationId": "internal_findByVendorUuid",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/stores/vendor/{vendorUuid}/business_info": {
      "get": {
        "tags": [
          "stores"
        ],
        "operationId": "internal_findBusinessInfoByVendorUuid",
        "parameters": [
          {
            "name": "vendorUuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessInfoDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/stores/realm/{realmId}/metadata": {
      "get": {
        "tags": [
          "stores"
        ],
        "operationId": "internal_findByRealmUuid",
        "parameters": [
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StoreErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/bulk": {
      "post": {
        "tags": [
          "usages"
        ],
        "operationId": "internal_getBulkUsedAmountByUsageIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BulkAggregatedUsageRecordRequestDTO"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/InternalUsageDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/{usageId}": {
      "get": {
        "tags": [
          "usages"
        ],
        "operationId": "internal_getUsedAmountByUsageId",
        "parameters": [
          {
            "name": "usageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InternalUsageDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal/usages/subscription-item/{subscriptionItemId}/used-amount": {
      "get": {
        "tags": [
          "usages"
        ],
        "operationId": "internal_getUsedAmountBySubscriptionItemId",
        "parameters": [
          {
            "name": "subscriptionItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Usage_recordErrorresponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReturnError": {
        "type": "object"
      },
      "ShippingAddressDTO": {
        "title": "배송지 정보 수정 데이터",
        "required": [
          "address1",
          "address2",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string",
            "description": "우편번호"
          },
          "address1": {
            "type": "string",
            "description": "주소"
          },
          "address2": {
            "type": "string",
            "description": "세부 주소"
          },
          "state": {
            "type": "string",
            "description": "주 정보"
          },
          "city": {
            "type": "string",
            "description": "도시 정보"
          },
          "countryCode": {
            "type": "string",
            "description": "국가 코드"
          }
        },
        "description": "배송지 정보 수정 데이터"
      },
      "DeliveryChargeResponseDTO": {
        "required": [
          "islandAndMountainShipAmount",
          "jejuShipAmount",
          "useDefaultCourier",
          "useDeliveryCharge",
          "useLocalShipCharge"
        ],
        "type": "object",
        "properties": {
          "useDefaultCourier": {
            "type": "boolean"
          },
          "defaultCourierId": {
            "type": "string"
          },
          "useDeliveryCharge": {
            "type": "boolean"
          },
          "deliveryChargeType": {
            "type": "string",
            "enum": [
              "FREE",
              "CONDITIONAL_FREE",
              "FIXED"
            ]
          },
          "defaultDeliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "freeShipOverAmount": {
            "type": "integer",
            "format": "int64"
          },
          "useLocalShipCharge": {
            "type": "boolean"
          },
          "jejuShipAmount": {
            "type": "integer",
            "format": "int64"
          },
          "islandAndMountainShipAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ManagerDTO": {
        "required": [
          "createdAt",
          "emailVerified",
          "enabled",
          "nickname",
          "username",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "choo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VendorAppDTO": {
        "required": [
          "installed",
          "priceCode",
          "productCode",
          "status"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "installed": {
            "type": "boolean"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VendorDTO": {
        "required": [
          "apps",
          "checkFirstActivation",
          "deliveryCharge",
          "description",
          "firstManagerUuid",
          "manager",
          "name",
          "paymentKey",
          "planType",
          "secretKey",
          "surveyed",
          "useAuth",
          "useDormantCustomer",
          "useDormantNotification",
          "usePayout",
          "useStore",
          "uuid",
          "vendorSettings",
          "zoneId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "parentUuid": {
            "type": "string",
            "format": "uuid"
          },
          "firstManagerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "manager": {
            "$ref": "#/components/schemas/ManagerDTO"
          },
          "realmKeycloakId": {
            "type": "string",
            "format": "uuid"
          },
          "realmName": {
            "type": "string"
          },
          "realmEmailAsUsername": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          },
          "paymentKey": {
            "type": "string"
          },
          "wordpress": {
            "$ref": "#/components/schemas/WordpressDTO"
          },
          "deliveryCharge": {
            "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
          },
          "vendorSettings": {
            "$ref": "#/components/schemas/VendorSettingsDTO"
          },
          "planType": {
            "type": "string",
            "enum": [
              "ZERO",
              "SOLO",
              "MINI",
              "PRO",
              "MAX"
            ]
          },
          "contactUrl": {
            "type": "string"
          },
          "checkFirstActivation": {
            "type": "boolean"
          },
          "checkFailStepbuilder": {
            "type": "string"
          },
          "surveyed": {
            "type": "boolean"
          },
          "useDormantCustomer": {
            "type": "boolean"
          },
          "useDormantNotification": {
            "type": "boolean"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorAppDTO"
            }
          },
          "useAuth": {
            "type": "boolean"
          },
          "useStore": {
            "type": "boolean"
          },
          "usePayout": {
            "type": "boolean"
          },
          "vendorTerms": {
            "$ref": "#/components/schemas/VendorTermsDTO"
          },
          "zoneId": {
            "type": "string"
          }
        }
      },
      "VendorSettingsDTO": {
        "required": [
          "notiBeforePayment",
          "notiBeforePaymentDays",
          "vatIncluded",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "vatIncluded": {
            "type": "boolean"
          },
          "vatRate": {
            "type": "number"
          },
          "paymentAmountScale": {
            "type": "integer",
            "format": "int32"
          },
          "notiBeforePayment": {
            "type": "boolean"
          },
          "notiBeforePaymentDays": {
            "type": "integer",
            "format": "int32"
          },
          "notiBeforePaymentTime": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "VendorTermsAgreeDTO": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "field": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "VendorTermsDTO": {
        "required": [
          "termsAgree",
          "useCheckBox"
        ],
        "type": "object",
        "properties": {
          "useCheckBox": {
            "type": "boolean"
          },
          "termsAgree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTermsAgreeDTO"
            }
          }
        }
      },
      "WordpressDTO": {
        "required": [
          "consumerKey",
          "consumerSecret"
        ],
        "type": "object",
        "properties": {
          "consumerKey": {
            "type": "string"
          },
          "consumerSecret": {
            "type": "string"
          }
        }
      },
      "VendorTermsAgreeCreateDTO": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "field": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "VendorTermsCreateDTO": {
        "required": [
          "termsAgree",
          "useCheckBox"
        ],
        "type": "object",
        "properties": {
          "useCheckBox": {
            "type": "boolean"
          },
          "termsAgree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTermsAgreeCreateDTO"
            }
          }
        }
      },
      "DeliveryChargeUpdateRequestDTO": {
        "type": "object",
        "properties": {
          "useDefaultCourier": {
            "type": "boolean"
          },
          "defaultCourierId": {
            "type": "string"
          },
          "useDeliveryCharge": {
            "type": "boolean"
          },
          "deliveryChargeType": {
            "type": "string",
            "enum": [
              "FREE",
              "CONDITIONAL_FREE",
              "FIXED"
            ]
          },
          "defaultDeliveryCharge": {
            "type": "integer",
            "format": "int64"
          },
          "freeShipOverAmount": {
            "type": "integer",
            "format": "int64"
          },
          "useLocalShipCharge": {
            "type": "boolean"
          },
          "jejuShipAmount": {
            "type": "integer",
            "format": "int64"
          },
          "islandAndMountainShipAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CustomerVendorDTO": {
        "required": [
          "vendorName",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "vendorName": {
            "type": "string"
          }
        }
      },
      "AddableProdDTO": {
        "required": [
          "active",
          "categoryIds",
          "productCodes",
          "productType"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "productType": {
            "type": "string"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "productCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChangeableCycleDTO": {
        "required": [
          "active",
          "cycles"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "cycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCycledto"
            }
          }
        }
      },
      "ChangeableNextPayDateDTO": {
        "required": [
          "active",
          "maximumPeriod"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "maximumPeriod": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChangeableStatusDTO": {
        "required": [
          "cancel",
          "pause",
          "survey"
        ],
        "type": "object",
        "properties": {
          "pause": {
            "$ref": "#/components/schemas/PauseDTO"
          },
          "cancel": {
            "type": "boolean"
          },
          "survey": {
            "$ref": "#/components/schemas/SurveyDTO"
          }
        }
      },
      "CustomProdDTO": {
        "required": [
          "addableProd",
          "editable"
        ],
        "type": "object",
        "properties": {
          "editable": {
            "type": "boolean"
          },
          "addableProd": {
            "$ref": "#/components/schemas/AddableProdDTO"
          }
        }
      },
      "PauseDTO": {
        "required": [
          "active",
          "cycles",
          "type"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "IMMEDIATE",
              "LAZY"
            ]
          },
          "cycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCycledto"
            }
          }
        }
      },
      "SubscriptionManagerSettingDTO": {
        "required": [
          "changeableCycle",
          "changeableNextPayDate",
          "changeablePaymentMethod",
          "changeableShippingAddress",
          "changeableStatus",
          "customProd"
        ],
        "type": "object",
        "properties": {
          "changeableStatus": {
            "$ref": "#/components/schemas/ChangeableStatusDTO"
          },
          "changeableNextPayDate": {
            "$ref": "#/components/schemas/ChangeableNextPayDateDTO"
          },
          "changeablePaymentMethod": {
            "type": "boolean"
          },
          "changeableShippingAddress": {
            "type": "boolean"
          },
          "changeableCycle": {
            "$ref": "#/components/schemas/ChangeableCycleDTO"
          },
          "customProd": {
            "$ref": "#/components/schemas/CustomProdDTO"
          }
        }
      },
      "SurveyDTO": {
        "required": [
          "active",
          "cancelSurveyUrl",
          "pauseSurveyUrl"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "pauseSurveyUrl": {
            "type": "string"
          },
          "cancelSurveyUrl": {
            "type": "string"
          }
        }
      },
      "CustomerCreateRequestDTO": {
        "required": [
          "attributes",
          "marketingEmail",
          "marketingKakao",
          "marketingSms",
          "username"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "realname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "marketingSms": {
            "type": "boolean"
          },
          "marketingEmail": {
            "type": "boolean"
          },
          "marketingKakao": {
            "type": "boolean"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingAddressDTO"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DemoCycleDTO": {
        "required": [
          "num",
          "type"
        ],
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          }
        },
        "description": "무료체험이 적용됐는지 적용 여부 및 기간"
      },
      "OrderInternalResponseDTO": {
        "required": [
          "amount",
          "code",
          "createAt",
          "customerUuid",
          "discountedAmount",
          "id",
          "leftAmount",
          "paidAmount",
          "product",
          "returnedAmount",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "priceCode": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "amount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "PAYMENT_METHOD",
              "RECURRING_INITIAL",
              "ADD_USAGE"
            ]
          },
          "product": {
            "type": "string"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "payment": {
            "$ref": "#/components/schemas/OrderPaymentInternalDTO"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderiteminternaldto"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
            }
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "paidAmount": {
            "type": "number"
          },
          "leftAmount": {
            "type": "number"
          },
          "returnedAmount": {
            "type": "number"
          },
          "discountedAmount": {
            "type": "number"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingDTO"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "idKey": {
            "type": "string"
          },
          "paymentDueDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderPaymentInternalDTO": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "cardNumber": {
            "type": "string"
          }
        }
      },
      "ShippingDTO": {
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        }
      },
      "SubscriptionInternalResponseDTO": {
        "required": [
          "claimMethodType",
          "code",
          "currentPeriodEnd",
          "currentPeriodStart",
          "customerId",
          "customerUuid",
          "id",
          "interval",
          "isMultipleItem",
          "items",
          "paymentInfo",
          "price",
          "priceCodes",
          "product",
          "productCodes",
          "recurringCount",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "productCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priceCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "product": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          },
          "currentPeriodStart": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "provideStartDay": {
            "type": "integer",
            "format": "int32"
          },
          "recurringCount": {
            "type": "integer",
            "format": "int32"
          },
          "claimMethodType": {
            "type": "string"
          },
          "isMultipleItem": {
            "type": "boolean"
          },
          "paymentInfo": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubscriptioniteminternalresponsedto"
            }
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionMemo": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "trialStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "originNextPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "pausedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          },
          "intervalUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/SubscriptionPaymentMethod"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "notiBeforePaymentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscriptionPaymentMethod": {
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentInfo": {
            "type": "string"
          }
        }
      },
      "CreateRealmRequestDTO": {
        "required": [
          "fedId",
          "realm",
          "redirectUris"
        ],
        "type": "object",
        "properties": {
          "realm": {
            "type": "string",
            "format": "uuid"
          },
          "fedId": {
            "type": "string",
            "format": "uuid"
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IdentityProviderDTO": {
        "required": [
          "clientId",
          "clientSecret",
          "enabled",
          "providerId"
        ],
        "type": "object",
        "properties": {
          "internalId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          }
        }
      },
      "CertsEntity": {
        "required": [
          "id",
          "keys",
          "realmUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "realmUuid": {
            "type": "string",
            "format": "uuid"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrivateKey"
            }
          }
        }
      },
      "PrivateKey": {
        "required": [
          "alg",
          "coefficient",
          "exponent1",
          "exponent2",
          "kid",
          "kty",
          "modulus",
          "prime1",
          "prime2",
          "privateExponent",
          "publicExponent",
          "use"
        ],
        "type": "object",
        "properties": {
          "kty": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "modulus": {
            "type": "string"
          },
          "publicExponent": {
            "type": "string"
          },
          "privateExponent": {
            "type": "string"
          },
          "prime1": {
            "type": "string"
          },
          "prime2": {
            "type": "string"
          },
          "exponent1": {
            "type": "string"
          },
          "exponent2": {
            "type": "string"
          },
          "coefficient": {
            "type": "string"
          }
        }
      },
      "InternalVendorCreateDTO": {
        "required": [
          "managerUuid",
          "name",
          "paymentKey",
          "planType",
          "secretKey",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "secretKey": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "paymentKey": {
            "type": "string"
          },
          "planType": {
            "type": "string",
            "enum": [
              "ZERO",
              "SOLO",
              "MINI",
              "PRO",
              "MAX"
            ]
          },
          "managerUuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AppstoreSubscriptionWebhookDTO": {
        "required": [
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          }
        }
      },
      "VendorCheckList": {
        "required": [
          "firstActivation"
        ],
        "type": "object",
        "properties": {
          "firstActivation": {
            "type": "boolean"
          }
        }
      },
      "VendorInfoDTO": {
        "required": [
          "apps",
          "checkList",
          "children",
          "deliveryCharge",
          "name",
          "useAuth",
          "usePayout",
          "useStore",
          "uuid",
          "vendorSettings",
          "zoneId"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "parentUuid": {
            "type": "string",
            "format": "uuid"
          },
          "useAuth": {
            "type": "boolean"
          },
          "useStore": {
            "type": "boolean"
          },
          "usePayout": {
            "type": "boolean"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deliveryCharge": {
            "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
          },
          "vendorSettings": {
            "$ref": "#/components/schemas/VendorSettingsDTO"
          },
          "contactUrl": {
            "type": "string"
          },
          "checkList": {
            "$ref": "#/components/schemas/VendorCheckList"
          },
          "apps": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorAppDTO"
            }
          },
          "children": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "zoneId": {
            "type": "string"
          },
          "vendorTerms": {
            "$ref": "#/components/schemas/VendorTermsDTO"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "VendorForCoverDTO": {
        "required": [
          "enabledPaymentGateways",
          "name",
          "paymentKey"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "paymentKey": {
            "type": "string"
          },
          "enabledPaymentGateways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountEnabledpaymentgatewaydto"
            }
          }
        }
      },
      "ApplicationRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          },
          "claims": {
            "$ref": "#/components/schemas/ClaimRepresentation"
          }
        }
      },
      "AuthenticationExecutionExportRepresentation": {
        "type": "object",
        "properties": {
          "authenticatorConfig": {
            "type": "string"
          },
          "authenticator": {
            "type": "string"
          },
          "authenticatorFlow": {
            "type": "boolean"
          },
          "requirement": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "autheticatorFlow": {
            "type": "boolean",
            "deprecated": true
          },
          "flowAlias": {
            "type": "string"
          },
          "userSetupAllowed": {
            "type": "boolean"
          }
        }
      },
      "AuthenticationFlowRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "topLevel": {
            "type": "boolean"
          },
          "builtIn": {
            "type": "boolean"
          },
          "authenticationExecutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationExecutionExportRepresentation"
            }
          }
        }
      },
      "AuthenticatorConfigRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ClaimRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean"
          },
          "username": {
            "type": "boolean"
          },
          "profile": {
            "type": "boolean"
          },
          "picture": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "gender": {
            "type": "boolean"
          },
          "locale": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          }
        }
      },
      "ClientRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          }
        }
      },
      "ClientScopeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          }
        }
      },
      "ClientTemplateRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          }
        }
      },
      "ComponentExportRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "subType": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/MultivaluedHashMapStringString"
          }
        }
      },
      "Composites": {
        "type": "object",
        "properties": {
          "realm": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "application": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          }
        }
      },
      "CredentialRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "userLabel": {
            "type": "string"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "secretData": {
            "type": "string"
          },
          "credentialData": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "temporary": {
            "type": "boolean"
          },
          "device": {
            "type": "string",
            "deprecated": true
          },
          "hashedSaltedValue": {
            "type": "string",
            "deprecated": true
          },
          "salt": {
            "type": "string",
            "deprecated": true
          },
          "hashIterations": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "counter": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "algorithm": {
            "type": "string",
            "deprecated": true
          },
          "digits": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "period": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "config": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          }
        }
      },
      "FederatedIdentityRepresentation": {
        "type": "object",
        "properties": {
          "identityProvider": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "GroupRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "IdentityProviderMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identityProviderAlias": {
            "type": "string"
          },
          "identityProviderMapper": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "IdentityProviderRepresentation": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "updateProfileFirstLoginMode": {
            "type": "string",
            "deprecated": true
          },
          "trustEmail": {
            "type": "boolean"
          },
          "storeToken": {
            "type": "boolean"
          },
          "addReadTokenRoleOnCreate": {
            "type": "boolean"
          },
          "authenticateByDefault": {
            "type": "boolean",
            "deprecated": true
          },
          "linkOnly": {
            "type": "boolean"
          },
          "firstBrokerLoginFlowAlias": {
            "type": "string"
          },
          "postBrokerLoginFlowAlias": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "updateProfileFirstLogin": {
            "type": "boolean",
            "writeOnly": true,
            "deprecated": true
          }
        }
      },
      "MultivaluedHashMapStringString": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deprecated": true
      },
      "OAuthClientRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rootUrl": {
            "type": "string"
          },
          "adminUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "surrogateAuthRequired": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "alwaysDisplayInConsole": {
            "type": "boolean"
          },
          "clientAuthenticatorType": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "registrationAccessToken": {
            "type": "string"
          },
          "defaultRoles": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "redirectUris": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webOrigins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "bearerOnly": {
            "type": "boolean"
          },
          "consentRequired": {
            "type": "boolean"
          },
          "standardFlowEnabled": {
            "type": "boolean"
          },
          "implicitFlowEnabled": {
            "type": "boolean"
          },
          "directAccessGrantsEnabled": {
            "type": "boolean"
          },
          "serviceAccountsEnabled": {
            "type": "boolean"
          },
          "authorizationServicesEnabled": {
            "type": "boolean"
          },
          "directGrantsOnly": {
            "type": "boolean",
            "deprecated": true
          },
          "publicClient": {
            "type": "boolean"
          },
          "frontchannelLogout": {
            "type": "boolean"
          },
          "protocol": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authenticationFlowBindingOverrides": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fullScopeAllowed": {
            "type": "boolean"
          },
          "nodeReRegistrationTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "registeredNodes": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "useTemplateConfig": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateScope": {
            "type": "boolean",
            "deprecated": true
          },
          "useTemplateMappers": {
            "type": "boolean",
            "deprecated": true
          },
          "defaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorizationSettings": {
            "$ref": "#/components/schemas/ResourceServerRepresentation"
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "origin": {
            "type": "string"
          },
          "claims": {
            "$ref": "#/components/schemas/ClaimRepresentation"
          }
        }
      },
      "PolicyRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "policies": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resources": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logic": {
            "type": "string",
            "enum": [
              "POSITIVE",
              "NEGATIVE"
            ]
          },
          "decisionStrategy": {
            "type": "string",
            "enum": [
              "AFFIRMATIVE",
              "UNANIMOUS",
              "CONSENSUS"
            ]
          },
          "owner": {
            "type": "string"
          },
          "resourcesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "scopesData": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ProtocolMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "protocolMapper": {
            "type": "string"
          },
          "consentRequired": {
            "type": "boolean",
            "deprecated": true
          },
          "consentText": {
            "type": "string",
            "deprecated": true
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "RealmRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "displayNameHtml": {
            "type": "string"
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "defaultSignatureAlgorithm": {
            "type": "string"
          },
          "revokeRefreshToken": {
            "type": "boolean"
          },
          "refreshTokenMaxReuse": {
            "type": "integer",
            "format": "int32"
          },
          "accessTokenLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "accessTokenLifespanForImplicitFlow": {
            "type": "integer",
            "format": "int32"
          },
          "ssoSessionIdleTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "ssoSessionMaxLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "ssoSessionIdleTimeoutRememberMe": {
            "type": "integer",
            "format": "int32"
          },
          "ssoSessionMaxLifespanRememberMe": {
            "type": "integer",
            "format": "int32"
          },
          "offlineSessionIdleTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "offlineSessionMaxLifespanEnabled": {
            "type": "boolean"
          },
          "offlineSessionMaxLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "clientSessionIdleTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "clientSessionMaxLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "clientOfflineSessionIdleTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "clientOfflineSessionMaxLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "accessCodeLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "accessCodeLifespanUserAction": {
            "type": "integer",
            "format": "int32"
          },
          "accessCodeLifespanLogin": {
            "type": "integer",
            "format": "int32"
          },
          "actionTokenGeneratedByAdminLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "actionTokenGeneratedByUserLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "oauth2DeviceCodeLifespan": {
            "type": "integer",
            "format": "int32"
          },
          "oauth2DevicePollingInterval": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          },
          "sslRequired": {
            "type": "string"
          },
          "passwordCredentialGrantAllowed": {
            "type": "boolean",
            "deprecated": true
          },
          "registrationAllowed": {
            "type": "boolean"
          },
          "registrationEmailAsUsername": {
            "type": "boolean"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "verifyEmail": {
            "type": "boolean"
          },
          "loginWithEmailAllowed": {
            "type": "boolean"
          },
          "duplicateEmailsAllowed": {
            "type": "boolean"
          },
          "resetPasswordAllowed": {
            "type": "boolean"
          },
          "editUsernameAllowed": {
            "type": "boolean"
          },
          "bruteForceProtected": {
            "type": "boolean"
          },
          "permanentLockout": {
            "type": "boolean"
          },
          "maxFailureWaitSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "minimumQuickLoginWaitSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "waitIncrementSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "quickLoginCheckMilliSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "maxDeltaTimeSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "failureFactor": {
            "type": "integer",
            "format": "int32"
          },
          "privateKey": {
            "type": "string",
            "deprecated": true
          },
          "publicKey": {
            "type": "string",
            "deprecated": true
          },
          "certificate": {
            "type": "string",
            "deprecated": true
          },
          "codeSecret": {
            "type": "string",
            "deprecated": true
          },
          "roles": {
            "$ref": "#/components/schemas/RolesRepresentation"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRepresentation"
            }
          },
          "defaultRoles": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "defaultRole": {
            "$ref": "#/components/schemas/RoleRepresentation"
          },
          "defaultGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredCredentials": {
            "uniqueItems": true,
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          },
          "passwordPolicy": {
            "type": "string"
          },
          "otpPolicyType": {
            "type": "string"
          },
          "otpPolicyAlgorithm": {
            "type": "string"
          },
          "otpPolicyInitialCounter": {
            "type": "integer",
            "format": "int32"
          },
          "otpPolicyDigits": {
            "type": "integer",
            "format": "int32"
          },
          "otpPolicyLookAheadWindow": {
            "type": "integer",
            "format": "int32"
          },
          "otpPolicyPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "otpPolicyCodeReusable": {
            "type": "boolean"
          },
          "otpSupportedApplications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyRpEntityName": {
            "type": "string"
          },
          "webAuthnPolicySignatureAlgorithms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyRpId": {
            "type": "string"
          },
          "webAuthnPolicyAttestationConveyancePreference": {
            "type": "string"
          },
          "webAuthnPolicyAuthenticatorAttachment": {
            "type": "string"
          },
          "webAuthnPolicyRequireResidentKey": {
            "type": "string"
          },
          "webAuthnPolicyUserVerificationRequirement": {
            "type": "string"
          },
          "webAuthnPolicyCreateTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "webAuthnPolicyAvoidSameAuthenticatorRegister": {
            "type": "boolean"
          },
          "webAuthnPolicyAcceptableAaguids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessRpEntityName": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessSignatureAlgorithms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "webAuthnPolicyPasswordlessRpId": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessAttestationConveyancePreference": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessAuthenticatorAttachment": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessRequireResidentKey": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessUserVerificationRequirement": {
            "type": "string"
          },
          "webAuthnPolicyPasswordlessCreateTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": {
            "type": "boolean"
          },
          "webAuthnPolicyPasswordlessAcceptableAaguids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRepresentation"
            }
          },
          "federatedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRepresentation"
            }
          },
          "scopeMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeMappingRepresentation"
            }
          },
          "clientScopeMappings": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScopeMappingRepresentation"
              }
            }
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRepresentation"
            }
          },
          "clientScopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientScopeRepresentation"
            }
          },
          "defaultDefaultClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultOptionalClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "browserSecurityHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "smtpServer": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "userFederationProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFederationProviderRepresentation"
            }
          },
          "userFederationMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFederationMapperRepresentation"
            }
          },
          "loginTheme": {
            "type": "string"
          },
          "accountTheme": {
            "type": "string"
          },
          "adminTheme": {
            "type": "string"
          },
          "emailTheme": {
            "type": "string"
          },
          "eventsEnabled": {
            "type": "boolean"
          },
          "eventsExpiration": {
            "type": "integer",
            "format": "int64"
          },
          "eventsListeners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledEventTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adminEventsEnabled": {
            "type": "boolean"
          },
          "adminEventsDetailsEnabled": {
            "type": "boolean"
          },
          "identityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderRepresentation"
            }
          },
          "identityProviderMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
            }
          },
          "protocolMappers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtocolMapperRepresentation"
            }
          },
          "components": {
            "type": "object",
            "properties": {
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ComponentExportRepresentation"
              }
            }
          },
          "internationalizationEnabled": {
            "type": "boolean"
          },
          "supportedLocales": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultLocale": {
            "type": "string"
          },
          "authenticationFlows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
            }
          },
          "authenticatorConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
            }
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
            }
          },
          "browserFlow": {
            "type": "string"
          },
          "registrationFlow": {
            "type": "string"
          },
          "directGrantFlow": {
            "type": "string"
          },
          "resetCredentialsFlow": {
            "type": "string"
          },
          "clientAuthenticationFlow": {
            "type": "string"
          },
          "dockerAuthenticationFlow": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "keycloakVersion": {
            "type": "string"
          },
          "userManagedAccessAllowed": {
            "type": "boolean"
          },
          "social": {
            "type": "boolean",
            "deprecated": true
          },
          "updateProfileOnInitialSocialLogin": {
            "type": "boolean",
            "deprecated": true
          },
          "socialProviders": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "deprecated": true
          },
          "applicationScopeMappings": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScopeMappingRepresentation"
              }
            },
            "deprecated": true
          },
          "applications": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ApplicationRepresentation"
            }
          },
          "oauthClients": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/OAuthClientRepresentation"
            }
          },
          "clientTemplates": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ClientTemplateRepresentation"
            }
          },
          "clientProfiles": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "clientPolicies": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "RequiredActionProviderRepresentation": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "defaultAction": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ResourceOwnerRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResourceRepresentation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/ResourceOwnerRepresentation"
          },
          "ownerManagedAccess": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "_id": {
            "type": "string"
          },
          "uris": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "icon_uri": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "writeOnly": true,
            "deprecated": true
          },
          "resource_scopes": {
            "uniqueItems": true,
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          }
        }
      },
      "ResourceServerRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "allowRemoteResourceManagement": {
            "type": "boolean"
          },
          "policyEnforcementMode": {
            "type": "string",
            "enum": [
              "ENFORCING",
              "PERMISSIVE",
              "DISABLED"
            ]
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceRepresentation"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRepresentation"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeRepresentation"
            }
          },
          "decisionStrategy": {
            "type": "string",
            "enum": [
              "AFFIRMATIVE",
              "UNANIMOUS",
              "CONSENSUS"
            ]
          }
        }
      },
      "RoleRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scopeParamRequired": {
            "type": "boolean",
            "deprecated": true
          },
          "composite": {
            "type": "boolean"
          },
          "composites": {
            "$ref": "#/components/schemas/Composites"
          },
          "clientRole": {
            "type": "boolean"
          },
          "containerId": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "RolesRepresentation": {
        "type": "object",
        "properties": {
          "realm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleRepresentation"
            }
          },
          "client": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            }
          },
          "application": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RoleRepresentation"
              }
            },
            "deprecated": true
          }
        }
      },
      "ScopeMappingRepresentation": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "client": {
            "type": "string"
          },
          "clientTemplate": {
            "type": "string",
            "deprecated": true
          },
          "clientScope": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ScopeRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iconUri": {
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyRepresentation"
            }
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "SocialLinkRepresentation": {
        "type": "object",
        "properties": {
          "socialProvider": {
            "type": "string"
          },
          "socialUserId": {
            "type": "string"
          },
          "socialUsername": {
            "type": "string"
          }
        }
      },
      "UserConsentRepresentation": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "grantedClientScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "lastUpdatedDate": {
            "type": "integer",
            "format": "int64"
          },
          "grantedRealmRoles": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserFederationMapperRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "federationProviderDisplayName": {
            "type": "string"
          },
          "federationMapperType": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "UserFederationProviderRepresentation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "providerName": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "fullSyncPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "changedSyncPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "lastSync": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserRepresentation": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "createdTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "totp": {
            "type": "boolean",
            "deprecated": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "federationLink": {
            "type": "string"
          },
          "serviceAccountClientId": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialRepresentation"
            }
          },
          "disableableCredentialTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "federatedIdentities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FederatedIdentityRepresentation"
            }
          },
          "realmRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "clientConsents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConsentRepresentation"
            }
          },
          "notBefore": {
            "type": "integer",
            "format": "int32"
          },
          "applicationRoles": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deprecated": true
          },
          "socialLinks": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/SocialLinkRepresentation"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "AuthorizationCodeResponse": {
        "required": [
          "client_id",
          "id",
          "scope",
          "sub",
          "vendor_uuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "vendor_uuid": {
            "type": "string",
            "format": "uuid"
          },
          "parent_uuid": {
            "type": "string",
            "format": "uuid"
          },
          "sub": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "VerifyDTO": {
        "required": [
          "paymentKey",
          "secretKey"
        ],
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string"
          },
          "paymentKey": {
            "type": "string"
          }
        }
      },
      "AccountResponseDTO": {
        "required": [
          "managerUuid",
          "paymentKey",
          "planType",
          "secretToken",
          "vendorUuid",
          "zoneId"
        ],
        "type": "object",
        "properties": {
          "managerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "paymentKey": {
            "type": "string"
          },
          "secretToken": {
            "type": "string"
          },
          "planType": {
            "type": "string"
          },
          "zoneId": {
            "type": "string"
          }
        }
      },
      "RealmDTO": {
        "type": "object",
        "properties": {
          "keycloakId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "userRegistration": {
            "type": "boolean"
          },
          "emailAsUsername": {
            "type": "boolean"
          },
          "editUsername": {
            "type": "boolean"
          },
          "forgotPassword": {
            "type": "boolean"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "verifyEmail": {
            "type": "boolean"
          },
          "loginWithEmail": {
            "type": "boolean"
          },
          "sslRequired": {
            "type": "string"
          },
          "userFederationId": {
            "type": "string"
          }
        }
      },
      "AccountErrorresponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "AccountApiresponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "writeOnly": true
          },
          "message": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "AccountCustomerdto": {
        "required": [
          "createdAt",
          "emailVerified",
          "enabled",
          "id",
          "nickname",
          "realm",
          "realname",
          "username",
          "uuid",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "$ref": "#/components/schemas/CustomerVendorDTO"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "realm": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "realname": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountReq": {
        "required": [
          "managerUuid"
        ],
        "type": "object",
        "properties": {
          "managerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "planType": {
            "type": "string",
            "enum": [
              "ZERO",
              "SOLO",
              "MINI",
              "PRO",
              "MAX"
            ]
          },
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "featuredImageUrl": {
            "maxLength": 2147483647,
            "minLength": 3,
            "type": "string"
          },
          "email": {
            "maxLength": 2147483647,
            "minLength": 3,
            "type": "string"
          },
          "vendorTerms": {
            "$ref": "#/components/schemas/VendorTermsCreateDTO"
          }
        }
      },
      "AccountCycledto": {
        "required": [
          "interval",
          "period"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "period": {
            "$ref": "#/components/schemas/AccountPerioddto"
          }
        }
      },
      "AccountPerioddto": {
        "required": [
          "label",
          "value"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "AccountEnabledpaymentgatewaydto": {
        "required": [
          "isBill",
          "isTest",
          "paymentGateway",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "isTest": {
            "type": "boolean"
          },
          "isBill": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseObject": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "response": {
            "type": "object"
          }
        }
      },
      "MoneyEmbeddable": {
        "required": [
          "amount",
          "currency",
          "floatingPointMovedAmount",
          "scaledAmount"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "scaledAmount": {
            "type": "number"
          },
          "floatingPointMovedAmount": {
            "type": "number"
          }
        }
      },
      "Partner": {
        "required": [
          "partnerOrderId",
          "partnerUserId"
        ],
        "type": "object",
        "properties": {
          "partnerOrderId": {
            "type": "string"
          },
          "partnerUserId": {
            "type": "string"
          }
        }
      },
      "Product": {
        "required": [
          "itemName",
          "money",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "itemName": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "writeOnly": true
          },
          "amount": {
            "type": "number",
            "writeOnly": true
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "money": {
            "$ref": "#/components/schemas/MoneyEmbeddable"
          }
        }
      },
      "PayLinkDTO": {
        "type": "object"
      },
      "CancelRequestDTO": {
        "required": [
          "idKey",
          "requestPrice"
        ],
        "type": "object",
        "properties": {
          "idKey": {
            "type": "string"
          },
          "requestPrice": {
            "type": "number"
          },
          "refundAccount": {
            "type": "string"
          },
          "refundAccountBank": {
            "type": "string",
            "enum": [
              "KDB",
              "IBK",
              "KB",
              "KEB",
              "HOUSING",
              "SH",
              "NH",
              "NH_BRANCH",
              "NH_LIVESTOCK",
              "WOORI",
              "CHB",
              "COMMERCIAL",
              "SC",
              "HANIL",
              "SEOUL",
              "SHINHAN",
              "HANMI",
              "DGB",
              "BNK_BS",
              "KJB",
              "JEJU",
              "JB",
              "KANGWON",
              "BNK_KN",
              "BC",
              "MG",
              "CREDIT_UNION",
              "MUTUAL_SAVINGS",
              "CITI",
              "HKSANGHAI",
              "DEUTSCHE",
              "ABN_AMRO",
              "JP_MORGAN",
              "MUFG",
              "BOA",
              "NFCF",
              "BARO",
              "POST",
              "HANA",
              "PEACE",
              "SSG",
              "SHINHAN_UNIFIED",
              "KBANK",
              "KAKAO_BANK",
              "YUANTA",
              "HYUNDAI",
              "MIRAE_ASSET",
              "KOREA_INVESTMENT",
              "WOORI_INVESTMENT",
              "HI_INVESTMENT",
              "HYUNDAI_MOTOR",
              "SK",
              "DAISHIN",
              "HANA_FINANCIAL",
              "SHINHAN_INVESTMENT",
              "DB",
              "EUGENE",
              "MERITZ",
              "SHINYOUNG",
              "DAEWOO",
              "SAMSUNG",
              "KYOBO",
              "KIWOOM",
              "EBEST",
              "IM",
              "HANWHA",
              "NH_INVESTMENT",
              "BOOKOOK",
              "CAPE"
            ]
          },
          "refundAccountName": {
            "type": "string"
          },
          "option": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "HPayRealTimePayDTO": {
        "required": [
          "forceCl",
          "isTest",
          "mid",
          "reqAmt"
        ],
        "type": "object",
        "properties": {
          "Mid": {
            "type": "string",
            "writeOnly": true
          },
          "ReqAmt": {
            "type": "string",
            "writeOnly": true
          },
          "ForceCl": {
            "type": "string",
            "writeOnly": true
          },
          "EdiDate": {
            "type": "string",
            "writeOnly": true
          },
          "EncryptData": {
            "type": "string",
            "writeOnly": true
          },
          "SubId": {
            "type": "string",
            "writeOnly": true
          },
          "DepositNm": {
            "type": "string",
            "writeOnly": true
          },
          "SubCoNo": {
            "type": "string",
            "writeOnly": true
          },
          "SubCoNm": {
            "type": "string",
            "writeOnly": true
          },
          "BankCd": {
            "type": "string",
            "writeOnly": true
          },
          "AccntNo": {
            "type": "string",
            "writeOnly": true
          },
          "AccntNm": {
            "type": "string",
            "writeOnly": true
          },
          "Memo": {
            "type": "string",
            "writeOnly": true
          },
          "MallReserved": {
            "type": "string",
            "writeOnly": true
          },
          "isTest": {
            "type": "boolean"
          },
          "reqAmt": {
            "type": "string"
          },
          "forceCl": {
            "type": "string"
          },
          "subId": {
            "type": "string"
          },
          "depositNm": {
            "type": "string"
          },
          "subCoNo": {
            "type": "string"
          },
          "mid": {
            "type": "string"
          },
          "mallReserved": {
            "type": "string"
          },
          "ediDate": {
            "type": "string"
          },
          "encryptData": {
            "type": "string"
          },
          "bankCd": {
            "type": "string"
          },
          "accntNo": {
            "type": "string"
          },
          "subCoNm": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "accntNm": {
            "type": "string"
          }
        }
      },
      "ReceiptUrlsRequestDTO": {
        "required": [
          "idKeys",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "idKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReceiptUrlsResponseDTO": {
        "required": [
          "customer",
          "paymentGateway",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "receiptUrl": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/PaymentCustomer"
          }
        }
      },
      "ApiResponseCancelResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/CancelResponse"
          }
        }
      },
      "CancelPaymentDTO": {
        "type": "object",
        "properties": {
          "canceledAmount": {
            "type": "number"
          },
          "tid": {
            "type": "string"
          },
          "errorReturn": {
            "type": "string"
          },
          "option": {
            "type": "string"
          },
          "pgAuth": {
            "type": "string"
          },
          "paymentReturn": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "STANDBY",
              "COMPLETE",
              "CANCELED",
              "PARTIAL_CANCELED",
              "USER_CANCELED",
              "CANCELED_FAIL",
              "CANCEL_PROGRESS",
              "FAILED",
              "VIRTUAL_BANK_STANDBY",
              "CMS_STANDBY"
            ]
          },
          "canceledDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CancelResponse": {
        "type": "object",
        "properties": {
          "tid": {
            "type": "string"
          },
          "paymentReceiptUrl": {
            "type": "string"
          },
          "cancelPayment": {
            "$ref": "#/components/schemas/CancelPaymentDTO"
          }
        }
      },
      "PaymentBillingDTO": {
        "required": [
          "customer",
          "discount",
          "idKey",
          "isMobile",
          "partner",
          "product",
          "taxFreeAmount"
        ],
        "type": "object",
        "properties": {
          "idKey": {
            "type": "string"
          },
          "partner": {
            "$ref": "#/components/schemas/Partner"
          },
          "customer": {
            "$ref": "#/components/schemas/PaymentCustomer"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "taxFreeAmount": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number"
          },
          "discount": {
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number"
          },
          "isMobile": {
            "type": "boolean"
          },
          "option": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "NiceCmsDTO": {
        "required": [
          "accountHolderSocialSecurityNumber",
          "bankAccount",
          "bankCode",
          "companyName",
          "corporateManager",
          "date",
          "status"
        ],
        "type": "object",
        "properties": {
          "corporateManager": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "accountHolderSocialSecurityNumber": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACCOUNT_PENDING",
              "ACCOUNT_FAIL",
              "ACCOUNT_SUCCESS",
              "WITHDRAW_PENDING",
              "WITHDRAW_FAIL",
              "WITHDRAW_SUCCESS"
            ]
          },
          "errorReturn": {
            "type": "string"
          }
        },
        "description": "NICE CMS 정보"
      },
      "InternalPaymentDTO": {
        "required": [
          "cancel",
          "cancelHistory",
          "customer",
          "id",
          "idKey",
          "paidAmount",
          "paymentGateway",
          "paymentMethod",
          "paymentOnly",
          "product",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "idKey": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "customer": {
            "$ref": "#/components/schemas/PaymentCustomer"
          },
          "paidAmount": {
            "type": "number"
          },
          "paidAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "STANDBY",
              "COMPLETE",
              "CANCELED",
              "PARTIAL_CANCELED",
              "USER_CANCELED",
              "CANCELED_FAIL",
              "CANCEL_PROGRESS",
              "FAILED",
              "VIRTUAL_BANK_STANDBY",
              "CMS_STANDBY"
            ]
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "paymentOnly": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          },
          "cancel": {
            "$ref": "#/components/schemas/PaymentCancel"
          },
          "cancelHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelPaymentDTO"
            }
          },
          "vBankDTO": {
            "$ref": "#/components/schemas/VBankDTO"
          },
          "cmsDTO": {
            "$ref": "#/components/schemas/NiceCmsDTO"
          },
          "partnerOrderId": {
            "type": "string"
          },
          "partnerUserId": {
            "type": "string"
          },
          "vbankDTO": {
            "$ref": "#/components/schemas/VBankDTO"
          }
        }
      },
      "VBankDTO": {
        "required": [
          "accountName",
          "accountNumber",
          "bankDate",
          "bankName"
        ],
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "bankDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "가상 계좌 정보 (paymentMethod가 VBANK 일 때"
      },
      "PaymentErrorresponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "PaymentCustomer": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "PaymentReq": {
        "required": [
          "customer",
          "customerId",
          "idKey",
          "partner",
          "paymentGateway",
          "paymentMethodId",
          "product",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "idKey": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "partner": {
            "$ref": "#/components/schemas/Partner"
          },
          "customer": {
            "$ref": "#/components/schemas/PaymentCustomer"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "paymentMethodId": {
            "type": "integer",
            "format": "int64"
          },
          "pinCode": {
            "type": "string"
          },
          "webAuthnIdKey": {
            "type": "string"
          }
        }
      },
      "PaymentEnabledpaymentgatewaydto": {
        "required": [
          "isBill",
          "isTest",
          "paymentGateway",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "isTest": {
            "type": "boolean"
          },
          "isBill": {
            "type": "boolean"
          }
        }
      },
      "PaymentCancel": {
        "required": [
          "canceledAmount"
        ],
        "type": "object",
        "properties": {
          "canceledAmount": {
            "type": "number"
          },
          "lastCanceledDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InternalWebHookRequestDTO": {
        "required": [
          "amount",
          "idKey",
          "orderId",
          "paymentGateway",
          "paymentMethod",
          "webHookType"
        ],
        "type": "object",
        "properties": {
          "webHookType": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "BILLKEY",
              "VBANK",
              "CANCELED",
              "USER_CANCELED",
              "FAILED",
              "CMS"
            ]
          },
          "idKey": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "paymentInfo": {
            "type": "string"
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "NAVER",
              "DANAL",
              "KAKAO",
              "KG",
              "KCP",
              "NICE",
              "JT",
              "GOOGLE",
              "BANKPAY",
              "BLUEWALNUT",
              "KSNET",
              "TOSS",
              "EXIMBAY",
              "SETTLE",
              "DAOUDATA",
              "WELCOME",
              "NICE_V2",
              "STRIPE",
              "PAYPLE",
              "PAYPLE_GLOBAL",
              "KICC",
              "UNKNOWN"
            ]
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "CARD",
              "VBANK",
              "BANK",
              "CELLPHONE",
              "SIMPLE_PAY",
              "CMS",
              "CARD_BILL",
              "CELLPHONE_BILL",
              "CMS_BILL"
            ]
          },
          "amount": {
            "type": "number"
          },
          "options": {
            "type": "object"
          }
        }
      },
      "BundleProductDTO": {
        "title": "번들 상품 정보",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "options": {
            "type": "array",
            "description": "상품 옵션 목록",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "상품 가격플랜 목록",
            "items": {
              "$ref": "#/components/schemas/ProductPricedto"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          }
        },
        "description": "번들 상품 정보"
      },
      "CSItemDTO": {
        "required": [
          "actor",
          "category",
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "actor": {
            "type": "string",
            "enum": [
              "SYSTEM",
              "SELLER",
              "BUYER"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "CANCELLATION",
              "EXCHANGE",
              "RETURN"
            ]
          },
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "CS기록"
      },
      "Claim": {
        "title": "청구 방식 정보",
        "required": [
          "billingDate",
          "methodType",
          "whenToClaimType"
        ],
        "type": "object",
        "properties": {
          "methodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "provideStartDay": {
            "type": "integer",
            "description": "서비스 제공기간 시작일",
            "format": "int32"
          }
        },
        "description": "청구 방식 정보"
      },
      "CountrySettingDTO": {
        "required": [
          "countryCode",
          "currencyCode",
          "id",
          "isDefault",
          "taxRate",
          "timezoneName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "countryCode": {
            "type": "string"
          },
          "timezoneName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "taxRate": {
            "type": "number"
          }
        },
        "description": "국가 설정 정보"
      },
      "DemoCycle": {
        "required": [
          "num",
          "type"
        ],
        "type": "object",
        "properties": {
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          }
        },
        "description": "무료체험이 적용됐는지 적용 여부 및 기간"
      },
      "FirstSale": {
        "title": "첫 구매 할인 정보",
        "required": [
          "enabled",
          "price"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부"
          },
          "price": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64"
          }
        },
        "description": "첫 구매 할인 정보"
      },
      "OptionCombinationDTO": {
        "required": [
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "HIDDEN"
            ]
          }
        },
        "description": "옵션 조합"
      },
      "OrderItemUnitChangeHistoryV1DTO": {
        "title": "계정 수 변동 내역",
        "required": [
          "changedCount",
          "days"
        ],
        "type": "object",
        "properties": {
          "changedCount": {
            "type": "integer",
            "description": "계정 수 증감량",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "description": "요금 계산 기준 날짜",
            "format": "int64"
          }
        },
        "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)"
      },
      "Plan": {
        "title": "가격 플랜 정보",
        "required": [
          "description",
          "isHiddenFromShop",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "플랜 이름"
          },
          "description": {
            "type": "string",
            "description": "플랜 설명"
          },
          "detailDescription": {
            "type": "string",
            "description": "자세히 보기"
          },
          "isHiddenFromShop": {
            "type": "boolean",
            "description": "플랜 사용 여부"
          },
          "adminName": {
            "type": "string",
            "description": "어드민 플랜 이름"
          }
        },
        "description": "가격 플랜 정보"
      },
      "PriceAdditionalBillingDTO": {
        "title": "추가 과금 정보",
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "추가 과금 타입",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "description": "추가 과금 범위 정보",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRangeDTO"
            }
          }
        },
        "description": "추가 과금 정보"
      },
      "PriceAdditionalBillingRangeDTO": {
        "title": "추가 과금 범위 정보",
        "required": [
          "id",
          "price",
          "until"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "추가 과금 범위 번호",
            "format": "int64"
          },
          "until": {
            "type": "integer",
            "description": "범위가 어디까지인지",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "description": "범위에 적용되는 금액"
          }
        },
        "description": "추가 과금 범위 정보"
      },
      "PriceBundleDTO": {
        "required": [
          "price",
          "product"
        ],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductProductdto"
          },
          "price": {
            "$ref": "#/components/schemas/ProductPricedto"
          }
        },
        "description": "번들 플랜 - 번들 상품 구성"
      },
      "PriceOptionDTO": {
        "title": "가격 플랜 옵션 정보",
        "required": [
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "productCode": {
            "type": "string",
            "description": "연관 상품 코드"
          },
          "type": {
            "type": "string",
            "description": "옵션 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "가격",
            "format": "int64"
          },
          "priceCode": {
            "type": "string",
            "description": "연관 가격플랜 코드"
          },
          "priceName": {
            "type": "string",
            "description": "연관 가격플랜 이름"
          },
          "productType": {
            "type": "string",
            "description": "연관 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "recurringDTO": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          }
        },
        "description": "옵션 정보"
      },
      "PriceRecurringDTO": {
        "title": "구독 주기 정보",
        "required": [
          "id",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주기 정보 번호",
            "format": "int64"
          },
          "intervalCount": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          },
          "aggregateUsageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "SUM",
              "LAST_DURING_PERIOD",
              "LAST_EVER",
              "MAX"
            ]
          },
          "interval": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "usageType": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "LICENSED",
              "METERED"
            ]
          }
        },
        "description": "구독 주기 정보"
      },
      "PriceSetupOptionDTO": {
        "title": "기본료 정보",
        "required": [
          "claimMethodType",
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "기본료 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "기본료 이름"
          },
          "type": {
            "type": "string",
            "description": "기본료 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "description": "기본료 금액",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "description": "기본료가 선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        },
        "description": "기본료 정보"
      },
      "PriceVolumeDTO": {
        "required": [
          "id",
          "max",
          "min",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          }
        },
        "deprecated": true
      },
      "ProductCategoryDTO": {
        "required": [
          "categoryId",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "description": "카테고리"
      },
      "ProductEventBadge": {
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "description": "시작 시점",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "끝 시점",
            "format": "date-time"
          }
        },
        "description": "이벤트 뱃지"
      },
      "ProductOptionDTO": {
        "title": "옵션 정보",
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 이름"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "parent": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductOptionGroupDTO": {
        "title": "상품 옵션 그룹 정보",
        "required": [
          "id",
          "name",
          "options"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "옵션 그룹 번호",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "옵션 그룹 이름"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionDTO"
            }
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "옵션 그룹 정보"
      },
      "ProductWidgetDTO": {
        "type": "object",
        "properties": {
          "useDemo": {
            "type": "boolean"
          },
          "useEventBadge": {
            "type": "boolean"
          },
          "useOnetimePurchasable": {
            "type": "boolean"
          },
          "useNotice": {
            "type": "boolean"
          }
        },
        "description": "상품 위젯 사용 여부"
      },
      "Shipping": {
        "title": "배송지 정보",
        "required": [
          "address1",
          "address2",
          "name",
          "phone",
          "postcode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 이름"
          },
          "phone": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "수령인 전화번호"
          },
          "postcode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "우편번호"
          },
          "address1": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "주소"
          },
          "address2": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "세부 주소"
          },
          "state": {
            "type": "string",
            "description": "주 정보"
          },
          "city": {
            "type": "string",
            "description": "도시 정보"
          },
          "countryCode": {
            "type": "string",
            "description": "국가 코드"
          }
        },
        "description": "고객이 최근에 사용한 배송지"
      },
      "SubscriptionItemDTO": {
        "title": "구독 항목 정보",
        "required": [
          "claimMethodType",
          "featuredImageUrl",
          "hasOptions",
          "id",
          "isAdditional",
          "isOnetimePurchasable",
          "keepWhenRenew",
          "plan",
          "price",
          "priceType",
          "productName",
          "productType",
          "quantity",
          "selectedOptions",
          "selectedProductOptionIds",
          "selectedProductOptionPrice",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "구독 항목 코드"
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "productType": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성구독 제한 여부"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 옵션 정보"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션들의 ID",
            "items": {
              "type": "integer",
              "description": "선택한 옵션들의 ID",
              "format": "int64"
            }
          },
          "selectedProductOptionPrice": {
            "type": "number",
            "description": "선택한 옵션 추가 금액"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "isAdditional": {
            "type": "boolean",
            "description": "추가 구매 상품인지 여부"
          },
          "keepWhenRenew": {
            "type": "boolean",
            "description": "갱신될 때 유지되는 항목인지 여부"
          },
          "hasOptions": {
            "type": "boolean",
            "description": "옵션이 존재하는지 여부"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "productCode": {
            "type": "string",
            "description": "상품 코드"
          },
          "priceCode": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "type": {
            "type": "string",
            "description": "항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 정보",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "priceType": {
            "type": "string",
            "description": "가격 플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "selectedOptions": {
            "type": "array",
            "description": "선택된 옵션",
            "items": {
              "type": "integer",
              "description": "선택된 옵션",
              "format": "int64"
            }
          },
          "parentSubscriptionItemCode": {
            "type": "string",
            "description": "파생 구독 아이템의 부모(번들) 아이템 코드"
          }
        },
        "description": "구독 항목들"
      },
      "ApiResponseString": {
        "title": "단순 API 응답",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "결과에 대한 메세지"
          },
          "body": {
            "type": "string",
            "description": "관련 데이터"
          }
        }
      },
      "PriceModuleMappingRequestDTO": {
        "required": [
          "items",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceQuantityPare"
            }
          },
          "vendorUuid": {
            "type": "string"
          },
          "invoiceDiscount": {
            "type": "number"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "postcode": {
            "type": "string"
          }
        }
      },
      "PriceQuantityPare": {
        "required": [
          "priceId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "priceId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BigDecimal": {
        "type": "object"
      },
      "DeliveryCharge": {
        "required": [
          "defaultDeliveryCharge",
          "deliveryChargeType",
          "freeShipOverAmount",
          "islandAndMountainShipAmount",
          "jejuShipAmount",
          "useDeliveryCharge",
          "useLocalShipCharge"
        ],
        "type": "object",
        "properties": {
          "useDeliveryCharge": {
            "type": "boolean"
          },
          "deliveryChargeType": {
            "type": "string",
            "enum": [
              "FREE",
              "CONDITIONAL_FREE",
              "FIXED"
            ]
          },
          "defaultDeliveryCharge": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "freeShipOverAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "useLocalShipCharge": {
            "type": "boolean"
          },
          "jejuShipAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "islandAndMountainShipAmount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "OrderItem": {
        "required": [
          "amount",
          "applyDemo",
          "applyFirstSale",
          "claimMethodType",
          "isBox",
          "isBundle",
          "isDerived",
          "key",
          "plan",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "FEE",
              "USAGE",
              "DEFERRED",
              "ADD",
              "INSTANT"
            ]
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productCode": {
            "type": "string"
          },
          "isBox": {
            "type": "boolean"
          },
          "applyFirstSale": {
            "type": "boolean"
          },
          "applyDemo": {
            "type": "boolean"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "onetimePrice": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "isDerived": {
            "type": "boolean"
          },
          "isBundle": {
            "type": "boolean"
          },
          "relatedItem": {
            "$ref": "#/components/schemas/OrderItem"
          },
          "description": {
            "type": "string"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "PriceModuleInputDTO": {
        "required": [
          "deliveryCharges",
          "items",
          "type",
          "vendorSettings"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "RECURRING_INITIAL"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "deliveryCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryCharge"
            }
          },
          "vendorSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorSettings"
            }
          },
          "invoiceDiscount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/ProductCustomer"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "VendorSettings": {
        "required": [
          "vatIncluded",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "vatIncluded": {
            "type": "boolean"
          },
          "vatRate": {
            "$ref": "#/components/schemas/BigDecimal"
          },
          "paymentAmountScale": {
            "type": "integer",
            "format": "int32"
          },
          "vendorUuid": {
            "type": "string"
          }
        }
      },
      "CustomerOrderDTO": {
        "title": "고객과 연관된 주소 정보",
        "required": [
          "amount",
          "claimMethodType",
          "createdAt",
          "id",
          "productName",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "description": "주문 타입",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "PAYMENT_METHOD",
              "RECURRING_INITIAL",
              "ADD_USAGE"
            ]
          },
          "productName": {
            "type": "string",
            "description": "상품명"
          },
          "amount": {
            "type": "number",
            "description": "주문 금액"
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 정보",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "createdAt": {
            "type": "string",
            "description": "생성 일시",
            "format": "date-time"
          }
        },
        "description": "고객과 연관된 주소 목록"
      },
      "CustomerSubscriptionDTO": {
        "title": "고객과 연관된 구독 정보",
        "required": [
          "code",
          "id",
          "items",
          "recurring",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "구독 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "구독 코드"
          },
          "nextPaymentDateTime": {
            "type": "string",
            "description": "다음 결제 시점",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "description": "구독 항목들",
            "items": {
              "$ref": "#/components/schemas/SubscriptionItemDTO"
            }
          },
          "status": {
            "type": "string",
            "description": "구독 상태",
            "enum": [
              "ACTIVE",
              "UNPAID",
              "PENDING_PAUSE",
              "PAUSE",
              "PENDING_CANCEL",
              "EXPIRED",
              "CANCELED",
              "INCOMPLETE",
              "QUEUEING"
            ]
          },
          "recurring": {
            "$ref": "#/components/schemas/Interval"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDTO"
          },
          "endDate": {
            "type": "string",
            "description": "종료일",
            "format": "date-time"
          },
          "lastPaymentDateTime": {
            "type": "string",
            "description": "최근 결제 시점",
            "format": "date-time"
          }
        },
        "description": "고객과 연관된 구독 목록"
      },
      "Interval": {
        "required": [
          "interval",
          "intervalCount"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "구독 주기 정보"
      },
      "PaymentMethodDTO": {
        "title": "결제수단 정보",
        "required": [
          "id",
          "paymentInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "결제수단 번호",
            "format": "int64"
          },
          "paymentInfo": {
            "type": "string",
            "description": "결제수단 정보"
          }
        },
        "description": "고객이 사용중인 결제수단 목록"
      },
      "SubscriptionCheckBulkResultDTO": {
        "required": [
          "currentPeriodEndDate",
          "currentPeriodStartDate"
        ],
        "type": "object",
        "properties": {
          "trialPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "trialPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PreClaimQuotaPaymentRequestDTO": {
        "required": [
          "deltaAmount"
        ],
        "type": "object",
        "properties": {
          "usedAmount": {
            "type": "number"
          },
          "prevAmount": {
            "type": "number"
          },
          "deltaAmount": {
            "type": "number"
          }
        }
      },
      "UsageRecordCheckRequestDTO": {
        "required": [
          "adminName",
          "customerName",
          "mainPlanCode",
          "mainPlanName",
          "planCode",
          "planName",
          "priceType",
          "productName",
          "record",
          "startDate",
          "subPlanCode",
          "subPlanName",
          "subProductName",
          "subscriptionId"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "planCode": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "record": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "priceType": {
            "type": "string"
          },
          "mainPlanCode": {
            "type": "string"
          },
          "subPlanCode": {
            "type": "string"
          },
          "mainPlanName": {
            "type": "string"
          },
          "subPlanName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "adminName": {
            "type": "string"
          },
          "subProductName": {
            "type": "string"
          }
        }
      },
      "UsageRecordCheckResponseDTO": {
        "required": [
          "inTrialPeriod",
          "invalidCustomerName",
          "invalidPlanCode",
          "invalidPlanName",
          "notInPeriod",
          "subscriptionItemId",
          "subscriptionNotFound",
          "valid"
        ],
        "type": "object",
        "properties": {
          "notInPeriod": {
            "type": "boolean"
          },
          "subscriptionNotFound": {
            "type": "boolean"
          },
          "invalidCustomerName": {
            "type": "boolean"
          },
          "invalidPlanCode": {
            "type": "boolean"
          },
          "invalidPlanName": {
            "type": "boolean"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          },
          "inTrialPeriod": {
            "type": "boolean"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "OfflineOrderCreateRequestDTO": {
        "required": [
          "items",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderitemdto"
            }
          }
        }
      },
      "OfflineOrderItemResponseDTO": {
        "required": [
          "code",
          "priceCode",
          "productCode",
          "productOptions",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONETIME",
              "RECURRING"
            ]
          },
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OfflineOrderResponseDTO": {
        "required": [
          "amount",
          "code",
          "items"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfflineOrderItemResponseDTO"
            }
          }
        }
      },
      "CmsWebhookPayload": {
        "required": [
          "created_at",
          "entry",
          "event",
          "model"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "model": {
            "type": "string"
          },
          "entry": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "SubscriptionCheckResultDTO": {
        "required": [
          "isAddable",
          "isInCurrentPeriod",
          "isInTrial"
        ],
        "type": "object",
        "properties": {
          "isAddable": {
            "type": "boolean"
          },
          "isInTrial": {
            "type": "boolean"
          },
          "isInCurrentPeriod": {
            "type": "boolean"
          }
        }
      },
      "IntervalDTO": {
        "title": "주기 정보",
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "주기 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "count": {
            "type": "integer",
            "description": "주기",
            "format": "int32"
          }
        }
      },
      "PriceAdditionalBilling": {
        "required": [
          "id",
          "ranges",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "USAGE_BASED_WITH_RANGE",
              "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
            ]
          },
          "ranges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAdditionalBillingRange"
            }
          }
        }
      },
      "PriceAdditionalBillingRange": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "until": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "PriceBundle": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          }
        }
      },
      "PriceInternalDTO": {
        "required": [
          "basicServing",
          "billingDate",
          "bundlePrices",
          "code",
          "id",
          "maximumPurchaseQuantity",
          "membershipExpirationDate",
          "onetimeBundlePrice",
          "options",
          "price",
          "recurring",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "setupOption": {
            "$ref": "#/components/schemas/SetupOption"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBilling"
          },
          "recurring": {
            "$ref": "#/components/schemas/IntervalDTO"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "firstSaleEnabled": {
            "type": "boolean"
          },
          "firstSalePrice": {
            "type": "integer",
            "format": "int64"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "basicServing": {
            "type": "integer",
            "format": "int32"
          },
          "bundlePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceBundle"
            }
          },
          "onetimeBundlePrice": {
            "type": "number"
          }
        }
      },
      "PriceOption": {
        "required": [
          "id",
          "interval",
          "intervalCount",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "priceCode": {
            "type": "string"
          },
          "priceName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "interval": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "intervalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetupOption": {
        "required": [
          "claimMethodType",
          "id",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          }
        }
      },
      "ProductCategory": {
        "required": [
          "categoryId",
          "name"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductInternalDTO": {
        "required": [
          "code",
          "createdAt",
          "id",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean"
          },
          "demoPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          },
          "optionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroup"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceInternalDTO"
            }
          }
        }
      },
      "ProductOption": {
        "required": [
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ProductOptionGroup": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOption"
            }
          }
        }
      },
      "InvoiceInternalDTO": {
        "title": "청구서 상세 정보",
        "required": [
          "discount",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "청구서 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "청구서 상태",
            "enum": [
              "TEMPORARY",
              "RESERVATION",
              "SENT",
              "PAID",
              "OVER_DUE",
              "SEND_FAIL"
            ]
          },
          "publishType": {
            "type": "string",
            "description": "청구서 발행 상태",
            "enum": [
              "NOW",
              "RESERVATION"
            ]
          },
          "purchaseDeadline": {
            "type": "string",
            "description": "구매 기한",
            "format": "date-time"
          },
          "publishMethod": {
            "uniqueItems": true,
            "type": "array",
            "description": "발송 수단 목록",
            "items": {
              "type": "string",
              "description": "발송 수단 목록",
              "enum": [
                "KAKAO",
                "SMS",
                "EMAIL"
              ]
            }
          },
          "discount": {
            "type": "integer",
            "description": "할인 금액",
            "format": "int64"
          },
          "memoToCustomer": {
            "type": "string",
            "description": "청구서 메모"
          },
          "reservationAt": {
            "type": "string",
            "description": "예약 일시",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "description": "삭제 일시",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "description": "주문 번호",
            "format": "int64"
          },
          "orderCode": {
            "type": "string",
            "description": "주문 코드"
          },
          "customerId": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          }
        }
      },
      "ProductCustomerSubscriptionsSummaryDTO": {
        "required": [
          "activated",
          "canceled",
          "expired",
          "paused",
          "unpaid"
        ],
        "type": "object",
        "properties": {
          "activated": {
            "type": "integer",
            "format": "int32"
          },
          "unpaid": {
            "type": "integer",
            "format": "int32"
          },
          "paused": {
            "type": "integer",
            "format": "int32"
          },
          "canceled": {
            "type": "integer",
            "format": "int32"
          },
          "expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductErrorresponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "ProductCustomerdto": {
        "title": "고객 상세 정보",
        "required": [
          "additionalRecipients",
          "attributes",
          "createdAt",
          "id",
          "marketingEmail",
          "marketingKakao",
          "marketingSms",
          "orderCount",
          "orders",
          "paymentMethods",
          "subscriptions",
          "totalPurchasedPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "고객 번호",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "고객 상태",
            "enum": [
              "NORMAL",
              "DORMANT"
            ]
          },
          "username": {
            "type": "string",
            "description": "고객 아이디"
          },
          "name": {
            "type": "string",
            "description": "고객 이름"
          },
          "email": {
            "type": "string",
            "description": "고객 이메일"
          },
          "phone": {
            "type": "string",
            "description": "고객 전화번호"
          },
          "orderCount": {
            "type": "integer",
            "description": "고객이 주문한 주문 개수",
            "format": "int32"
          },
          "totalPurchasedPrice": {
            "type": "number",
            "description": "고객이 구매한 전체 금액"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping"
          },
          "orders": {
            "type": "array",
            "description": "고객과 연관된 주소 목록",
            "items": {
              "$ref": "#/components/schemas/CustomerOrderDTO"
            }
          },
          "subscriptions": {
            "type": "array",
            "description": "고객과 연관된 구독 목록",
            "items": {
              "$ref": "#/components/schemas/CustomerSubscriptionDTO"
            }
          },
          "paymentMethods": {
            "type": "array",
            "description": "고객이 사용중인 결제수단 목록",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodDTO"
            }
          },
          "code": {
            "type": "string",
            "description": "고객 코드"
          },
          "marketingSms": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - SMS"
          },
          "marketingEmail": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Email"
          },
          "marketingKakao": {
            "type": "boolean",
            "description": "고객이 허가한 마케팅 채널 - Kakao"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "고객 추가 데이터"
            },
            "description": "고객 추가 데이터"
          },
          "createdAt": {
            "type": "string",
            "description": "고객 생성 시점",
            "format": "date-time"
          },
          "additionalRecipients": {
            "type": "array",
            "description": "추가 수신인",
            "items": {
              "type": "string",
              "description": "추가 수신인"
            }
          }
        }
      },
      "ProductOrderitemdto": {
        "title": "주문 항목 정보",
        "required": [
          "code",
          "createdAt",
          "currency",
          "id",
          "minimumQuantity",
          "modifiedAt",
          "orderItemCode",
          "orderedPlanName",
          "orderedProductName",
          "orderedProductType",
          "paidAmount",
          "quantity",
          "selectedProductOptionIds",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "주문 항목 번호",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "paidAmount": {
            "type": "number",
            "description": "결제 금액"
          },
          "currency": {
            "type": "string",
            "description": "통화 코드"
          },
          "quantity": {
            "type": "integer",
            "description": "수량",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/ProductPricedto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductProductdto"
          },
          "type": {
            "type": "string",
            "description": "주문 항목 타입",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "status": {
            "type": "string",
            "description": "주문 항목 상태",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 이미지 URL"
          },
          "selectedProductOptionLabel": {
            "type": "string",
            "description": "선택한 상품 옵션"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "description": "선택한 옵션 ID 목록",
            "items": {
              "type": "integer",
              "description": "선택한 옵션 ID 목록",
              "format": "int64"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "canceledDateTime": {
            "type": "string",
            "description": "취소 시점",
            "format": "date-time"
          },
          "orderItemCode": {
            "type": "string",
            "description": "주문 항목 코드"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "orderedProductType": {
            "type": "string",
            "description": "주문 시점의 상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "orderedProductName": {
            "type": "string",
            "description": "주문 시점의 상품 이름"
          },
          "orderedPlanName": {
            "type": "string",
            "description": "주문 시점의 가격 플랜 이름"
          },
          "discountName": {
            "type": "string",
            "description": "할인 타입(주문 항목 타입이 DISCOUNT인 경우)"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "description": "연관된 주문 항목 (주문 항목 타입이 DISCOUNT인 경우)",
            "format": "int64"
          },
          "priceSetupType": {
            "type": "string",
            "description": "기본료 주문 항목인 경우 1회 또는 정기적으로 구분하는 타입",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycle"
          },
          "usedCount": {
            "type": "number",
            "description": "사용량(사용량 기반 과금 상품인 경우)"
          },
          "usageFormula": {
            "type": "string",
            "description": "사용량 계산식"
          },
          "deliveryCode": {
            "type": "string",
            "description": "배송코드(매핑값)"
          },
          "histories": {
            "type": "array",
            "description": "CS기록",
            "items": {
              "$ref": "#/components/schemas/CSItemDTO"
            }
          },
          "minimumQuantity": {
            "type": "integer",
            "description": "최소 구매 가능 수량",
            "format": "int32"
          },
          "maximumQuantity": {
            "type": "integer",
            "description": "최대 구매 가능 수량",
            "format": "int32"
          },
          "parentOrderItemCode": {
            "type": "string",
            "description": "파생 주문 아이템의 부모(번들) 주문 아이템 코드"
          },
          "unitChangeHistory": {
            "type": "array",
            "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)",
            "items": {
              "$ref": "#/components/schemas/OrderItemUnitChangeHistoryV1DTO"
            }
          },
          "unitCount": {
            "type": "integer",
            "description": "계정 수(계정 수 기반 과금 상품인 경우",
            "format": "int64"
          }
        },
        "description": "주문 항목들"
      },
      "ProductPricedto": {
        "title": "가격 플랜 정보",
        "required": [
          "basicServing",
          "billingDate",
          "bundlePrices",
          "code",
          "enabledFirstSalePrice",
          "firstSalePrice",
          "id",
          "maximumPurchaseQuantity",
          "membershipExpirationDate",
          "onetimeBundlePrice",
          "options",
          "order",
          "price",
          "type",
          "volumes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "가격 플랜 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "가격 플랜 코드"
          },
          "price": {
            "type": "number",
            "description": "가격"
          },
          "unit": {
            "type": "string",
            "description": "단위"
          },
          "planName": {
            "type": "string",
            "description": "플랜명",
            "deprecated": true
          },
          "planDescription": {
            "type": "string",
            "description": "플랜 설명",
            "deprecated": true
          },
          "type": {
            "type": "string",
            "description": "플랜 타입",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "enabledFirstSalePrice": {
            "type": "boolean",
            "description": "첫 구매 할인 적용 여부",
            "deprecated": true
          },
          "firstSalePrice": {
            "type": "integer",
            "description": "첫 구매 할인시 적용되는 할인 금액",
            "format": "int64",
            "deprecated": true
          },
          "claimMethodType": {
            "type": "string",
            "description": "선불인지 후불인지 여부",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "whenToClaimType": {
            "type": "string",
            "description": "후불인 경우, 언제 결제되는지",
            "enum": [
              "FIRST_PAYMENT",
              "DATE"
            ]
          },
          "billingDate": {
            "type": "integer",
            "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "description": "최대 구매가능 수량",
            "format": "int32"
          },
          "membershipExpirationDate": {
            "type": "integer",
            "description": "구독 만기 기간",
            "format": "int32"
          },
          "membershipExpirationDateType": {
            "type": "string",
            "description": "구독 만기 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "setupOption": {
            "$ref": "#/components/schemas/PriceSetupOptionDTO"
          },
          "options": {
            "type": "array",
            "description": "옵션 정보",
            "items": {
              "$ref": "#/components/schemas/PriceOptionDTO"
            }
          },
          "volumes": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/PriceVolumeDTO"
            }
          },
          "additionalBilling": {
            "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
          },
          "recurring": {
            "$ref": "#/components/schemas/PriceRecurringDTO"
          },
          "createdAt": {
            "type": "string",
            "description": "생성된 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정된 시점",
            "format": "date-time"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "firstSale": {
            "$ref": "#/components/schemas/FirstSale"
          },
          "claim": {
            "$ref": "#/components/schemas/Claim"
          },
          "basicServing": {
            "type": "integer",
            "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
            "format": "int32"
          },
          "bundlePrices": {
            "type": "array",
            "description": "번들 플랜 - 번들 상품 구성",
            "items": {
              "$ref": "#/components/schemas/PriceBundleDTO"
            }
          },
          "onetimeBundlePrice": {
            "type": "number",
            "description": "번들 플랜 - 단건 상품 금액"
          },
          "order": {
            "type": "integer",
            "description": "우선 순위",
            "format": "int32"
          }
        },
        "description": "가격 플랜 정보"
      },
      "ProductProductdto": {
        "title": "상품 상세 정보",
        "required": [
          "categories",
          "code",
          "combinedProducts",
          "createdAt",
          "demoPeriod",
          "demoPeriodUnit",
          "enabledDemo",
          "eventBadge",
          "id",
          "isOnetimePurchasable",
          "optionCombinations",
          "optionGroups",
          "prices",
          "productOrder",
          "status",
          "useCombination",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "상품 아이디",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "상품 코드"
          },
          "type": {
            "type": "string",
            "description": "상품 타입",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "status": {
            "type": "string",
            "description": "상품 상태",
            "enum": [
              "SALE",
              "OUT_OF_STOCK",
              "UNSOLD",
              "WAITING_APPROVAL",
              "REJECTED"
            ]
          },
          "name": {
            "type": "string",
            "description": "상품 이름"
          },
          "subTitle": {
            "type": "string",
            "description": "부제목"
          },
          "featuredImageUrl": {
            "type": "string",
            "description": "상품 대표 이미지 URL"
          },
          "imageUrls": {
            "type": "array",
            "description": "상품 이미지 URL",
            "items": {
              "type": "string",
              "description": "상품 이미지 URL"
            }
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "summary": {
            "type": "string",
            "description": "상품 요약"
          },
          "reasonOfReject": {
            "type": "string",
            "description": "상품 승인 거절 사유"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "quantity": {
            "type": "integer",
            "description": "재고 수량",
            "format": "int32"
          },
          "combinedProducts": {
            "type": "array",
            "description": "번들 상품 정보",
            "items": {
              "$ref": "#/components/schemas/BundleProductDTO"
            }
          },
          "optionGroups": {
            "type": "array",
            "description": "옵션 그룹 정보",
            "items": {
              "$ref": "#/components/schemas/ProductOptionGroupDTO"
            }
          },
          "useCombination": {
            "type": "boolean",
            "description": "조합형 옵션 사용 여부"
          },
          "optionCombinations": {
            "type": "array",
            "description": "옵션 조합",
            "items": {
              "$ref": "#/components/schemas/OptionCombinationDTO"
            }
          },
          "prices": {
            "type": "array",
            "description": "가격 플랜 목록",
            "items": {
              "$ref": "#/components/schemas/ProductPricedto"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "생성 시점",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "description": "수정 시점",
            "format": "date-time"
          },
          "enabledDemo": {
            "type": "boolean",
            "description": "체험기간 활성화 여부"
          },
          "demoPeriod": {
            "type": "integer",
            "description": "체험 기간",
            "format": "int32"
          },
          "demoPeriodUnit": {
            "type": "string",
            "description": "체험 기간 단위",
            "enum": [
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "categories": {
            "type": "array",
            "description": "카테고리",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDTO"
            }
          },
          "vendorUuid": {
            "type": "string",
            "description": "가맹점 UUID",
            "format": "uuid"
          },
          "productOrder": {
            "type": "integer",
            "description": "순서",
            "format": "int32"
          },
          "isOnetimePurchasable": {
            "type": "boolean",
            "description": "활성 구독 제한"
          },
          "eventBadge": {
            "type": "array",
            "description": "이벤트 뱃지",
            "items": {
              "$ref": "#/components/schemas/ProductEventBadge"
            }
          },
          "notice": {
            "type": "string",
            "description": "유의 사항"
          },
          "useWidget": {
            "$ref": "#/components/schemas/ProductWidgetDTO"
          },
          "groupId": {
            "type": "integer",
            "description": "그룹 ID",
            "format": "int64"
          },
          "countrySetting": {
            "$ref": "#/components/schemas/CountrySettingDTO"
          }
        },
        "description": "상품 정보"
      },
      "ProductCustomer": {
        "type": "object",
        "properties": {
          "postalCode": {
            "type": "string"
          }
        }
      },
      "ProductAppstoreordercreaterequestdto": {
        "required": [
          "customerUuid",
          "priceCode",
          "productCode",
          "vendorUuid"
        ],
        "type": "object",
        "properties": {
          "vendorUuid": {
            "type": "string",
            "format": "uuid"
          },
          "customerUuid": {
            "type": "string",
            "format": "uuid"
          },
          "productCode": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          }
        }
      },
      "ProductOrderiteminternaldto": {
        "required": [
          "claimMethodType",
          "code",
          "currency",
          "id",
          "paidAmount",
          "planName",
          "priceType",
          "productName",
          "productType",
          "quantity",
          "selectedProductOptionIds",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "paidAmount": {
            "type": "number"
          },
          "productName": {
            "type": "string"
          },
          "productType": {
            "type": "string",
            "enum": [
              "BOX",
              "SOFTWARE",
              "BUNDLE",
              "INVOICE",
              "DRAFT"
            ]
          },
          "featuredImageUrl": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "onetimeBundlePrice": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "usedCount": {
            "type": "number"
          },
          "additionalBillings": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "minimumQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "parentOrderItemCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "DEPOSIT_WAITING",
              "CANCELLED",
              "PAID",
              "CANCELLATION_REQUEST",
              "CANCELLATION_REQUEST_CANCELLED",
              "CANCELLATION_REQUEST_DENIED",
              "CANCELLATION_REFUNDING",
              "CANCELLATION_REFUNDED",
              "CANCELLATION_REFUNDED_PARTIALLY",
              "ORDER_DELIVERY_PREPARING",
              "ORDER_DELIVERY_SUSPENDED",
              "ORDER_DELIVERY_ON_THE_WAY",
              "ORDER_DELIVERY_COMPLETED",
              "EXCHANGE_REQUEST",
              "EXCHANGE_REQUEST_CANCELLED",
              "EXCHANGE_REQUEST_REJECTED",
              "EXCHANGE_COLLECTION_PREPARING",
              "EXCHANGE_COLLECTION_ON_THE_WAY",
              "EXCHANGE_COLLECTION_COMPLETED",
              "EXCHANGE_DELIVERY_PREPARING",
              "EXCHANGE_DELIVERY_ON_THE_WAY",
              "EXCHANGE_DELIVERY_COMPLETED",
              "EXCHANGE_REJECT_DELIVERY_PREPARING",
              "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
              "EXCHANGE_REJECT_DELIVERY_COMPLETED",
              "EXCHANGE_PENDING",
              "EXCHANGE_REJECTED",
              "RETURN_REQUEST",
              "RETURN_REQUEST_CANCELLED",
              "RETURN_REQUEST_REJECTED",
              "RETURN_COLLECTION_PREPARING",
              "RETURN_COLLECTION_ON_THE_WAY",
              "RETURN_COLLECTION_COMPLETED",
              "RETURN_REJECT_DELIVERY_PREPARING",
              "RETURN_REJECT_DELIVERY_ON_THE_WAY",
              "RETURN_REJECT_DELIVERY_COMPLETED",
              "RETURN_PENDING",
              "RETURN_REJECTED",
              "RETURN_REFUNDING",
              "RETURN_REFUNDED",
              "RETURN_REFUNDED_PARTIALLY",
              "PAYMENT_FAILURE",
              "FINISHED_EXCHANGE_AVAILABLE",
              "FINISHED_RETURN_AVAILABLE",
              "FINISHED_SUCCESSFULLY"
            ]
          },
          "currency": {
            "type": "string"
          },
          "priceCode": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "selectedProductOptionLabel": {
            "type": "string"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "canceledDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "discountName": {
            "type": "string"
          },
          "relatedOrderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "priceSetupType": {
            "type": "string",
            "enum": [
              "INITIALLY",
              "PERIODIC"
            ]
          },
          "demoCycle": {
            "$ref": "#/components/schemas/DemoCycleDTO"
          }
        }
      },
      "ProductSubscriptioniteminternalresponsedto": {
        "required": [
          "id",
          "isAdditional",
          "keepWhenRenew",
          "planName",
          "price",
          "priceType",
          "productName",
          "quantity",
          "selectedOptions",
          "selectedProductOptionIds",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SKU",
              "TAX",
              "SHIPPING",
              "DISCOUNT",
              "OFFLINE",
              "FEE",
              "ADDS",
              "INSTANT"
            ]
          },
          "productCode": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productFeaturedImageUrl": {
            "type": "string"
          },
          "planCode": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "ONE_TIME",
              "FLAT",
              "UNIT_BASED",
              "USAGE_BASED",
              "VOLUME_BASED",
              "BUNDLE"
            ]
          },
          "parentSubscriptionItemCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "optionName": {
            "type": "string"
          },
          "additionalBillings": {
            "type": "string"
          },
          "usedCount": {
            "type": "integer",
            "format": "int64"
          },
          "selectedProductOptionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "isAdditional": {
            "type": "boolean"
          },
          "keepWhenRenew": {
            "type": "boolean"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "priceCode": {
            "type": "string"
          },
          "claimMethodType": {
            "type": "string",
            "enum": [
              "PRE",
              "POST"
            ]
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "BaseUrlResponseDTO": {
        "required": [
          "active",
          "default",
          "id",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "url": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "BusinessInfoDTO": {
        "required": [
          "businessType"
        ],
        "type": "object",
        "properties": {
          "businessType": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "SELF_EMPLOYED",
              "CORPORATION"
            ]
          },
          "businessName": {
            "type": "string"
          },
          "personName": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "mailOrderNumber": {
            "type": "string"
          },
          "tel": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          }
        }
      },
      "CustomFieldResponseDTO": {
        "required": [
          "active",
          "key",
          "name",
          "order",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "EMAIL",
              "PASSWORD",
              "PHONE",
              "CHECKBOX",
              "DROPDOWN",
              "CALENDAR",
              "NUMBER",
              "COMMENT"
            ]
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "required": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "values": {
            "type": "string"
          }
        }
      },
      "CustomerServiceInfoDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "tel": {
            "type": "string"
          },
          "businessHours": {
            "type": "string"
          }
        }
      },
      "FormSettingsDTO": {
        "required": [
          "emailAsUsername",
          "verifyEmail"
        ],
        "type": "object",
        "properties": {
          "emailAsUsername": {
            "type": "boolean"
          },
          "verifyEmail": {
            "type": "boolean"
          }
        }
      },
      "SocialLinkResponseDTO": {
        "required": [
          "link",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "INSTAGRAM",
              "FACEBOOK",
              "NAVER",
              "TWITTER",
              "YOUTUBE"
            ]
          },
          "link": {
            "type": "string"
          }
        }
      },
      "StoreResponseDTO": {
        "required": [
          "authServerUrl",
          "baseUrls",
          "customFields",
          "faviconUrl",
          "formSettings",
          "id",
          "keyColor",
          "logoUrl",
          "name",
          "openidConfigurationUrl",
          "realmId",
          "socialLinks",
          "status",
          "subdomain",
          "terms1",
          "terms2",
          "terms3",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "realmId": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "escrowType": {
            "type": "string",
            "enum": [
              "KG",
              "NICE",
              "TOSS",
              "KB",
              "NH",
              "IBK"
            ]
          },
          "escrowLink": {
            "type": "string"
          },
          "headHtml": {
            "type": "string"
          },
          "bodyHtml": {
            "type": "string"
          },
          "storeOperationType": {
            "type": "string",
            "enum": [
              "STANDALONE",
              "ENTERED"
            ]
          },
          "keyColor": {
            "type": "string"
          },
          "faviconUrl": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "tel": {
            "type": "string"
          },
          "businessHours": {
            "type": "string"
          },
          "formSettings": {
            "$ref": "#/components/schemas/FormSettingsDTO"
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "STOP"
            ]
          },
          "terms1": {
            "type": "boolean"
          },
          "terms2": {
            "type": "boolean"
          },
          "terms3": {
            "type": "boolean"
          },
          "businessInfo": {
            "$ref": "#/components/schemas/BusinessInfoDTO"
          },
          "csInfo": {
            "$ref": "#/components/schemas/CustomerServiceInfoDTO"
          },
          "baseUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseUrlResponseDTO"
            }
          },
          "socialLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLinkResponseDTO"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldResponseDTO"
            }
          },
          "authServerUrl": {
            "type": "string"
          },
          "openidConfigurationUrl": {
            "type": "string"
          }
        }
      },
      "StoreCreateRequestDTO": {
        "required": [
          "name",
          "realmId",
          "subdomain",
          "terms1",
          "terms2",
          "terms3",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "realmId": {
            "type": "string"
          },
          "subdomain": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "storeOperationType": {
            "type": "string",
            "enum": [
              "STANDALONE",
              "ENTERED"
            ]
          },
          "keyColor": {
            "type": "string"
          },
          "faviconUrl": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "tel": {
            "type": "string"
          },
          "businessHours": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "STOP"
            ]
          },
          "terms1": {
            "type": "boolean"
          },
          "terms2": {
            "type": "boolean"
          },
          "terms3": {
            "type": "boolean"
          },
          "businessInfo": {
            "$ref": "#/components/schemas/BusinessInfoDTO"
          },
          "csInfo": {
            "$ref": "#/components/schemas/CustomerServiceInfoDTO"
          }
        }
      },
      "StoreErrorresponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      },
      "BulkAggregatedUsageRecordRequestDTO": {
        "required": [
          "endDate",
          "startDate",
          "subscriptionItemId"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InternalUsageDTO": {
        "required": [
          "accumulatedRecord",
          "items",
          "subscriptionId",
          "subscriptionItemId",
          "usageId"
        ],
        "type": "object",
        "properties": {
          "usageId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionId": {
            "type": "integer",
            "format": "int64"
          },
          "subscriptionItemId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalUsageRecordQuotaDTO"
            }
          },
          "accumulatedQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulatedRecord": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InternalUsageRecordQuotaDTO": {
        "required": [
          "accumulateRecord",
          "deltaQuota",
          "deltaRecord",
          "id",
          "influxDate",
          "via"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "deltaQuota": {
            "type": "integer",
            "format": "int64"
          },
          "deltaRecord": {
            "type": "integer",
            "format": "int64"
          },
          "influxDate": {
            "type": "string",
            "format": "date-time"
          },
          "accumulateQuota": {
            "type": "integer",
            "format": "int64"
          },
          "accumulateRecord": {
            "type": "integer",
            "format": "int64"
          },
          "via": {
            "type": "string",
            "enum": [
              "MANAGER",
              "V1",
              "RENEW",
              "CUSTOMER",
              "SYSTEM"
            ]
          }
        }
      },
      "Usage_recordErrorresponse": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/ReturnError"
          }
        }
      }
    }
  },
  "x-internal": true
}