{
    "openapi": "3.0.1",
    "info": {
        "title": "all",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.steppay.kr",
            "description": "Generated server url"
        }
    ],
    "paths": {
        "/api/v1/customers/{id}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "summary": "고객 수정",
                "description": "고객 정보를 수정할 때 호출합니다. 파라미터로 전달된 정보로 고객 정보가 치환됩니다.",
                "operationId": "all_updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "수정할 고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "파라미터 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "수정할 고객 정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "고객 삭제",
                "description": "고객 정보를 삭제할 때 호출합니다.",
                "operationId": "all_deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "삭제할 고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 삭제됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "파라미터 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "삭제할 고객 정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "고객 상세 조회",
                "description": "고객 상세정보를 반환합니다.",
                "operationId": "all_getCustomerDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/vendors/invite/{code}/validate": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_validateVendorInvitationCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/verify-phone/{phone}/vendors/{vendorUuid}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_generateVerifyCode",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/reset-password/email/{email}/realms/{realmUuid}/code/{code}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_resetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getVendorDetail",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_updateVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_deleteVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/webhooks": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getWebhookList",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebhookDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_upsertWebhook",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/settings": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_updateVendorSettgins",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorSettingsUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorSettingsDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/child/{childVendorUuid}/enable": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_enableChildVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "childVendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/child/{childVendorUuid}/disable": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_disableChildVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "childVendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/apps/products/{productCode}/prices/{priceCode}/uninstall": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_uninstallApp",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/apps/products/{productCode}/prices/{priceCode}/install": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_installApp",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/terms": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getTerms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorTermsDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_upsetTerms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorTermsUpdateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorTermsDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/delivery-settings": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getDeliverySettings_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_upsetDeliverySetting",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryChargeUpdateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/managers/me": {
            "get": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_getManagerInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_updateManagerInfo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerModifyRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/{id}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_updateCustomer_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerModifyRequestCustomerDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_deleteCustomer_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerDetail_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "X-Forwarded-For",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/{id}/recipients": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_addAdditionalRecipients",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/vendors/{vendorUuid}": {
            "put": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_updateVendor_1",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/delivery": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getDeliverySetting",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "managerUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_updateDeliverySetting",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "managerUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryChargeUpdateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/dormant": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_batchProcessOnDormantCustomers",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/realms/{realmUuid}/clients/{clientId}/redirect-uris": {
            "put": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_addRedirectUris",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/customers": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_updateCustomer_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerModifyRequestCustomerDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_deleteCustomer_3",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_findOneByUuid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/customers/activate": {
            "put": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_activateCustomer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "고객 생성",
                "description": "고객을 생성할 때 호출합니다.",
                "operationId": "all_createCustomer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountCustomercreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "파라미터 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "고객 목록 조회",
                "description": "고객 목록을 반환합니다. Pagination 형태로 지원됩니다.",
                "operationId": "all_getCustomerList",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "조회 시작 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "조회 끝 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "페이지 번호(기본값: 0)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "페이지 크기(기본값: 20)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "정렬 기준값 - 기본값: 생성 시점",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "검색 키워드 - 이름과 이메일에서 검색됩니다.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerListPageDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/accounts/sm/settings": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "operationId": "all_getSetting",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "accounts"
                ],
                "operationId": "all_updateSetting",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/vendors/invite/{code}": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_createVendorByInvitationCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChildVendorCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/session/{sessionId}": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getTokenBySessionId",
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerAccessTokenDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/reset-password/email/{email}/realms/{realmUuid}/vendors/{vendorUuid}": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_sendPasswordResetLink",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/realms/{realm}/vendors/{vendorUuid}": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_signup",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerSignupRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_vendorList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_vendorCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/survey": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_survey",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorSurveyDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/seed": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_bulbasaur",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SeedRequestDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/invite": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getVendorInvitations",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "ACCEPTED"
                            ]
                        }
                    },
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVendorInvitationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_createVendorInvitation",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorInvitationCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorInvitationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/invite/{id}/email/{email}": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_sendInvitationEvent",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/clear": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_clear",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "PG",
                                        "CUSTOMER",
                                        "PRODUCT",
                                        "SUBSCRIPTION"
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/child": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getChildVendors",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/VendorQueryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageVendorListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_addChildVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChildVendorCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/sm/settings/{vendorUuid}": {
            "get": {
                "tags": [
                    "sm"
                ],
                "operationId": "all_getSetting_1",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sm"
                ],
                "operationId": "all_updateSetting_1",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/realms/{realmUuid}/idps": {
            "get": {
                "tags": [
                    "realms"
                ],
                "operationId": "all_findIdp",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdpResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "realms"
                ],
                "operationId": "all_saveOrUpdateIdp",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IdpRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/managers": {
            "get": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_managerList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManagerDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_managerCreate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/managers/reset-password": {
            "post": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_resetPassword_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChangeRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_createCustomer_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerList_1",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-Forwarded-For",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCustomerListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/{id}/reset-password": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_sendResetPassword",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/xlsx": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_createCustomersByExcel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCustomersByExcelResultDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/phone": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerOrCreateCustomerIfNotExistByPhone",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/bulk": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_createCustomers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CustomerCreateRequestDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/appstore/vendors/{vendorUuid}/products/{productCode}": {
            "post": {
                "tags": [
                    "appstore"
                ],
                "operationId": "all_addAutoInstallApp",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/appstore/vendors/{vendorUuid}/orders": {
            "post": {
                "tags": [
                    "appstore"
                ],
                "operationId": "all_createOrder",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAppstoreordercreaterequestdto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderInternalResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/vendors": {
            "post": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_createVendor",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/vendor/{vendorUuid}/appstore": {
            "post": {
                "tags": [
                    "vendor"
                ],
                "operationId": "all_createAppstoreCustomer",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/vendors": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "all_createVendor_1",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/realms": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "all_createRealm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRealmRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/realms/{realm}/idps": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "all_getIdentityProviders",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityProviderDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "all_addIdentityProvider",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProviderDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/clients/{realmUuid}": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "all_save",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/auth/certs/{realmUuid}": {
            "post": {
                "tags": [
                    "test"
                ],
                "operationId": "all_saveCerts",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertsEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/migrate/vendor": {
            "post": {
                "tags": [
                    "migrate"
                ],
                "operationId": "all_createVendor_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalVendorCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/resetPassword/{realmUuid}": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_setPasswordToInitial",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/realms/{realm}/vendors/{vendor}": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_createInternalCustomer",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendor",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/command": {
            "post": {
                "tags": [
                    "command"
                ],
                "operationId": "all_handler",
                "parameters": [
                    {
                        "name": "CommandBus-Routing-Key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CommandBus-Type-Id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/appstore/webhook": {
            "post": {
                "tags": [
                    "appstore"
                ],
                "operationId": "all_handleSubscriptionWebhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppstoreSubscriptionWebhookDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/customers/{username}/reset-password": {
            "post": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_resetPassword_2",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChangeRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/vendors": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getVendor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorInfoDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/session/{customerId}": {
            "get": {
                "tags": [
                    "session"
                ],
                "summary": "세션 생성",
                "description": "고객 연동을 위한 세션을 생성합니다. 세션 연동을 위한 키를 리턴합니다.",
                "operationId": "all_getSession",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "세션 생성됨. 생성된 세션 키를 리턴함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/accounts/{vendorUuid}/setting": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "operationId": "all_getPaymentFieldList",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentFieldDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/vendors/{vendorUuid}": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getVendorInfo",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorInfoDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/vendors/{vendorUuid}/contact/redirect": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getContactUrl",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stepbuilder/templates": {
            "get": {
                "tags": [
                    "stepbuilder"
                ],
                "operationId": "all_getDudaTemplates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JsonNode"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stepbuilder/permissions/{vendorUuid}": {
            "get": {
                "tags": [
                    "stepbuilder"
                ],
                "operationId": "all_getDudaPermissions",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "FREE",
                                        "BASIC",
                                        "PREMIUM",
                                        "MANUAL",
                                        "NONE"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stepbuilder/directLogin/start": {
            "get": {
                "tags": [
                    "stepbuilder"
                ],
                "operationId": "all_directLoginStart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stepbuilder/directLogin/redirect": {
            "get": {
                "tags": [
                    "stepbuilder"
                ],
                "operationId": "all_directLogin",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/settings/{vendorUuid}/delivery-settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "operationId": "all_getDeliverySettings",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/realms/{realm}/username/{username}/verify": {
            "get": {
                "tags": [
                    "realms"
                ],
                "operationId": "all_verifyUsername",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/realms/{realmUuid}/idps": {
            "get": {
                "tags": [
                    "realms"
                ],
                "operationId": "all_findIdps",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/verify-phone/{phone}/code/{code}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_verifyCode",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/reset-password/email/{email}/realms/{realmUuid}/code/{code}/validate": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_validateResetPasswordCode",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/customers/find-username/phone/{phone}/realms/{realmUuid}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_findUsernameByPhone",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/apps": {
            "get": {
                "tags": [
                    "apps"
                ],
                "operationId": "all_getApp",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SteppayAppDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/webhooks/{key}": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getWebhookOne",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_deleteWebhook",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/stepbuilder/status": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_status",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StepbuilderStatusResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/stepbuilder/loginUrl": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_stepbuilderLoginUrl",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DASHBOARD",
                                "STATS",
                                "EDITOR",
                                "RESET_SITE"
                            ],
                            "default": "EDITOR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/stepbuilder/loginAction": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_stepbuilderLoginAction",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DASHBOARD",
                                "STATS",
                                "EDITOR",
                                "RESET_SITE"
                            ],
                            "default": "EDITOR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/child/{childUuid}": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getChildVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "childUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/VendorQueryDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/managers/{managerUuid}": {
            "get": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_managerDetail",
                "parameters": [
                    {
                        "name": "managerUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManagerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "managers"
                ],
                "operationId": "all_managerRemove",
                "parameters": [
                    {
                        "name": "managerUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/appstore/vendors/{vendorUuid}/orders/{orderCode}": {
            "get": {
                "tags": [
                    "appstore"
                ],
                "operationId": "all_getOrder",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderInternalResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/appstore/vendors/{vendorUuid}/apps": {
            "get": {
                "tags": [
                    "appstore"
                ],
                "operationId": "all_getVendorApps",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorAppDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/webhook/{vendorUuid}": {
            "get": {
                "tags": [
                    "webhook"
                ],
                "operationId": "all_getWebhookKeyValues",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/vendor/{vendorUuid}": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "operationId": "all_getVendorInfo_1",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorInfoDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/vendor/{vendorUuid}/cover": {
            "get": {
                "tags": [
                    "vendor"
                ],
                "operationId": "all_getVendorForCover",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorForCoverDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/tls-check": {
            "get": {
                "tags": [
                    "tls-check"
                ],
                "operationId": "all_tlsCheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/realms/{realm}": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "all_getRealmInfo",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealmRepresentation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/auth/hello": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "all_hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/auth/codes/{code}": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "all_findCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthorizationCodeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/{uuid}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomer",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_deleteCustomer_2",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/realms/{realm}/username/{username}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomer_1",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/vendors/{vendorUuid}/permissions/{permission}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_verifyPermission",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "permission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/vendor/{vendorUuid}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getVendorInfo_2",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorInfoDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/settings": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getSetting_2",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/secretToken/{secretToken}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getVendorDetailFromSecretToken",
                "parameters": [
                    {
                        "name": "secretToken",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/realms": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getRealms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RealmDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/realms/{realmUuid}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getRealms_1",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealmDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/auth/payment-key/{paymentKey}": {
            "get": {
                "tags": [
                    "auth"
                ],
                "operationId": "all_getVendorDetailFromPaymentKey",
                "parameters": [
                    {
                        "name": "paymentKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/sm/settings/{vendorUuid}": {
            "get": {
                "tags": [
                    "sm"
                ],
                "operationId": "all_getSetting_3",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionManagerSettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/vendors": {
            "get": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_getVendors",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/realms/{realmUuid}": {
            "get": {
                "tags": [
                    "realms"
                ],
                "operationId": "all_getRealms_2",
                "parameters": [
                    {
                        "name": "realmUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealmDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/invite/{id}": {
            "delete": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_deleteVendorInvitation",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/vendors/{vendorUuid}/child/{childVendorUuid}": {
            "delete": {
                "tags": [
                    "vendors"
                ],
                "operationId": "all_deleteChildVendor",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "childVendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/realms/{realm}/idps/{providerId}": {
            "delete": {
                "tags": [
                    "test"
                ],
                "operationId": "all_removeIdentityProvider",
                "parameters": [
                    {
                        "name": "realm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/webhooks/{code}": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 상세 조회",
                "operationId": "all_getWebhookDetail",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "웹훅 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 이벤트 수정",
                "operationId": "all_updateEventTypes",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "웹훅 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "웹훅 이벤트 수정 DTO",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEventTypes"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 삭제",
                "operationId": "all_deleteWebhook_2",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "웹훅 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/manager/notification/{code}": {
            "get": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_getNotification",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_updateNotification",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseNotificationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_deleteNotification",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/webhooks": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 목록 조회",
                "operationId": "all_getWebhookList_2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageListItem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 생성",
                "operationId": "all_createWebhook",
                "requestBody": {
                    "description": "웹훅 생성 DTO",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Create"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Detail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/webhooks/retry/{webhookRecordId}": {
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 이벤트 재시도",
                "operationId": "all_retryWebhook",
                "parameters": [
                    {
                        "name": "webhookRecordId",
                        "in": "path",
                        "description": "웹훅 전송 내역 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/manager/notification": {
            "get": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_getNotificationList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_createNotification",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseNotificationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/notification/slack/workspaces/{workspaceId}/uplink": {
            "post": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_notificationSlackUnlink",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/webhooks/{code}/records": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 전송 내역 조회",
                "operationId": "all_getWebhookRecords",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "웹훅 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecordDetail"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/webhooks/events": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "웹훅 이벤트 목록 조회",
                "operationId": "all_getEvents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/notification/slack/workspaces": {
            "get": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_getSlackWorkspace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackInfoDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/notification/slack/workspaces/{workspaceId}/channels": {
            "get": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_getSlackChannels",
                "parameters": [
                    {
                        "name": "workspaceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlackChannelListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/notification/events": {
            "get": {
                "tags": [
                    "notification"
                ],
                "operationId": "all_getAllEventTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/url-pay/nice-cms/{idKey}": {
            "put": {
                "tags": [
                    "url-pay"
                ],
                "operationId": "all_handleUpdateNiceCMS",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "data",
                                    "nice-cms-agree-file"
                                ],
                                "type": "object",
                                "properties": {
                                    "nice-cms-agree-file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/CMSUpdateDTO"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "data",
                                    "nice-cms-agree-file"
                                ],
                                "type": "object",
                                "properties": {
                                    "nice-cms-agree-file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/CMSUpdateDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/pgs": {
            "get": {
                "tags": [
                    "pgs"
                ],
                "operationId": "all_getPaymentGatewayList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaygateInfoDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pgs"
                ],
                "operationId": "all_upsertPaymentGateways",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PaygateInfoDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payments/{idKey}/nice-cms-pay/status": {
            "put": {
                "tags": [
                    "payments"
                ],
                "operationId": "all_updateCMSPayStatus",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payment-views/{viewId}": {
            "get": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_getPaymentView",
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_updatePaymentView",
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentViewUpdateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_deletePaymentView",
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payment-views/{viewId}/in-use": {
            "put": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_updatePaymentViewInUse",
                "parameters": [
                    {
                        "name": "viewId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentViewUpdateInUseRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/refreshupdemodata": {
            "put": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_refreshUpDemoData",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/refreshdowndemodata": {
            "put": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_refreshDownDemoData",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/url-pay/one-click-link": {
            "post": {
                "tags": [
                    "url-pay"
                ],
                "operationId": "all_oneClickLink",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/url-pay/nice-cms": {
            "post": {
                "tags": [
                    "url-pay"
                ],
                "operationId": "all_handleNiceCMS",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "data",
                                    "nice-cms-agree-file"
                                ],
                                "type": "object",
                                "properties": {
                                    "nice-cms-agree-file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/CMSCreateDTO"
                                    }
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "data",
                                    "nice-cms-agree-file"
                                ],
                                "type": "object",
                                "properties": {
                                    "nice-cms-agree-file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/CMSCreateDTO"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/url-pay/generate-link": {
            "post": {
                "tags": [
                    "url-pay"
                ],
                "operationId": "all_generateLink",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayLinkDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/url-pay/card-payment": {
            "post": {
                "tags": [
                    "url-pay"
                ],
                "operationId": "all_cardPayment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardPaymentDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payments/{idKey}/cancel": {
            "post": {
                "tags": [
                    "payments"
                ],
                "operationId": "all_cancel",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payment-views": {
            "get": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_getPaymentViewList",
                "parameters": [
                    {
                        "name": "viewType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isUsed",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_createPaymentView",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentViewCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/transfer": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_transfer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HPayRealTimePayDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/receiptUrls": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_getReceiptUrlsByIdKeys",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReceiptUrlsRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/ReceiptUrlsResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/nice-batch-send-pay": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_sendPay",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/nice-batch-send-mem": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_agreeOkAndErr",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/nice-batch-send-agree": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_sendAgree",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/nice-batch-recv-pay": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_handlePAY",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/nice-batch-recv-mem": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_handleMEM",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/issue-bill-key": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_issueBillKey",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayLinkDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/generate-link": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_generatePayRequestLink",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayLinkDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/generate-link/appstore": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_generateAppstorePayRequestLink",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayLinkDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/cancel": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_cancelPayment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseCancelResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/billing": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_billing",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBillingDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/billing/sync": {
            "post": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_billingSync",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBillingDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/payment/nice-cms/banks": {
            "get": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_getNICECMSBankCode",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "KDB",
                                            "IBK",
                                            "KB",
                                            "KEB",
                                            "SH",
                                            "NH",
                                            "WOORI",
                                            "SC",
                                            "HANMI",
                                            "DGB",
                                            "BNK_BS",
                                            "KJB",
                                            "JEJU",
                                            "JB",
                                            "BNK_KN",
                                            "MG",
                                            "CREDIT_UNION",
                                            "POST",
                                            "HANA",
                                            "SHINHAN_UNIFIED",
                                            "KBANK",
                                            "KAKAO_BANK",
                                            "TOSS_BANK"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payments": {
            "get": {
                "tags": [
                    "payments"
                ],
                "operationId": "all_getPaymentList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PaymentPageRequestDTO"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Filter"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ONE_SHOT",
                                    "SUBSCRIBE"
                                ]
                            }
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "STANDBY",
                                    "COMPLETE",
                                    "CANCELED",
                                    "PARTIAL_CANCELED",
                                    "USER_CANCELED",
                                    "CANCELED_FAIL",
                                    "CANCEL_PROGRESS",
                                    "FAILED",
                                    "VIRTUAL_BANK_STANDBY",
                                    "CMS_STANDBY"
                                ]
                            }
                        }
                    },
                    {
                        "name": "paymentGateway",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "NAVER",
                                    "DANAL",
                                    "KAKAO",
                                    "KG",
                                    "KCP",
                                    "NICE",
                                    "JT",
                                    "GOOGLE",
                                    "BANKPAY",
                                    "BLUEWALNUT",
                                    "KSNET",
                                    "TOSS",
                                    "EXIMBAY",
                                    "SETTLE",
                                    "DAOUDATA",
                                    "WELCOME",
                                    "NICE_V2",
                                    "STRIPE",
                                    "PAYPLE",
                                    "PAYPLE_GLOBAL",
                                    "KICC",
                                    "UNKNOWN"
                                ]
                            }
                        }
                    },
                    {
                        "name": "paymentMethod",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CARD",
                                    "VBANK",
                                    "BANK",
                                    "CELLPHONE",
                                    "SIMPLE_PAY",
                                    "CMS",
                                    "CARD_BILL",
                                    "CELLPHONE_BILL",
                                    "CMS_BILL"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageResponseList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/payments/xls/download": {
            "get": {
                "tags": [
                    "payments"
                ],
                "operationId": "all_downloadXlsFile",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PaymentRequestlistwithfilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/{vendorUuid}": {
            "get": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_getPaymentGatewayList_1",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentEnabledpaymentgatewaydto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/receipt/{idKey}": {
            "get": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_getReceiptData",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/payment/payment/{paymentId}": {
            "get": {
                "tags": [
                    "payment"
                ],
                "operationId": "all_getPayment",
                "parameters": [
                    {
                        "name": "paymentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalPaymentDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/payment-views": {
            "get": {
                "tags": [
                    "payment-views"
                ],
                "operationId": "all_getPaymentViewList_1",
                "parameters": [
                    {
                        "name": "vendorUUID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentViewResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/pgs/{paymentGateway}/{paymentMethod}": {
            "delete": {
                "tags": [
                    "pgs"
                ],
                "operationId": "all_deletePaymentGateway",
                "parameters": [
                    {
                        "name": "paymentGateway",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NAVER",
                                "DANAL",
                                "KAKAO",
                                "KG",
                                "KCP",
                                "NICE",
                                "JT",
                                "GOOGLE",
                                "BANKPAY",
                                "BLUEWALNUT",
                                "KSNET",
                                "TOSS",
                                "EXIMBAY",
                                "SETTLE",
                                "DAOUDATA",
                                "WELCOME",
                                "NICE_V2",
                                "STRIPE",
                                "PAYPLE",
                                "PAYPLE_GLOBAL",
                                "KICC",
                                "UNKNOWN"
                            ]
                        }
                    },
                    {
                        "name": "paymentMethod",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CARD",
                                "VBANK",
                                "BANK",
                                "CELLPHONE",
                                "SIMPLE_PAY",
                                "CMS",
                                "CARD_BILL",
                                "CELLPHONE_BILL",
                                "CMS_BILL"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/payment": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateOrderByPayment_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateOrderByPayment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InternalWebHookRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/payment-method": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "결제수단 변경",
                "description": "구독의 결제수단을 변경할 때 호출합니다. 변경을 위한 주문이 생성됩니다.",
                "operationId": "all_changePaymentMethod",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangePaymentMethodDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 주문이 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/items": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목 교체",
                "description": "구독 항목을 파라미터로 전달한 데이터로 교체합니다.",
                "operationId": "all_replaceSubscriptionItems",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "description": "교체할 구독 항목 정보",
                                "items": {
                                    "$ref": "#/components/schemas/SubscriptionItemReplaceDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 교체됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "구독 항목 교체 정보 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목 추가",
                "description": "구독 항목을 추가할 때 호출합니다.",
                "operationId": "all_addSubscriptionItem",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 추가됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "구독 항목 생성 정보 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독 또는 구독 항목을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/items/{itemId}": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목 수정",
                "description": "특정 구독 항목을 수정할 때 사용합니다.",
                "operationId": "all_updateSubscriptionItem",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "구독 항목 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionItemChangeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "구독 항목 수정 정보 검증 실패"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독 또는 구독 항목을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목 삭제",
                "description": "구독 항목을 삭제할 때 호출합니다.",
                "operationId": "all_removeSubscriptionItem",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "구독 항목 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 삭제됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독 또는 구독 항목을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/interval": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 주기 변경",
                "description": "구독 주기를 변경합니다.",
                "operationId": "all_changeSubscriptionRecurring",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangeRecurringDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "put": {
                "tags": [
                    "products"
                ],
                "summary": "상품 수정",
                "description": "상품을 수정할 때 호출합니다. 파라미터로 전달된 정보로 가격플랜 정보가 치환됩니다.",
                "operationId": "all_updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "summary": "상품 삭제",
                "description": "상품을 삭제할 때 호출합니다.",
                "operationId": "all_deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 삭제됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/product_order": {
            "put": {
                "tags": [
                    "products"
                ],
                "operationId": "all_updateProductOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "product_order",
                        "in": "query",
                        "description": "상품 순서 수정",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/prices/{priceId}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "가격플랜 상세 조회",
                "description": "가격플랜의 상세 정보를 반환합니다.",
                "operationId": "all_getProductPrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "priceId",
                        "in": "path",
                        "description": "가격 플랜 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPricedto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품 또는 가격플랜을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "products"
                ],
                "summary": "가격플랜 수정",
                "description": "가격플랜을 수정할 때 호출합니다. 파라미터로 전달된 정보로 가격플랜 정보가 치환됩니다. 연관 주문이 존재한다면 이름과 설명만 수정됩니다.",
                "operationId": "all_updateProductPrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "priceId",
                        "in": "path",
                        "description": "가격플랜 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPricedto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품 또는 가격플랜을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceV1DTO"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "summary": "가격 삭제",
                "description": "가격을 삭제할 때 호출합니다.",
                "operationId": "all_deleteProductPrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "priceId",
                        "in": "path",
                        "description": "가격플랜 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품 또는 가격플랜을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{orderIdOrCode}/retry-payment": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_retryPayment",
                "parameters": [
                    {
                        "name": "orderIdOrCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseBoolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "summary": "청구서 상세 조회",
                "description": "청구서의 상세정보를 반환합니다.",
                "operationId": "all_getInvoiceDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "청구서 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "청구서를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceDTO"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "invoices"
                ],
                "summary": "청구서 수정",
                "description": "청구서를 수정할 때 호출합니다. 파라미터로 전달된 정보로 청구서가 치환됩니다.",
                "operationId": "all_updateInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "청구서 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "temporary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 수정됨"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "청구서를 찾지 못 함"
                    }
                }
            },
            "delete": {
                "tags": [
                    "invoices"
                ],
                "summary": "청구서 삭제",
                "description": "청구서를 삭제할 때 호출합니다.",
                "operationId": "all_deleteInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "청구서 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 삭제됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "청구서를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerId}/payment-method": {
            "put": {
                "tags": [
                    "customers"
                ],
                "summary": "결제수단 변경",
                "description": "결제수단을 변경할 때 사용합니다. 해당 고객의 모든 구독에 대한 결제수단이 변경됩니다. 결제수단을 처리하기 위한 주문이 생성되며, 주문을 결제하면 등록이 완료됩니다.",
                "operationId": "all_changePaymentMethodForAllSubscriptions",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "정상적으로 주문이 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "변경할 고객 정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/logs/{logId}": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_updateSubscriptionLog",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionLogUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_updateSubscriptionLog_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/items/{itemId}": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 상품 변경",
                "operationId": "all_updateSubscriptionItem_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionItemChangeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 상품 제거",
                "operationId": "all_removeSubscriptionItem_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/{quotationId}/logs/{quotationLogId}": {
            "put": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_updateQuotationLog",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "quotationLogId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_deleteQuotationLog",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "quotationLogId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getOne_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "products"
                ],
                "operationId": "all_updateProduct_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "operationId": "all_deleteProduct_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/status": {
            "put": {
                "tags": [
                    "products"
                ],
                "operationId": "all_updateProductStatus",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductStatusUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/prices/{priceCode}": {
            "put": {
                "tags": [
                    "products"
                ],
                "operationId": "all_updateProductPrice_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "operationId": "all_deleteProductPrice_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "priceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/product-categories": {
            "get": {
                "tags": [
                    "product-categories"
                ],
                "operationId": "all_getCategories_1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product-categories"
                ],
                "operationId": "all_upsertCategories",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CategoryUpsertDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/{orderCode}/logs/{logId}": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateOrderLog",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderLogUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_deleteOrderLog",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "logId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/item/productOption": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateSelectedProductOption",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderProductOptionUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/{id}": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_getInvoiceDetail_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_updateInvoice_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "temporary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_deleteInvoice_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/{id}/temporary": {
            "put": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_updateInvoiceTemporary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/info/{deliveryCode}/recipient": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getRecipientInfo",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_updateRecipientInfo",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecipientDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/to/{toStatus}": {
            "put": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_changeStatusToStatus",
                "parameters": [
                    {
                        "name": "toStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECTED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/to/{toStatus}": {
            "put": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_changeStatusToStatus_1",
                "parameters": [
                    {
                        "name": "toStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "RETURN_REQUEST",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/country-settings/{id}": {
            "get": {
                "tags": [
                    "country-settings"
                ],
                "operationId": "all_getCountrySettingDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountrySettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "country-settings"
                ],
                "operationId": "all_updateCountrySetting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountrySettingUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountrySettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "country-settings"
                ],
                "operationId": "all_deleteCountrySetting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/refreshupdemodata": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_refreshUpDemoData_2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/refreshdowndemodata": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_refreshDownDemoData_2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/shipping-list/{customerShippingId}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getShipping",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "customerShippingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingListItemDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_updateShipping",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "customerShippingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingListUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_deleteShipping",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "customerShippingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/payment-method": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_changePaymentMethod_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangePaymentMethodDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/items": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_replaceSubscriptionItems_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SubscriptionItemReplaceDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목 추가",
                "operationId": "all_addSubscriptionItem_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/interval": {
            "put": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_changeSubscriptionRecurring_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangeRecurringDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/{orderCode}/delivery": {
            "put": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateAllItemDelivery",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipping"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/delivery/info/{deliveryCode}/recipient": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getRecipient",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_updateRecipient",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecipientDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecipientDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/carts/item/quantity": {
            "put": {
                "tags": [
                    "carts"
                ],
                "operationId": "all_cartItemQuantity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartItemModifyRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartListCache"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/pause": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 일시 정지",
                "description": "구독을 일시정지 합니다. 활성화 상태의 구독만 일시정지 할 수 있습니다.",
                "operationId": "all_pauseSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionPauseDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 처리됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/change-pay-datetime": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "결제일 변경",
                "description": "다음 결제일을 변경합니다.",
                "operationId": "all_changePayDatetimeSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangePayDatetimeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/cancel": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 취소",
                "description": "구독을 취소합니다. 활성화, 일시정지, 결제실패 상태의 구독만 취소할 수 있습니다.",
                "operationId": "all_cancelSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionCancelDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 처리됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/active": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 활성화",
                "description": "구독을 다시 활성화 시킵니다. 일시정지 및 취소 대기중 상태만 변경가능합니다.",
                "operationId": "all_activeSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "정상적으로 활성화됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{id}/renew": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 갱신 결제",
                "description": "다음 결제일과 상관없이 현재 시점으로 구독을 갱신시킵니다. 결제가 진행되며, 구독 시작, 끝 시점이 갱신됩니다.",
                "operationId": "all_renewSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 갱신됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseSubscriptionManualRenewResultDTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "상품 목록 조회",
                "operationId": "all_getProductList",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "조회 시작 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "조회 끝 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "페이지 번호(기본값: 0)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "페이지 크기(기본값: 20)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "정렬 기준값 - 기본값: 생성 시점",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "검색 키워드. 이름을 검색할 수 있습니다.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "특정 카테고리 아이디에 포함되어 있는 상품 목록을 반환합니다.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "지정한 상태만 목록을 반환하게 합니다.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SALE",
                                "OUT_OF_STOCK",
                                "UNSOLD",
                                "WAITING_APPROVAL",
                                "REJECTED"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListPageDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "상품 생성",
                "description": "상품을 생성할 때 호출합니다.",
                "operationId": "all_createProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductProductcreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/prices": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "가격플랜 목록 조회",
                "description": "특정 상품의 가격플랜 목록을 반환합니다.",
                "operationId": "all_getProductPriceList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PriceV1DTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PriceV1DTO"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "가격플랜 생성",
                "description": "가격플랜을 생성할 때 호출합니다.",
                "operationId": "all_createProductPrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductPricecreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPricedto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 목록 조회",
                "description": "주문 목록을 반환합니다.",
                "operationId": "all_getOrderList",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "조회 시작 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "조회 끝 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "페이지 번호(기본값: 0)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "페이지 크기(기본값: 20)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "정렬 기준값 - 기본값: 생성 시점",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "검색 키워드",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "검색 대상(orderCode, productName, customerName, phone, email)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "지정한 상태만 목록을 반환하게 합니다.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "DEPOSIT_WAITING",
                                "CANCELLED",
                                "PAID",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY",
                                "ORDER_DELIVERY_PREPARING",
                                "ORDER_DELIVERY_SUSPENDED",
                                "ORDER_DELIVERY_ON_THE_WAY",
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING",
                                "EXCHANGE_REJECTED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REJECTED",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY",
                                "PAYMENT_FAILURE",
                                "FINISHED_EXCHANGE_AVAILABLE",
                                "FINISHED_RETURN_AVAILABLE",
                                "FINISHED_SUCCESSFULLY"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderListPageV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 생성",
                "description": "주문을 생성할 때 호출합니다.",
                "operationId": "all_createOrder_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateV1DTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invoices": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "summary": "청구서 목록 조회",
                "description": "청구서 목록을 반환합니다.",
                "operationId": "all_getInvoiceList",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "조회 시작 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "조회 끝 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "페이지 번호(기본값: 0)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "페이지 크기(기본값: 20)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "정렬 기준값 - 기본값: 생성 시점",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "지정한 상태만 목록을 반환하게 합니다.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "임시저장",
                                "발송 예약",
                                "발송",
                                "결제 완료",
                                "미납입",
                                "발송 실패"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceListResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invoices"
                ],
                "summary": "청구서 생성",
                "description": "청구서를 생성할 때 호출합니다.",
                "operationId": "all_createInvoice",
                "parameters": [
                    {
                        "name": "temporary",
                        "in": "query",
                        "description": "임시 저장 여부. 임시 저장은 청구서가 발송되지 않습니다.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "정상적으로 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{id}/payment-method": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "결제수단 등록",
                "description": "결제수단을 등록시킬 때 사용합니다. 결제수단을 처리하기 위한 주문이 생성되며, 주문을 결제하면 등록이 완료됩니다.",
                "operationId": "all_addPaymentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "정상적으로 주문이 생성됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "추가할 고객 정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/orders/idKey/{idKey}/transactions": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_startTransaction",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTransactionDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/pause": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 정지",
                "description": "활성화 상태의 구독만 일시정지 할 수 있습니다.",
                "operationId": "all_pauseSubscription_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionPauseDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/memo": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 메모",
                "operationId": "all_updateSubscriptionMemo",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionMemoDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/logs": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_createSubscriptionLog",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionLogCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/items": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 상품 추가",
                "operationId": "all_addSubscriptionItem_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionItemCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/change-datetime": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "날짜 변경",
                "operationId": "all_changePayDatetimeSubscription_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangeDatetimeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/cancel": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 취소",
                "description": "활성화, 일시정지, 결제실패 상태의 구독만 취소할 수 있습니다.",
                "operationId": "all_cancelSubscription_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionCancelDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/active": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 활성화",
                "description": "일시정지 및 취소 대기중 상태만 변경가능합니다.",
                "operationId": "all_activeSubscription_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{id}/renew": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_renewSubscription_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/{quotationId}/logs": {
            "post": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_createQuotationLog",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/{quotationId}/invoice": {
            "post": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_sendInvoice",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationCreatedDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductList_2",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_createProduct_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductProductcreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "products"
                ],
                "operationId": "all_updateProductStatusOrTypeList",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductStatusOrTypeUpdateDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productId}/link/{addingProductId}": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_linkProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "addingProductId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/prices": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_createProductPrice_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductPricecreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/option-groups": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_createOptionGroup",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/option-groups/{groupId}/options": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_createOption",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductOptionCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/option-groups/{groupId}/options/{optionId}": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_deleteOption",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "optionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/prices": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_createDraftProductWithPrice",
                "parameters": [
                    {
                        "name": "priceType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ONE_TIME",
                                "FLAT",
                                "UNIT_BASED",
                                "USAGE_BASED",
                                "VOLUME_BASED",
                                "BUNDLE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getOrderList_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrderSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderListResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_createOrder_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductOrdercreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/{orderCode}/logs": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_createOrderLog",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderLogCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/mapper": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_priceModuleMapper",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceModuleMappingRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceModuleInputDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_getInvoiceList_1",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/InvoiceSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceListResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_createInvoice_1",
                "parameters": [
                    {
                        "name": "temporary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "X-StepPay-Dry-Run",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "X-StepPay-Dry-Run-Email",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_updateInvoiceStatusList",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvoiceStatusUpdateDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/{id}/send": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_sendInvoiceNow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "X-StepPay-Dry-Run",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "X-StepPay-Dry-Run-Email",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceSendNowDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/{ids}/send-bulk": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_sendInvoiceNowBulk",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceSendNowDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/xlsx": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_createInvoicesByExcel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateInvoicesByExcelResultDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/bulk": {
            "post": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_createInvoice_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/InvoiceCreateWithAdditionalRecipientsDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/country-settings": {
            "get": {
                "tags": [
                    "country-settings"
                ],
                "operationId": "all_getCountrySettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountrySettingDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "country-settings"
                ],
                "operationId": "all_createCountrySetting",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CountrySettingCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountrySettingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions/{vendorUuid}/check-all": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_checkRecordsAddable",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/SubscriptionCheckBulkResultDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/internal/subscriptions/recurring": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_recurringJob",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions/notify_payment": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_notifyPayment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions/items/{subscriptionItemId}/pay": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_payPreClaimQuota",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "X-StepPay-Actor",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MANAGER",
                                "V1",
                                "RENEW",
                                "CUSTOMER",
                                "SYSTEM"
                            ]
                        }
                    },
                    {
                        "name": "X-StepPay-Dry-Run",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreClaimQuotaPaymentRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions/check_excel_records/{vendorUuid}": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_checkExcelRecords",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UsageRecordCheckRequestDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UsageRecordCheckResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/products/migrate": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_optionMigrate",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/products/badge": {
            "post": {
                "tags": [
                    "products"
                ],
                "operationId": "all_deleteEndedBadge",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_createOrderByAppstore",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAppstoreordercreaterequestdto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderInternalResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/send-invoices": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_sendInvoices",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/rollback-transactions": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_rollbackTransactions",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/pos": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_createOfflineOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OfflineOrderCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfflineOrderResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/mapper": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_priceModuleMapper_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PriceModuleMappingRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceModuleInputDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/expire-invoices": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_expireInvoices",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/cms/webhook": {
            "post": {
                "tags": [
                    "cms"
                ],
                "operationId": "all_webhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CmsWebhookPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/shipping-list": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getShippingList",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShippingListItemDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_createShipping",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingListCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/pause": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_pause",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionPauseDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/change-pay-datetime": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_changePayDatetimeSubscription_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionChangePayDatetimeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/cancel": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_cancelSubscription_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/active": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_activeSubscription_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/quotations": {
            "post": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_createQuotation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuotationCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationCreatedDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 리스트 조회",
                "operationId": "all_getOrderList_2",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OrderSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderListCustomerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 생성",
                "operationId": "all_createOrder_2_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductOrdercreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/productCode/{productCode}": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_createOrderAndTransaction",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAndTransactionCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderidkeydto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/payment-method": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_addCustomerPaymentMethod",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/idKey/{idKey}/transactions": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_startTransaction_1",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTransactionDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/customer/webauthn/register": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_authRegisterWebAuthn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebAuthnAuthDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/customer/webauthn/pay": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_authPaymentWebAuthn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebAuthnAuthDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/customer/register": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_registerWebAuthn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebAuthnRegisterDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/card-method": {
            "post": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_addCardMethodInfo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardMethodDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_updateCardMethodInfo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CardMethodDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/carts/add": {
            "post": {
                "tags": [
                    "carts"
                ],
                "operationId": "all_cartAdd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartListCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartListCache"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/subscriptions/{subscriptionId}/manual-renew": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_manualRenew",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GWAdminDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/subscriptions/{subscriptionId}/manual-notify": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_manualNotify",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GWAdminDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/subscriptions/change-subscription-items-price": {
            "post": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_changeSubscriptionItemsPrice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "subscriptionChangePriceAdminDTO": {
                                        "$ref": "#/components/schemas/SubscriptionChangePriceAdminDTO"
                                    },
                                    "gwAdminDTO": {
                                        "$ref": "#/components/schemas/GWAdminDTO"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{id}/status": {
            "patch": {
                "tags": [
                    "products"
                ],
                "summary": "상품 게시 상태 변경",
                "description": "상품 게시 상태를 변경할 때 호출합니다. SALE, OUT_OF_STOCK, UNSOLD 사용 가능",
                "operationId": "all_updateProductStatus_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "상품 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "변경할 상태",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SALE",
                                "OUT_OF_STOCK",
                                "UNSOLD",
                                "WAITING_APPROVAL",
                                "REJECTED"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{orderIdOrCode}/cancel": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 취소",
                "description": "주문을 취소할 때 호출합니다. 결제가 완료된 주문건은 환불되며, 그렇지 않은 주문은 취소됩니다.",
                "operationId": "all_cancelOrder",
                "parameters": [
                    {
                        "name": "orderIdOrCode",
                        "in": "path",
                        "description": "주문 번호",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReqV1"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "정상적으로 취소됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "주문을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/state": {
            "patch": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_changeState",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/QuotationStateChangeDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/{orderCode}/cancel": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_cancelOrder_1",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManagerFullReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/status/paid": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_completeOrders",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/status/{deliveryCode}/to/{toStatus}": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_changeStatusToStatus_2",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toStatus",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PREPARING",
                                "SUSPENDED",
                                "ON_THE_WAY",
                                "COMPLETED"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/status/{deliveryCode}/depart": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_changeStatusToOnTheWay",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryTrackingDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/status/{deliveryCode}/arrive": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_changeStatusToCompleted",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/status/start": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_changeStatusToPreparing",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryBunchCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/info/{deliveryCode}/addItems": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_addItems",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeliveryItemSingle"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/rejectTest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_COLLECTION_COMPLETED -> RETURN_REJECTED",
                "operationId": "all_patchReturnRejectTest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/prepareRejectDelivery": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "-> RETURN_REJECT_DELIVERY_PREPARING",
                "operationId": "all_patchReturnPrepareRejectDelivery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/forceStart": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X_DELIVERY_ -> RETURN_COLLECTION_PREPARING",
                "operationId": "all_patchReturnManualStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/forceRefund": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "-> RETURN_REFUNDING,RETURN_REFUNDED,RETURN_REFUNDED_PARTIALLY",
                "operationId": "all_patchCancellationForce",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CSRefundManagerReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/denyRequest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_REQUEST -> RETURN_REQUEST_REJECTED",
                "operationId": "all_patchReturnDenyRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/defer": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X -> RETURN_PENDING",
                "operationId": "all_patchExchangeDefer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/deferBack": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_PENDING -> X",
                "operationId": "all_patchExchangeDeferBack",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/completeRejectDelivery": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "-> RETURN_REJECT_DELIVERY_COMPLETED",
                "operationId": "all_patchReturnCompleteRejectDelivery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/completeCollection": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_COLLECTION_PREPARING, RETURN_COLLECTION_ON_THE_WAY -> RETURN_COLLECTION_COMPLETED",
                "operationId": "all_patchExchangeCompleteCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/approveTest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_COLLECTION_COMPLETED -> RETURN_REFUNDING,RETURN_REFUNDED,RETURN_REFUNDED_PARTIALLY",
                "operationId": "all_patchReturnApproveTest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CSRefundManagerReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/acceptRequest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_REQUEST -> RETURN_COLLECTION_PREPARING",
                "operationId": "all_patchReturnAcceptRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/rejectTest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_COLLECTION_COMPLETED -> EXCHANGE_REJECTED",
                "operationId": "all_patchExchangeRejectTest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/prepareDelivery": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "-> EXCHANGE_DELIVERY_PREPARING, EXCHANGE_REJECT_DELIVERY_PREPARING",
                "operationId": "all_patchExchangePrepareDelivery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/forceStart": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X_DELIVERY_ -> EXCHANGE_REQUEST",
                "operationId": "all_patchExchangeManualStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/denyRequest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_REQUEST -> EXCHANGE_REQUEST_REJECTED",
                "operationId": "all_patchExchangeDenyRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/defer": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_PENDING -> 이전상태",
                "operationId": "all_patchExchangeDefer_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/deferBack": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_PENDING -> 이전상태",
                "operationId": "all_patchExchangeDeferBack_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/completeDelivery": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "-> EXCHANGE_DELIVERY_COMPLETED, EXCHANGE_REJECT_DELIVERY_COMPLETED",
                "operationId": "all_patchExchangeCompleteDelivery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/completeCollection": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_COLLECTION_PREPARING -> EXCHANGE_COLLECTION_COMPLETED",
                "operationId": "all_patchExchangeCompleteCollection_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/acceptRequest": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_REQUEST -> EXCHANGE_COLLECTION_PREPARING",
                "operationId": "all_patchExchangeAcceptRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations/status/manualRefund": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "CANCELLATION_REFUNDING -> CANCELLATION_REFUNDED",
                "operationId": "all_patchCancellationManual",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellationPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations/status/forceRefund": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "CANCELLATION_REQUEST -> CANCELLATION_REFUNDED",
                "operationId": "all_patchCancellationForce_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CSRefundManagerReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations/status/denyRefund": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "CANCELLATION_REQUEST -> CANCELLATION_REQUEST_DENIED",
                "operationId": "all_patchCancellationDeny",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellationPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations/status/acceptRefund": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "CANCELLATION_REQUEST -> CANCELLATION_REFUNDING",
                "operationId": "all_patchCancellationAccept",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CSRefundManagerReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/shipping-list/{customerShippingId}/select": {
            "patch": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_selectCustomerShipping",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "customerShippingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/{orderCode}/cancel": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_cancelOrder_2",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/card-method/validate": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_validateCardMethodInfo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerPinCodeReqDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPinCodeValidationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/card-method/reset": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_resetCardMethodInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/delivery/status/{deliveryCode}/receive": {
            "patch": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_changeToCompletedStatus",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchCustomerSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/returns/status/start": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X_DELIVERY_COMPLETED -> RETURN_REQUEST",
                "operationId": "all_patchReturnStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnStart"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/returns/status/receiveDelivery": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "반품 재배송 도착[준비중]",
                "operationId": "all_patchReturnReceiveDelivery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/returns/status/departCollection": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "RETURN_COLLECTION_PREPARING -> RETURN_COLLECTION_ON_THE_WAY",
                "operationId": "all_patchReturnDepartCollection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/returns/status/cancelStart": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X_DELIVERY_COMPLETED -> RETURN_REQUEST_CANCELLED",
                "operationId": "all_patchReturnCancelRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/exchanges/status/start": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "X_DELIVERY_COMPLETED -> EXCHANGE_REQUEST",
                "operationId": "all_patchExchangeStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangeStart"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/exchanges/status/cancelStart": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "EXCHANGE_REQUEST -> EXCHANGE_REQUEST_CANCELLED",
                "operationId": "all_patchExchangeCancelStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangePatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/cancellations/status/start": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "PAID -> CANCELLATION_REQUEST",
                "operationId": "all_patchCancellationSubStatusStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellationStart"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/cancellations/status/cancelStart": {
            "patch": {
                "tags": [
                    "cs"
                ],
                "description": "CANCELLATION_REQUEST -> CANCELLATION_REQUEST_CANCELLED",
                "operationId": "all_patchCancellationCancelStart",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellationPatch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CSItemSingleDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 목록 조회",
                "description": "구독 목록을 반환합니다.",
                "operationId": "all_getSubscriptionList",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "조회 시작 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "조회 끝 시점",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "페이지 번호(기본값: 0)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "페이지 크기(기본값: 20)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortDir",
                        "in": "query",
                        "description": "정렬 방향(오름차순: ASC, 내림차순: DESC(기본값))",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "정렬 기준값 - 기본값: 생성 시점",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionListV1PageDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/items/{itemId}/options": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 항목에서 사용할 수 있는 옵션 가져오기",
                "description": "구독 항목에서 사용할 수 있는 옵션 목록을 반환합니다.",
                "operationId": "all_getSubscriptionItemOptions",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "구독 항목 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOptionGroupDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{subscriptionId}/calculate": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "사용량 정산",
                "description": "구독 중간에 사용량과 예상 결제 금액을 확인할 때 사용합니다.",
                "operationId": "all_calculateSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "사용량을 사용할 수 있는 가격 플랜임"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCalculatedV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/subscriptions/{id}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "summary": "구독 상세 조회",
                "description": "구독의 상세 정보를 반환합니다.",
                "operationId": "all_getSubscriptionDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "구독을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/products/{code}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "상품 상세 조회",
                "description": "상품 상세정보를 반환합니다.",
                "operationId": "all_getOne",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "상품 코드",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "상품 코드"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "상품을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{orderIdOrCode}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 상세 조회",
                "description": "주문 상세정보를 반환합니다.",
                "operationId": "all_getOrderDetail",
                "parameters": [
                    {
                        "name": "orderIdOrCode",
                        "in": "path",
                        "description": "주문 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "주문을 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderV1DTO"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{idOrCode}/pay": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 결제링크 리다이렉트",
                "description": "주문 결제링크로 리다이렉트 됩니다.",
                "operationId": "all_payOrder",
                "parameters": [
                    {
                        "name": "idOrCode",
                        "in": "path",
                        "description": "주문 번호 또는 코드(주문 번호는 deprecate 될 예정입니다)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successUrl",
                        "in": "query",
                        "description": "결제 성공시 리다이렉트 될 URL",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorUrl",
                        "in": "query",
                        "description": "결제 실패시 리다이렉트 될 URL",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cancelUrl",
                        "in": "query",
                        "description": "결제 취소시 리다이렉트 될 URL",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "결제링크로 리다이렉트 됩니다.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "정보를 찾지 못 함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/delivery/order/{orderCode}": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_searchDeliveryByOrder",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryBunchSingleV1"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductList_1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "searchDTO",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/products/{productCode}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductByCode",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requireVendor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/products/summary": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getCountsOfStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/products/by-codes": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductListByCodes",
                "parameters": [
                    {
                        "name": "product-code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDTOForPricingTable"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/product-categories": {
            "get": {
                "tags": [
                    "product-categories"
                ],
                "operationId": "all_getCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/orders/{idOrCode}/pay": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 결제링크 생성",
                "operationId": "all_payOrder_1",
                "parameters": [
                    {
                        "name": "idOrCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cancelUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "realmUuid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/orders/test": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_redirectTestPayURL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/orders/idKey/{idKey}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_findOderByIdKey",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UrlPayOrderDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/orders/idKey/realm/{idKey}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getRealmUuidByIdKey",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionList_1",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SubscriptionSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSubscriptionListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{subscriptionId}/calculate": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_calculateSubscription_1",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/{id}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionDetail_1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSubscriptiondto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/xls/download": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_downloadXlsFile_2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "ACTIVE",
                                    "UNPAID",
                                    "PENDING_PAUSE",
                                    "PAUSE",
                                    "PENDING_CANCEL",
                                    "EXPIRED",
                                    "CANCELED",
                                    "INCOMPLETE",
                                    "QUEUEING"
                                ]
                            }
                        }
                    },
                    {
                        "name": "X-Forwarded-For",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/xls/download/usage": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_downloadXlsFileForUsage",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/summary": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getCountsOfStatus_1",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SubscriptionSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/subscriptions/option/{id}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "옵션 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations": {
            "get": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_getQuotationList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/QuotationSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageQuotationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/{quotationId}": {
            "get": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_getQuotation",
                "parameters": [
                    {
                        "name": "quotationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationDetailDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/quotations/summary": {
            "get": {
                "tags": [
                    "quotations"
                ],
                "operationId": "all_getQuotationSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuotationSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/prices/list": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_priceListWithSearching",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PriceSearchDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/navigation": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getNavigation",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/NavigationDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/vendors/{vendorUuid}/count": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_countProducts",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/type/bundles": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_productBundleList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BundleProductListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/summary": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getCountsOfStatus_2",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/not-in-group": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductListNotInGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/list": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_productListWithSearching",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BundleProductListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/in-group/{groupId}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductsInGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/exists": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_existsByStatusIsSale",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/all/prices/all": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductAndPriceWithoutPagination",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductProductdto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/{orderCode}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getOrderDetail_1",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/{idOrCode}/pay": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_payOrder_2",
                "parameters": [
                    {
                        "name": "idOrCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "successUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cancelUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/vendors/{vendorUuid}/count": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_countOrders",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/orders/summary": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getOrderPaymentSummary",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "DEPOSIT_WAITING",
                                "CANCELLED",
                                "PAID",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY",
                                "ORDER_DELIVERY_PREPARING",
                                "ORDER_DELIVERY_SUSPENDED",
                                "ORDER_DELIVERY_ON_THE_WAY",
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING",
                                "EXCHANGE_REJECTED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REJECTED",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY",
                                "PAYMENT_FAILURE",
                                "FINISHED_EXCHANGE_AVAILABLE",
                                "FINISHED_RETURN_AVAILABLE",
                                "FINISHED_SUCCESSFULLY"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderPaymentSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/{id}/pay": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_payOrder_3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "successUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "errorUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cancelUrl",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RedirectView"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/xls/download": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_downloadXlsFile_1",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "임시저장",
                                    "발송 예약",
                                    "발송",
                                    "결제 완료",
                                    "미납입",
                                    "발송 실패"
                                ]
                            }
                        }
                    },
                    {
                        "name": "X-Forwarded-For",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/invoices/summary": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_getInvoiceSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/summary": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getDeliverySummary",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductRequestlistwithfilter"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliverySummaryAggregation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/list": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getDeliveryList",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductRequestlistwithfilter"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDeliveryBunchSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/delivery/listBy/order": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_searchDeliveryByOrder_1",
                "parameters": [
                    {
                        "name": "order_codes",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DeliveryBunchSingle"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/dashboard/sales-status": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "summary": "주문 현황",
                "operationId": "all_getSalesStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesStatusDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/dashboard/order-status": {
            "get": {
                "tags": [
                    "dashboard"
                ],
                "operationId": "all_getOrderStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderStatusSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/list": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_customerListWithSearching",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerListSearchDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/dormant": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getDormantCustomerList",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCustomerListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/country-summary": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCountrySummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerCountrySummaryDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/byUsername": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerOneByUsername",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/customers/byEmail": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerOneByEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getReturns",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RequestListWithFilterReturnSubStatusType"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CSList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/returns/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getStateAvailableTo",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECTED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "ORDER_DELIVERY_COMPLETED",
                                            "EXCHANGE_DELIVERY_COMPLETED",
                                            "EXCHANGE_REQUEST_REJECTED",
                                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "RETURN_REQUEST",
                                            "RETURN_REQUEST_CANCELLED",
                                            "RETURN_REQUEST_REJECTED",
                                            "RETURN_COLLECTION_PREPARING",
                                            "RETURN_COLLECTION_ON_THE_WAY",
                                            "RETURN_COLLECTION_COMPLETED",
                                            "RETURN_REJECTED",
                                            "RETURN_REJECT_DELIVERY_PREPARING",
                                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                            "RETURN_REJECT_DELIVERY_COMPLETED",
                                            "RETURN_PENDING",
                                            "RETURN_REFUNDING",
                                            "RETURN_REFUNDED",
                                            "RETURN_REFUNDED_PARTIALLY"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getExchanges",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RequestListWithFilterExchangeSubStatusType"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CSList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/exchanges/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getStateAvailableTo_1",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "RETURN_REQUEST",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "ORDER_DELIVERY_COMPLETED",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "CANCELLATION_REQUEST_DENIED",
                                            "RETURN_REQUEST",
                                            "EXCHANGE_REQUEST",
                                            "EXCHANGE_REQUEST_CANCELLED",
                                            "EXCHANGE_REQUEST_REJECTED",
                                            "EXCHANGE_COLLECTION_PREPARING",
                                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                                            "EXCHANGE_COLLECTION_COMPLETED",
                                            "EXCHANGE_DELIVERY_PREPARING",
                                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                                            "EXCHANGE_DELIVERY_COMPLETED",
                                            "EXCHANGE_REJECTED",
                                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                            "EXCHANGE_PENDING"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getCancellations",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/RequestListWithFilterCancellationSubStatusType"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CSList"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/cs/cancellations/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "description": "현재 상태에서 변경가능한 상태 출력",
                "operationId": "all_getStateAvailableTo_2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CANCELLED",
                                "ORDER_DELIVERY_PREPARING",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "PAID",
                                            "CANCELLED",
                                            "ORDER_DELIVERY_PREPARING",
                                            "CANCELLATION_REQUEST",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "CANCELLATION_REQUEST_DENIED",
                                            "CANCELLATION_REFUNDING",
                                            "CANCELLATION_REFUNDED",
                                            "CANCELLATION_REFUNDED_PARTIALLY"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionsBySubscriptionIds",
                "parameters": [
                    {
                        "name": "subscriptionItemIds",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/subscriptions/{vendorUuid}/{subscriptionItemId}/check": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_checkRecordAddable",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "subscriptionItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "checkingDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCheckResultDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/internal/subscriptions/{subscriptionId}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscription",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/products/{productId}/prices/{priceId}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getPrice",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "priceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceInternalDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/products/{code}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProduct",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductInternalDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/products/{code}/is_auto_install": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_isAutoInstall",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/orders/{orderCode}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getOrder_2",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderInternalResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/invoices/{id}": {
            "get": {
                "tags": [
                    "invoices"
                ],
                "operationId": "all_getInvoiceDetail_2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceInternalDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/{id}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomer_2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/{id}/subscriptions/summary": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_getCustomerSubscriptionsSummary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCustomerSubscriptionsSummaryDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/customers/{id}/payment-methods": {
            "get": {
                "tags": [
                    "customers"
                ],
                "operationId": "all_checkPaymentMethodAndReturnIdKey",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "paymentMethodId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pinCode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionList_2",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSubscriptionListV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_getSubscriptionDetail_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionV1DTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/{subscriptionId}/calculate": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_calculateSubscription_2",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCalculatedDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/subscriptions/products/{code}": {
            "get": {
                "tags": [
                    "subscriptions"
                ],
                "operationId": "all_existsByProductCode",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductList_3",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "searchDTO",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductListDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/products/{productCode}": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductByCode_1",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requireVendor",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/products/{productCode}/check-subscribe": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_checkProductSubscribeByCode",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/{orderCode}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "주문 조회",
                "operationId": "all_getOrderDetail_2",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/summary": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getOrderSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderSummaryAggregationCustomerDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/idKey/{idKey}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_findOderByIdKey_1",
                "parameters": [
                    {
                        "name": "idKey",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UrlPayOrderDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/customer/webauthn-register": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getWebAuthn",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/orders/customer/webauthn-auth": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getWebAuthnAuthentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebAuthnDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/delivery/summary": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getDeliverySummary_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductRequestlistwithfilter"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliverySummaryAggregation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/delivery/list": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getDeliveryList_1",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductRequestlistwithfilter"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PageRequestDTO"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDeliveryBunchCustomerSingle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/delivery/info/{deliveryCode}/tracking": {
            "get": {
                "tags": [
                    "delivery"
                ],
                "operationId": "all_getTracking",
                "parameters": [
                    {
                        "name": "deliveryCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryTrackingDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/returns/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getStateAvailableTo_3",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECTED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "ORDER_DELIVERY_COMPLETED",
                                            "EXCHANGE_DELIVERY_COMPLETED",
                                            "EXCHANGE_REQUEST_REJECTED",
                                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "RETURN_REQUEST",
                                            "RETURN_REQUEST_CANCELLED",
                                            "RETURN_REQUEST_REJECTED",
                                            "RETURN_COLLECTION_PREPARING",
                                            "RETURN_COLLECTION_ON_THE_WAY",
                                            "RETURN_COLLECTION_COMPLETED",
                                            "RETURN_REJECTED",
                                            "RETURN_REJECT_DELIVERY_PREPARING",
                                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                            "RETURN_REJECT_DELIVERY_COMPLETED",
                                            "RETURN_PENDING",
                                            "RETURN_REFUNDING",
                                            "RETURN_REFUNDED",
                                            "RETURN_REFUNDED_PARTIALLY"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/exchanges/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getStateAvailableTo_4",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "RETURN_REQUEST",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "ORDER_DELIVERY_COMPLETED",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "CANCELLATION_REQUEST_DENIED",
                                            "RETURN_REQUEST",
                                            "EXCHANGE_REQUEST",
                                            "EXCHANGE_REQUEST_CANCELLED",
                                            "EXCHANGE_REQUEST_REJECTED",
                                            "EXCHANGE_COLLECTION_PREPARING",
                                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                                            "EXCHANGE_COLLECTION_COMPLETED",
                                            "EXCHANGE_DELIVERY_PREPARING",
                                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                                            "EXCHANGE_DELIVERY_COMPLETED",
                                            "EXCHANGE_REJECTED",
                                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                            "EXCHANGE_PENDING"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cs/cancellations/status/availableTo": {
            "get": {
                "tags": [
                    "cs"
                ],
                "operationId": "all_getStateAvailableTo_5",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CANCELLED",
                                "ORDER_DELIVERY_PREPARING",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "PAID",
                                            "CANCELLED",
                                            "ORDER_DELIVERY_PREPARING",
                                            "CANCELLATION_REQUEST",
                                            "CANCELLATION_REQUEST_CANCELLED",
                                            "CANCELLATION_REQUEST_DENIED",
                                            "CANCELLATION_REFUNDING",
                                            "CANCELLATION_REFUNDED",
                                            "CANCELLATION_REFUNDED_PARTIALLY"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/carts": {
            "get": {
                "tags": [
                    "carts"
                ],
                "operationId": "all_cartList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartListCache"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/products/customer/counts": {
            "get": {
                "tags": [
                    "products"
                ],
                "operationId": "all_getProductsForCustomers",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "gwAdminDTO",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/GWAdminDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductSubscriptionCustomerListDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/{orderId}/invoice": {
            "get": {
                "tags": [
                    "orders"
                ],
                "operationId": "all_getInvoice",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "gwAdminDTO",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/GWAdminDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionNotifyPaymentMessageDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerId}/payment-method/{methodId}": {
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "결제수단 삭제",
                "description": "결제수단을 삭제할 때 사용합니다.",
                "operationId": "all_deletePaymentMethods",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "고객 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "methodId",
                        "in": "path",
                        "description": "결제수단 번호",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "결제수단이 정상적으로 삭제됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "고객 또는 삭제할 결제수단을 찾지 못함",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productId}/link/{deletingProductId}": {
            "delete": {
                "tags": [
                    "products"
                ],
                "operationId": "all_unlinkProduct",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "deletingProductId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseString"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/products/{productCode}/option-groups/{groupId}": {
            "delete": {
                "tags": [
                    "products"
                ],
                "operationId": "all_deleteOptionGroup",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/carts/remove": {
            "delete": {
                "tags": [
                    "carts"
                ],
                "operationId": "all_cartRemove",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartListRemoveRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartListCache"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/storages/{imageServiceType}-images": {
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload",
                "parameters": [
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/storages/account": {
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload_1",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/storages/webhook/s3": {
            "post": {
                "tags": [
                    "storages"
                ],
                "summary": "AWS Callback Notification",
                "operationId": "all_s3EventNotification",
                "parameters": [
                    {
                        "name": "x-amz-sns-message-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amz-sns-topic-arn",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "httpEntity",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amz-sns-message-type",
                        "in": "header",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Notification"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/{imageServiceType}-images": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_list",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageImageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload_2",
                "parameters": [
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "files"
                                ],
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageResponseDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/private": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_list_1",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePrivateFileResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload_3",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "expires_in": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrivateFileResponseDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/content": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_list_2",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageContentFileResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload_4",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "priceCode": {},
                                    "expiresIn": {}
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContentFileResponseDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/storages/{imageServiceType}-images": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_list_3",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    },
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageImageResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_upload_5",
                "parameters": [
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "files"
                                ],
                                "type": "object",
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageResponseDto"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/private/{uuid}": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_download",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_delete_1",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/content/{uuid}": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_download_1",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_delete_2",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/storages/content/{uuid}": {
            "get": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_download_2",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/storages/{imageServiceType}-images/{uuid}": {
            "delete": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_delete",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/storages/{imageServiceType}-images/{uuid}": {
            "delete": {
                "tags": [
                    "storages"
                ],
                "operationId": "all_delete_3",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "imageServiceType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/{storeId}/urls/{id}/activate": {
            "put": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_activateBaseUrl",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseUrlCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseUrlResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/{id}": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findOneById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_updateStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUpdateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/{id}/menus": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_getMenuItemList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuItemResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_updateMenuItemList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MenuItemUpdateDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuItemResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/pages/{pageId}/stores/{storeId}": {
            "get": {
                "tags": [
                    "pages"
                ],
                "operationId": "all_getStorePageMetadataById",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePageResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pages"
                ],
                "operationId": "all_updateStorePage",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePageUpdateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePageResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/stores/{storeUuid}/store-urls": {
            "put": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_addStoreUrls",
                "parameters": [
                    {
                        "name": "storeUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/{id}/urls": {
            "post": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_addBaseUrl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BaseUrlCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/store": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_store",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationStoreDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/screenNo": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_screenNo",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationStoreTypeDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/payment": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_payment",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationPaymentDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/finish": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_finish",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationFinishDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/delivery": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_delivery",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationDeliveryDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/business": {
            "post": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_business",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirstActivationRequestWrapperDTOFirstActivationBusinessDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/stores": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_createStore",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCreateRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stores/{uuid}/policy": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_policy",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/stores/metadata": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findByUUID",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreMetadataResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/pages/uri/{pageUri}/stores/{storeId}": {
            "get": {
                "tags": [
                    "pages"
                ],
                "operationId": "all_getStorePageMetadataByUri",
                "parameters": [
                    {
                        "name": "pageUri",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "storeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorePageResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/uuid/{uuid}": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findOneByUuid_2",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/urls": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_checkSubdomainAvailable",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreApiresponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/requirements": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_requirements",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/pages": {
            "get": {
                "tags": [
                    "pages"
                ],
                "operationId": "all_getInstantPageList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InstantPageGroupResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/view": {
            "get": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_view",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstActivationResponseWrapperDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/test/now": {
            "get": {
                "tags": [
                    "test"
                ],
                "operationId": "all_getCurrentTime",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "date"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/stores/vendor/{vendorUuid}/metadata": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findByVendorUuid",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/stores/vendor/{vendorUuid}/business_info": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findBusinessInfoByVendorUuid",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessInfoDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/stores/realm/{realmId}/metadata": {
            "get": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_findByRealmUuid",
                "parameters": [
                    {
                        "name": "realmId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StoreResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/stores/{id}/urls/{urlId}": {
            "delete": {
                "tags": [
                    "stores"
                ],
                "operationId": "all_deleteBaseUrl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "urlId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseUrlResponseDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/firstactivation/{vendorUuid}/clear": {
            "delete": {
                "tags": [
                    "firstactivation"
                ],
                "operationId": "all_clear_2",
                "parameters": [
                    {
                        "name": "vendorUuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/usages": {
            "get": {
                "tags": [
                    "usages"
                ],
                "summary": "사용량/계정 조회 API",
                "description": "사용량 또는 계정을 조회할 때 사용합니다.",
                "operationId": "all_getRecordQuotas",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "사용량/계정 기록이 정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecordForV1"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "사용량/계정 기록을 조회할 수 없는 상황",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "usages"
                ],
                "summary": "사용량/계정 등록 API",
                "description": "사용량 또는 계정을 등록할 때 사용합니다.",
                "operationId": "all_createRecordQuota",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage_recordReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "사용량/계정 기록이 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Res"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "사용량/계정 기록을 등록할 수 없는 상황",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/usage_records": {
            "post": {
                "tags": [
                    "usage_records"
                ],
                "summary": "사용량/계정 등록 API",
                "description": "사용량 또는 계정을 등록할 때 사용합니다.",
                "operationId": "all_createUnitRecords",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UsageRecordCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "사용량/계정 기록이 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsageRecordDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "사용량/계정 기록을 등록할 수 없는 상황",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/manager/usages": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getRecords",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecordForManager"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_createRecord",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage_recordReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/usages/xlsx": {
            "post": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_createRecordsByExcel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRecordsByExcelResultDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/usages/bulk": {
            "post": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_createRecords",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Usage_recordReq"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/usages/bulk": {
            "post": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getBulkUsedAmountByUsageIds",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BulkAggregatedUsageRecordRequestDTO"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/InternalUsageDTO"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/usages": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getRecordQuotas_1",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RecordForCustomer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_createRecordQuota_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage_recordReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Res"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/usages/normalized-amount": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getNormalizedAmount",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "record",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "quota",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CumulativeSumForManager"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/usages/{usageId}": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getUsedAmountByUsageId",
                "parameters": [
                    {
                        "name": "usageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalUsageDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/internal/usages/subscription-item/{subscriptionItemId}/used-amount": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getUsedAmountBySubscriptionItemId",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/usages/normalized-amount": {
            "get": {
                "tags": [
                    "usages"
                ],
                "operationId": "all_getNormalizedAmount_1",
                "parameters": [
                    {
                        "name": "subscriptionItemId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "record",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "quota",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CumulativeSumForCustomer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage_recordErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/subscription/{subscriptionId}/cancel": {
            "put": {
                "tags": [
                    "cover"
                ],
                "summary": "구독 취소 API",
                "description": "구독이 취소되었을 때 사용합니다. 진행중이던 시나리오가 있다면 멈춥니다.",
                "operationId": "all_cancelSubscription_3",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "구독 정보가 정상적으로 취소됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/subscription/{subscriptionId}/active": {
            "put": {
                "tags": [
                    "cover"
                ],
                "summary": "구독 활성 API",
                "description": "구독이 활성화 되었을 때 사용합니다. 진행중이던 시나리오가 있다면 멈춥니다.",
                "operationId": "all_activeSubscription_3",
                "parameters": [
                    {
                        "name": "subscriptionId",
                        "in": "path",
                        "description": "구독 ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "구독 정보가 정상적으로 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/subscription": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "구독 정보 등록 API",
                "description": "구독 정보를 스텝커버에 등록할 때 사용합니다.",
                "operationId": "all_createSubscription",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionCreateDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "구독 정보가 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverSubscriptiondto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/recovery": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "복구 시작 API",
                "description": "결제 복구 시나리오를 실행합니다.",
                "operationId": "all_startRecovery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartRecoveryDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "결제 복구 시나리오가 시작됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/StartRecoveryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/product": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "상품 정보 등록 API",
                "description": "상품 정보를 스텝커버에 등록할 때 사용합니다.",
                "operationId": "all_createCustomer_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CoverProductcreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "상품 정보가 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverProductdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/price": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "가격 플랜 정보 등록 API",
                "description": "가격 플랜 정보를 스텝커버에 등록할 때 사용합니다.",
                "operationId": "all_createPrice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CoverPricecreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "가격 플랜 정보가 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverPricedto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/order": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "주문 정보 등록 API",
                "description": "주문 정보를 스텝커버에 등록할 때 사용합니다.",
                "operationId": "all_createOrder_3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CoverOrdercreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "주문 정보가 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/customer": {
            "post": {
                "tags": [
                    "cover"
                ],
                "summary": "고객 정보 등록 API",
                "description": "고객 정보를 스텝커버에 등록할 때 사용합니다.",
                "operationId": "all_createCustomer_1_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CoverCustomercreatedto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "고객 정보가 정상적으로 등록됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverCustomerdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/order/success/{orderId}": {
            "patch": {
                "tags": [
                    "cover"
                ],
                "summary": "주문 성공 API",
                "description": "주문을 성공 상태로 바꿉니다. 결제 복구 시나리오가 멈춥니다.",
                "operationId": "all_changeToSuccess",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "주문 ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "notify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "주문 상태 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/order/cancel/{orderId}": {
            "patch": {
                "tags": [
                    "cover"
                ],
                "summary": "주문 취소 API",
                "description": "주문을 취소 상태로 바꿉니다. 결제 복구 시나리오가 멈춥니다.",
                "operationId": "all_cancelOrder_3",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "주문 ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "주문 상태 변경됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverOrderdto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cover/order/{token}/idKey": {
            "get": {
                "tags": [
                    "cover"
                ],
                "summary": "idKey 알아내기 API",
                "description": "특정 토큰에서 결제된 idKey를 알아냅니다. 결제수단을 변경할 때 사용합니다.",
                "operationId": "all_getIdKey",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "복구 토큰",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "정상 동작",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverOrderidkeydto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cover/{token}": {
            "get": {
                "tags": [
                    "{token}"
                ],
                "summary": "복구 정보 조회 API",
                "description": "복구 정보를 반환합니다.",
                "operationId": "all_getRecoveryData",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "복구 코드",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "복구 정보가 정상적으로 조회됨",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/RecoveryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoverErrorresponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ReturnError": {
                "type": "object"
            },
            "CustomerV1DTO": {
                "title": "고객 상세 정보",
                "required": [
                    "createdAt",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "고객 이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "고객 이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "고객 전화번호"
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "고객 생성 시점",
                        "format": "date-time"
                    }
                }
            },
            "CustomerUpdateDTO": {
                "title": "고객 수정 데이터",
                "required": [
                    "email",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "전화번호"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingAddressDTO"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객의 추가 정보"
                        },
                        "description": "고객의 추가 정보"
                    }
                },
                "description": "고객 수정 데이터"
            },
            "ShippingAddressDTO": {
                "title": "배송지 정보 수정 데이터",
                "required": [
                    "address1",
                    "address2",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "postcode": {
                        "type": "string",
                        "description": "우편번호"
                    },
                    "address1": {
                        "type": "string",
                        "description": "주소"
                    },
                    "address2": {
                        "type": "string",
                        "description": "세부 주소"
                    },
                    "state": {
                        "type": "string",
                        "description": "주 정보"
                    },
                    "city": {
                        "type": "string",
                        "description": "도시 정보"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "국가 코드"
                    }
                },
                "description": "배송지 정보 수정 데이터"
            },
            "DeliveryChargeResponseDTO": {
                "required": [
                    "islandAndMountainShipAmount",
                    "jejuShipAmount",
                    "useDefaultCourier",
                    "useDeliveryCharge",
                    "useLocalShipCharge"
                ],
                "type": "object",
                "properties": {
                    "useDefaultCourier": {
                        "type": "boolean"
                    },
                    "defaultCourierId": {
                        "type": "string"
                    },
                    "useDeliveryCharge": {
                        "type": "boolean"
                    },
                    "deliveryChargeType": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "CONDITIONAL_FREE",
                            "FIXED"
                        ]
                    },
                    "defaultDeliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "freeShipOverAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "useLocalShipCharge": {
                        "type": "boolean"
                    },
                    "jejuShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "islandAndMountainShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "LocalTime": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minute": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "second": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nano": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ManagerDTO": {
                "required": [
                    "createdAt",
                    "emailVerified",
                    "enabled",
                    "nickname",
                    "username",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "choo": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "VendorAppDTO": {
                "required": [
                    "installed",
                    "priceCode",
                    "productCode",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "installed": {
                        "type": "boolean"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "VendorDTO": {
                "required": [
                    "apps",
                    "checkFirstActivation",
                    "deliveryCharge",
                    "description",
                    "firstManagerUuid",
                    "manager",
                    "name",
                    "paymentKey",
                    "planType",
                    "secretKey",
                    "surveyed",
                    "useAuth",
                    "useDormantCustomer",
                    "useDormantNotification",
                    "usePayout",
                    "useStore",
                    "uuid",
                    "vendorSettings",
                    "zoneId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstManagerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "manager": {
                        "$ref": "#/components/schemas/ManagerDTO"
                    },
                    "realmKeycloakId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmName": {
                        "type": "string"
                    },
                    "realmEmailAsUsername": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string"
                    },
                    "paymentKey": {
                        "type": "string"
                    },
                    "wordpress": {
                        "$ref": "#/components/schemas/WordpressDTO"
                    },
                    "deliveryCharge": {
                        "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                    },
                    "vendorSettings": {
                        "$ref": "#/components/schemas/VendorSettingsDTO"
                    },
                    "planType": {
                        "type": "string",
                        "enum": [
                            "ZERO",
                            "SOLO",
                            "MINI",
                            "PRO",
                            "MAX"
                        ]
                    },
                    "contactUrl": {
                        "type": "string"
                    },
                    "checkFirstActivation": {
                        "type": "boolean"
                    },
                    "checkFailStepbuilder": {
                        "type": "string"
                    },
                    "surveyed": {
                        "type": "boolean"
                    },
                    "useDormantCustomer": {
                        "type": "boolean"
                    },
                    "useDormantNotification": {
                        "type": "boolean"
                    },
                    "apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorAppDTO"
                        }
                    },
                    "useAuth": {
                        "type": "boolean"
                    },
                    "useStore": {
                        "type": "boolean"
                    },
                    "usePayout": {
                        "type": "boolean"
                    },
                    "vendorTerms": {
                        "$ref": "#/components/schemas/VendorTermsDTO"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                }
            },
            "VendorSettingsDTO": {
                "required": [
                    "notiBeforePayment",
                    "notiBeforePaymentDays",
                    "vatIncluded",
                    "vatRate"
                ],
                "type": "object",
                "properties": {
                    "vatIncluded": {
                        "type": "boolean"
                    },
                    "vatRate": {
                        "type": "number"
                    },
                    "paymentAmountScale": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notiBeforePayment": {
                        "type": "boolean"
                    },
                    "notiBeforePaymentDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notiBeforePaymentTime": {
                        "$ref": "#/components/schemas/LocalTime"
                    }
                }
            },
            "VendorTermsAgreeDTO": {
                "required": [
                    "field"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "field": {
                        "type": "boolean"
                    },
                    "content": {
                        "type": "string"
                    }
                }
            },
            "VendorTermsDTO": {
                "required": [
                    "termsAgree",
                    "useCheckBox"
                ],
                "type": "object",
                "properties": {
                    "useCheckBox": {
                        "type": "boolean"
                    },
                    "termsAgree": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorTermsAgreeDTO"
                        }
                    }
                }
            },
            "WordpressDTO": {
                "required": [
                    "consumerKey",
                    "consumerSecret"
                ],
                "type": "object",
                "properties": {
                    "consumerKey": {
                        "type": "string"
                    },
                    "consumerSecret": {
                        "type": "string"
                    }
                }
            },
            "VendorTermsAgreeCreateDTO": {
                "required": [
                    "field"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "field": {
                        "type": "boolean"
                    },
                    "content": {
                        "type": "string"
                    }
                }
            },
            "VendorTermsCreateDTO": {
                "required": [
                    "termsAgree",
                    "useCheckBox"
                ],
                "type": "object",
                "properties": {
                    "useCheckBox": {
                        "type": "boolean"
                    },
                    "termsAgree": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorTermsAgreeCreateDTO"
                        }
                    }
                }
            },
            "VendorUpdateDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "contactUrl": {
                        "type": "string"
                    },
                    "useDormantCustomer": {
                        "type": "boolean"
                    },
                    "useDormantNotification": {
                        "type": "boolean"
                    },
                    "vendorTerms": {
                        "$ref": "#/components/schemas/VendorTermsCreateDTO"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                }
            },
            "WebhookDTO": {
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "VendorSettingsUpdateDTO": {
                "required": [
                    "notiBeforePayment",
                    "notiBeforePaymentDays",
                    "vatIncluded",
                    "vatRate"
                ],
                "type": "object",
                "properties": {
                    "vatIncluded": {
                        "type": "boolean"
                    },
                    "vatRate": {
                        "type": "number"
                    },
                    "paymentAmountScale": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notiBeforePayment": {
                        "type": "boolean"
                    },
                    "notiBeforePaymentDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notiBeforePaymentTime": {
                        "$ref": "#/components/schemas/LocalTime"
                    }
                }
            },
            "VendorTermsUpdateRequestDTO": {
                "required": [
                    "termsAgree",
                    "useCheckBox"
                ],
                "type": "object",
                "properties": {
                    "useCheckBox": {
                        "type": "boolean"
                    },
                    "termsAgree": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorTermsAgreeCreateDTO"
                        }
                    }
                }
            },
            "DeliveryChargeUpdateRequestDTO": {
                "type": "object",
                "properties": {
                    "useDefaultCourier": {
                        "type": "boolean"
                    },
                    "defaultCourierId": {
                        "type": "string"
                    },
                    "useDeliveryCharge": {
                        "type": "boolean"
                    },
                    "deliveryChargeType": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "CONDITIONAL_FREE",
                            "FIXED"
                        ]
                    },
                    "defaultDeliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "freeShipOverAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "useLocalShipCharge": {
                        "type": "boolean"
                    },
                    "jejuShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "islandAndMountainShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ManagerModifyRequestDTO": {
                "type": "object",
                "properties": {
                    "nickname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "CustomerModifyRequestCustomerDTO": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "realname": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "marketingSms": {
                        "type": "boolean"
                    },
                    "marketingEmail": {
                        "type": "boolean"
                    },
                    "marketingKakao": {
                        "type": "boolean"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingAddressDTO"
                    }
                }
            },
            "CustomerVendorDTO": {
                "required": [
                    "vendorName",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "vendorName": {
                        "type": "string"
                    }
                }
            },
            "AddableProdDTO": {
                "required": [
                    "active",
                    "categoryIds",
                    "productCodes",
                    "productType"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "productType": {
                        "type": "string"
                    },
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "productCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ChangeableCycleDTO": {
                "required": [
                    "active",
                    "cycles"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "cycles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountCycledto"
                        }
                    }
                }
            },
            "ChangeableNextPayDateDTO": {
                "required": [
                    "active",
                    "maximumPeriod"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "maximumPeriod": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ChangeableStatusDTO": {
                "required": [
                    "cancel",
                    "pause",
                    "survey"
                ],
                "type": "object",
                "properties": {
                    "pause": {
                        "$ref": "#/components/schemas/PauseDTO"
                    },
                    "cancel": {
                        "type": "boolean"
                    },
                    "survey": {
                        "$ref": "#/components/schemas/SurveyDTO"
                    }
                }
            },
            "CustomProdDTO": {
                "required": [
                    "addableProd",
                    "editable"
                ],
                "type": "object",
                "properties": {
                    "editable": {
                        "type": "boolean"
                    },
                    "addableProd": {
                        "$ref": "#/components/schemas/AddableProdDTO"
                    }
                }
            },
            "PauseDTO": {
                "required": [
                    "active",
                    "cycles",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "IMMEDIATE",
                            "LAZY"
                        ]
                    },
                    "cycles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountCycledto"
                        }
                    }
                }
            },
            "SubscriptionManagerSettingDTO": {
                "required": [
                    "changeableCycle",
                    "changeableNextPayDate",
                    "changeablePaymentMethod",
                    "changeableShippingAddress",
                    "changeableStatus",
                    "customProd"
                ],
                "type": "object",
                "properties": {
                    "changeableStatus": {
                        "$ref": "#/components/schemas/ChangeableStatusDTO"
                    },
                    "changeableNextPayDate": {
                        "$ref": "#/components/schemas/ChangeableNextPayDateDTO"
                    },
                    "changeablePaymentMethod": {
                        "type": "boolean"
                    },
                    "changeableShippingAddress": {
                        "type": "boolean"
                    },
                    "changeableCycle": {
                        "$ref": "#/components/schemas/ChangeableCycleDTO"
                    },
                    "customProd": {
                        "$ref": "#/components/schemas/CustomProdDTO"
                    }
                }
            },
            "SurveyDTO": {
                "required": [
                    "active",
                    "cancelSurveyUrl",
                    "pauseSurveyUrl"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "pauseSurveyUrl": {
                        "type": "string"
                    },
                    "cancelSurveyUrl": {
                        "type": "string"
                    }
                }
            },
            "ChildVendorCreateRequestDTO": {
                "required": [
                    "email",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "CustomerAccessTokenDTO": {
                "required": [
                    "accessToken",
                    "expireAt"
                ],
                "type": "object",
                "properties": {
                    "accessToken": {
                        "type": "string"
                    },
                    "expireAt": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CustomerSignupRequestDTO": {
                "required": [
                    "attributes",
                    "email",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "realname": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "marketingSms": {
                        "type": "boolean"
                    },
                    "marketingEmail": {
                        "type": "boolean"
                    },
                    "marketingKakao": {
                        "type": "boolean"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingAddressDTO"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "VendorCreateRequestDTO": {
                "required": [
                    "name",
                    "subdomain"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    }
                }
            },
            "VendorSurveyDTO": {
                "required": [
                    "answer1",
                    "answer2",
                    "answer3",
                    "answer4"
                ],
                "type": "object",
                "properties": {
                    "answer1": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "answer2": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "answer3": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "answer4": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "SeedRequestDTO": {
                "required": [
                    "quantity",
                    "resource"
                ],
                "type": "object",
                "properties": {
                    "resource": {
                        "type": "string",
                        "enum": [
                            "PG",
                            "CUSTOMER",
                            "PRODUCT",
                            "SUBSCRIPTION"
                        ]
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "VendorInvitationCreateDTO": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "memo": {
                        "type": "string"
                    }
                }
            },
            "VendorInvitationDTO": {
                "required": [
                    "code",
                    "createdAt",
                    "isReusable",
                    "parentVendorUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "parentVendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string"
                    },
                    "memo": {
                        "type": "string"
                    },
                    "isReusable": {
                        "type": "boolean"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "IdpRequest": {
                "required": [
                    "apiKey",
                    "enabled",
                    "idpType"
                ],
                "type": "object",
                "properties": {
                    "idpType": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "apiSecret": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "ManagerCreateRequestDTO": {
                "required": [
                    "email",
                    "nickname",
                    "password",
                    "phone"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "PasswordChangeRequestDTO": {
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "type": "object",
                "properties": {
                    "currentPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    }
                }
            },
            "CustomerCreateRequestDTO": {
                "required": [
                    "attributes",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "realname": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "marketingSms": {
                        "type": "boolean"
                    },
                    "marketingEmail": {
                        "type": "boolean"
                    },
                    "marketingKakao": {
                        "type": "boolean"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingAddressDTO"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CreateCustomersByExcelFailedRowDTO": {
                "required": [
                    "address1",
                    "address2",
                    "customFields",
                    "email",
                    "invalidColumns",
                    "name",
                    "phone",
                    "postcode",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "invalidColumns": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CreateCustomersByExcelResultDTO": {
                "required": [
                    "failedResult",
                    "succeededResult"
                ],
                "type": "object",
                "properties": {
                    "succeededResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerCreateRequestDTO"
                        }
                    },
                    "failedResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateCustomersByExcelFailedRowDTO"
                        }
                    }
                }
            },
            "DemoCycleDTO": {
                "required": [
                    "num",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    }
                },
                "description": "무료체험이 적용됐는지 적용 여부 및 기간"
            },
            "OrderInternalResponseDTO": {
                "required": [
                    "amount",
                    "code",
                    "createAt",
                    "customerUuid",
                    "discountedAmount",
                    "id",
                    "leftAmount",
                    "paidAmount",
                    "product",
                    "returnedAmount",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "amount": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "product": {
                        "type": "string"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment": {
                        "$ref": "#/components/schemas/OrderPaymentInternalDTO"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderiteminternaldto"
                        }
                    },
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionInternalResponseDTO"
                        }
                    },
                    "createAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "leftAmount": {
                        "type": "number"
                    },
                    "returnedAmount": {
                        "type": "number"
                    },
                    "discountedAmount": {
                        "type": "number"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingDTO"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "paymentDueDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderPaymentInternalDTO": {
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "cardNumber": {
                        "type": "string"
                    }
                }
            },
            "ShippingDTO": {
                "required": [
                    "address1",
                    "address2",
                    "name",
                    "phone",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    }
                }
            },
            "SubscriptionInternalResponseDTO": {
                "required": [
                    "claimMethodType",
                    "code",
                    "currentPeriodEnd",
                    "currentPeriodStart",
                    "customerId",
                    "customerUuid",
                    "id",
                    "interval",
                    "isMultipleItem",
                    "items",
                    "paymentInfo",
                    "price",
                    "priceCodes",
                    "product",
                    "productCodes",
                    "recurringCount",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "productCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "product": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "interval": {
                        "type": "string"
                    },
                    "currentPeriodStart": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currentPeriodEnd": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "provideStartDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "recurringCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "claimMethodType": {
                        "type": "string"
                    },
                    "isMultipleItem": {
                        "type": "boolean"
                    },
                    "paymentInfo": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSubscriptioniteminternalresponsedto"
                        }
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subscriptionMemo": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trialStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trialEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "originNextPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "pausedDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "intervalUnit": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/SubscriptionPaymentMethod"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "notiBeforePaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SubscriptionPaymentMethod": {
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentInfo": {
                        "type": "string"
                    }
                }
            },
            "CreateRealmRequestDTO": {
                "required": [
                    "fedId",
                    "realm",
                    "redirectUris"
                ],
                "type": "object",
                "properties": {
                    "realm": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fedId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "IdentityProviderDTO": {
                "required": [
                    "clientId",
                    "clientSecret",
                    "enabled",
                    "providerId"
                ],
                "type": "object",
                "properties": {
                    "internalId": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientSecret": {
                        "type": "string"
                    }
                }
            },
            "CertsEntity": {
                "required": [
                    "id",
                    "keys",
                    "realmUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "realmUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrivateKey"
                        }
                    }
                }
            },
            "PrivateKey": {
                "required": [
                    "alg",
                    "coefficient",
                    "exponent1",
                    "exponent2",
                    "kid",
                    "kty",
                    "modulus",
                    "prime1",
                    "prime2",
                    "privateExponent",
                    "publicExponent",
                    "use"
                ],
                "type": "object",
                "properties": {
                    "kty": {
                        "type": "string"
                    },
                    "kid": {
                        "type": "string"
                    },
                    "alg": {
                        "type": "string"
                    },
                    "use": {
                        "type": "string"
                    },
                    "modulus": {
                        "type": "string"
                    },
                    "publicExponent": {
                        "type": "string"
                    },
                    "privateExponent": {
                        "type": "string"
                    },
                    "prime1": {
                        "type": "string"
                    },
                    "prime2": {
                        "type": "string"
                    },
                    "exponent1": {
                        "type": "string"
                    },
                    "exponent2": {
                        "type": "string"
                    },
                    "coefficient": {
                        "type": "string"
                    }
                }
            },
            "InternalVendorCreateDTO": {
                "required": [
                    "managerUuid",
                    "name",
                    "paymentKey",
                    "planType",
                    "secretKey",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "paymentKey": {
                        "type": "string"
                    },
                    "planType": {
                        "type": "string",
                        "enum": [
                            "ZERO",
                            "SOLO",
                            "MINI",
                            "PRO",
                            "MAX"
                        ]
                    },
                    "managerUuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "AppstoreSubscriptionWebhookDTO": {
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    }
                }
            },
            "VendorCheckList": {
                "required": [
                    "firstActivation"
                ],
                "type": "object",
                "properties": {
                    "firstActivation": {
                        "type": "boolean"
                    }
                }
            },
            "VendorInfoDTO": {
                "required": [
                    "apps",
                    "checkList",
                    "children",
                    "deliveryCharge",
                    "name",
                    "useAuth",
                    "usePayout",
                    "useStore",
                    "uuid",
                    "vendorSettings",
                    "zoneId"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "useAuth": {
                        "type": "boolean"
                    },
                    "useStore": {
                        "type": "boolean"
                    },
                    "usePayout": {
                        "type": "boolean"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "deliveryCharge": {
                        "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                    },
                    "vendorSettings": {
                        "$ref": "#/components/schemas/VendorSettingsDTO"
                    },
                    "contactUrl": {
                        "type": "string"
                    },
                    "checkList": {
                        "$ref": "#/components/schemas/VendorCheckList"
                    },
                    "apps": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorAppDTO"
                        }
                    },
                    "children": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "zoneId": {
                        "type": "string"
                    },
                    "vendorTerms": {
                        "$ref": "#/components/schemas/VendorTermsDTO"
                    }
                }
            },
            "PaymentFieldDTO": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "options": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "TEXT",
                            "NUMBER",
                            "CHECKBOX",
                            "CALENDAR",
                            "DROPDOWN"
                        ]
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ApplicationContext": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "autowireCapableBeanFactory": {
                        "$ref": "#/components/schemas/AutowireCapableBeanFactory"
                    },
                    "applicationName": {
                        "type": "string"
                    },
                    "startupDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/ApplicationContext"
                    },
                    "id": {
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/Environment"
                    },
                    "beanDefinitionCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "beanDefinitionNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parentBeanFactory": {
                        "$ref": "#/components/schemas/BeanFactory"
                    },
                    "classLoader": {
                        "type": "object",
                        "properties": {
                            "parent": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "unnamedModule": {
                                        "type": "object",
                                        "properties": {
                                            "layer": {
                                                "type": "object"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "descriptor": {
                                                "type": "object",
                                                "properties": {
                                                    "open": {
                                                        "type": "boolean"
                                                    },
                                                    "automatic": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "classLoader": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "defaultAssertionStatus": {
                                                        "type": "boolean",
                                                        "writeOnly": true
                                                    },
                                                    "registeredAsParallelCapable": {
                                                        "type": "boolean"
                                                    },
                                                    "definedPackages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "specificationTitle": {
                                                                    "type": "string"
                                                                },
                                                                "specificationVersion": {
                                                                    "type": "string"
                                                                },
                                                                "specificationVendor": {
                                                                    "type": "string"
                                                                },
                                                                "implementationTitle": {
                                                                    "type": "string"
                                                                },
                                                                "implementationVersion": {
                                                                    "type": "string"
                                                                },
                                                                "implementationVendor": {
                                                                    "type": "string"
                                                                },
                                                                "annotations": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "declaredAnnotations": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "sealed": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "annotations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "declaredAnnotations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "named": {
                                                "type": "boolean"
                                            },
                                            "packages": {
                                                "uniqueItems": true,
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "defaultAssertionStatus": {
                                        "type": "boolean",
                                        "writeOnly": true
                                    },
                                    "registeredAsParallelCapable": {
                                        "type": "boolean"
                                    },
                                    "definedPackages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "specificationTitle": {
                                                    "type": "string"
                                                },
                                                "specificationVersion": {
                                                    "type": "string"
                                                },
                                                "specificationVendor": {
                                                    "type": "string"
                                                },
                                                "implementationTitle": {
                                                    "type": "string"
                                                },
                                                "implementationVersion": {
                                                    "type": "string"
                                                },
                                                "implementationVendor": {
                                                    "type": "string"
                                                },
                                                "annotations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "declaredAnnotations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "sealed": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "unnamedModule": {
                                "type": "object",
                                "properties": {
                                    "layer": {
                                        "type": "object"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "descriptor": {
                                        "type": "object",
                                        "properties": {
                                            "open": {
                                                "type": "boolean"
                                            },
                                            "automatic": {
                                                "type": "boolean"
                                            }
                                        }
                                    },
                                    "classLoader": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "defaultAssertionStatus": {
                                                "type": "boolean",
                                                "writeOnly": true
                                            },
                                            "registeredAsParallelCapable": {
                                                "type": "boolean"
                                            },
                                            "definedPackages": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "specificationTitle": {
                                                            "type": "string"
                                                        },
                                                        "specificationVersion": {
                                                            "type": "string"
                                                        },
                                                        "specificationVendor": {
                                                            "type": "string"
                                                        },
                                                        "implementationTitle": {
                                                            "type": "string"
                                                        },
                                                        "implementationVersion": {
                                                            "type": "string"
                                                        },
                                                        "implementationVendor": {
                                                            "type": "string"
                                                        },
                                                        "annotations": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "declaredAnnotations": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "sealed": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "annotations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "declaredAnnotations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "named": {
                                        "type": "boolean"
                                    },
                                    "packages": {
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "defaultAssertionStatus": {
                                "type": "boolean",
                                "writeOnly": true
                            },
                            "registeredAsParallelCapable": {
                                "type": "boolean"
                            },
                            "definedPackages": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "specificationTitle": {
                                            "type": "string"
                                        },
                                        "specificationVersion": {
                                            "type": "string"
                                        },
                                        "specificationVendor": {
                                            "type": "string"
                                        },
                                        "implementationTitle": {
                                            "type": "string"
                                        },
                                        "implementationVersion": {
                                            "type": "string"
                                        },
                                        "implementationVendor": {
                                            "type": "string"
                                        },
                                        "annotations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "declaredAnnotations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "sealed": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "AutowireCapableBeanFactory": {
                "type": "object"
            },
            "BeanFactory": {
                "type": "object"
            },
            "Environment": {
                "type": "object",
                "properties": {
                    "activeProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RedirectView": {
                "type": "object",
                "properties": {
                    "applicationContext": {
                        "$ref": "#/components/schemas/ApplicationContext"
                    },
                    "servletContext": {
                        "type": "object",
                        "properties": {
                            "majorVersion": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "minorVersion": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "attributeNames": {
                                "type": "object"
                            },
                            "contextPath": {
                                "type": "string"
                            },
                            "initParameterNames": {
                                "type": "object"
                            },
                            "servletNames": {
                                "type": "object",
                                "deprecated": true
                            },
                            "sessionCookieConfig": {
                                "type": "object",
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "maxAge": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "comment": {
                                        "type": "string"
                                    },
                                    "path": {
                                        "type": "string"
                                    },
                                    "secure": {
                                        "type": "boolean"
                                    },
                                    "httpOnly": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "jspConfigDescriptor": {
                                "type": "object",
                                "properties": {
                                    "jspPropertyGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "scriptingInvalid": {
                                                    "type": "string"
                                                },
                                                "elIgnored": {
                                                    "type": "string"
                                                },
                                                "pageEncoding": {
                                                    "type": "string"
                                                },
                                                "isXml": {
                                                    "type": "string"
                                                },
                                                "includePreludes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "includeCodas": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "deferredSyntaxAllowedAsLiteral": {
                                                    "type": "string"
                                                },
                                                "trimDirectiveWhitespaces": {
                                                    "type": "string"
                                                },
                                                "errorOnUndeclaredNamespace": {
                                                    "type": "string"
                                                },
                                                "buffer": {
                                                    "type": "string"
                                                },
                                                "urlPatterns": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "defaultContentType": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "taglibs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "taglibURI": {
                                                    "type": "string"
                                                },
                                                "taglibLocation": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "virtualServerName": {
                                "type": "string"
                            },
                            "sessionTimeout": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "requestCharacterEncoding": {
                                "type": "string"
                            },
                            "responseCharacterEncoding": {
                                "type": "string"
                            },
                            "effectiveMajorVersion": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "effectiveMinorVersion": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "servlets": {
                                "type": "object",
                                "deprecated": true
                            },
                            "serverInfo": {
                                "type": "string"
                            },
                            "servletContextName": {
                                "type": "string"
                            },
                            "servletRegistrations": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "mappings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "runAsRole": {
                                            "type": "string"
                                        },
                                        "initParameters": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "className": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "filterRegistrations": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "servletNameMappings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "urlPatternMappings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "initParameters": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "className": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "sessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "writeOnly": true,
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "COOKIE",
                                        "URL",
                                        "SSL"
                                    ]
                                }
                            },
                            "defaultSessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "COOKIE",
                                        "URL",
                                        "SSL"
                                    ]
                                }
                            },
                            "effectiveSessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "COOKIE",
                                        "URL",
                                        "SSL"
                                    ]
                                }
                            },
                            "classLoader": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "defaultAssertionStatus": {
                                        "type": "boolean",
                                        "writeOnly": true
                                    },
                                    "registeredAsParallelCapable": {
                                        "type": "boolean"
                                    },
                                    "definedPackages": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "specificationTitle": {
                                                    "type": "string"
                                                },
                                                "specificationVersion": {
                                                    "type": "string"
                                                },
                                                "specificationVendor": {
                                                    "type": "string"
                                                },
                                                "implementationTitle": {
                                                    "type": "string"
                                                },
                                                "implementationVersion": {
                                                    "type": "string"
                                                },
                                                "implementationVendor": {
                                                    "type": "string"
                                                },
                                                "annotations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "declaredAnnotations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "sealed": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "writeOnly": true
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "requestContextAttribute": {
                        "type": "string"
                    },
                    "staticAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "exposePathVariables": {
                        "type": "boolean"
                    },
                    "exposeContextBeansAsAttributes": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "exposedContextBeanNames": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "beanName": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "contextRelative": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "http10Compatible": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "exposeModelAttributes": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "encodingScheme": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "statusCode": {
                        "type": "string",
                        "writeOnly": true,
                        "enum": [
                            "100 CONTINUE",
                            "101 SWITCHING_PROTOCOLS",
                            "102 PROCESSING",
                            "103 CHECKPOINT",
                            "200 OK",
                            "201 CREATED",
                            "202 ACCEPTED",
                            "203 NON_AUTHORITATIVE_INFORMATION",
                            "204 NO_CONTENT",
                            "205 RESET_CONTENT",
                            "206 PARTIAL_CONTENT",
                            "207 MULTI_STATUS",
                            "208 ALREADY_REPORTED",
                            "226 IM_USED",
                            "300 MULTIPLE_CHOICES",
                            "301 MOVED_PERMANENTLY",
                            "302 FOUND",
                            "302 MOVED_TEMPORARILY",
                            "303 SEE_OTHER",
                            "304 NOT_MODIFIED",
                            "305 USE_PROXY",
                            "307 TEMPORARY_REDIRECT",
                            "308 PERMANENT_REDIRECT",
                            "400 BAD_REQUEST",
                            "401 UNAUTHORIZED",
                            "402 PAYMENT_REQUIRED",
                            "403 FORBIDDEN",
                            "404 NOT_FOUND",
                            "405 METHOD_NOT_ALLOWED",
                            "406 NOT_ACCEPTABLE",
                            "407 PROXY_AUTHENTICATION_REQUIRED",
                            "408 REQUEST_TIMEOUT",
                            "409 CONFLICT",
                            "410 GONE",
                            "411 LENGTH_REQUIRED",
                            "412 PRECONDITION_FAILED",
                            "413 PAYLOAD_TOO_LARGE",
                            "413 REQUEST_ENTITY_TOO_LARGE",
                            "414 URI_TOO_LONG",
                            "414 REQUEST_URI_TOO_LONG",
                            "415 UNSUPPORTED_MEDIA_TYPE",
                            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                            "417 EXPECTATION_FAILED",
                            "418 I_AM_A_TEAPOT",
                            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                            "420 METHOD_FAILURE",
                            "421 DESTINATION_LOCKED",
                            "422 UNPROCESSABLE_ENTITY",
                            "423 LOCKED",
                            "424 FAILED_DEPENDENCY",
                            "425 TOO_EARLY",
                            "426 UPGRADE_REQUIRED",
                            "428 PRECONDITION_REQUIRED",
                            "429 TOO_MANY_REQUESTS",
                            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                            "500 INTERNAL_SERVER_ERROR",
                            "501 NOT_IMPLEMENTED",
                            "502 BAD_GATEWAY",
                            "503 SERVICE_UNAVAILABLE",
                            "504 GATEWAY_TIMEOUT",
                            "505 HTTP_VERSION_NOT_SUPPORTED",
                            "506 VARIANT_ALSO_NEGOTIATES",
                            "507 INSUFFICIENT_STORAGE",
                            "508 LOOP_DETECTED",
                            "509 BANDWIDTH_LIMIT_EXCEEDED",
                            "510 NOT_EXTENDED",
                            "511 NETWORK_AUTHENTICATION_REQUIRED"
                        ]
                    },
                    "expandUriTemplateVariables": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "propagateQueryParams": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "propagateQueryProperties": {
                        "type": "boolean"
                    },
                    "redirectView": {
                        "type": "boolean"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "writeOnly": true
                    },
                    "attributesCSV": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "attributesMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "JsonNode": {
                "type": "object"
            },
            "AppComponentDTO": {
                "required": [
                    "target",
                    "uri"
                ],
                "type": "object",
                "properties": {
                    "uri": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    }
                }
            },
            "SteppayAppDTO": {
                "required": [
                    "code",
                    "host",
                    "id",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppComponentDTO"
                        }
                    }
                }
            },
            "VendorListDTO": {
                "required": [
                    "createdAt",
                    "enabled",
                    "managerUsername",
                    "name",
                    "surveyed",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmKeycloakId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmName": {
                        "type": "string"
                    },
                    "surveyed": {
                        "type": "boolean"
                    },
                    "managerUsername": {
                        "type": "string"
                    },
                    "managerPhone": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "StepbuilderStatusResponseDTO": {
                "required": [
                    "createdAt",
                    "domain",
                    "memberState",
                    "publishState",
                    "siteDomain"
                ],
                "type": "object",
                "properties": {
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "siteDomain": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "publishState": {
                        "type": "string",
                        "enum": [
                            "PUBLISHED",
                            "UNPUBLISHED",
                            "NOT_PUBLISHED_YET"
                        ]
                    },
                    "memberState": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "BASIC",
                            "PREMIUM",
                            "NONE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastPublishedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PageVendorInvitationDTO": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorInvitationDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "sorted": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "VendorQueryDTO": {
                "type": "object",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "startCreatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endCreatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PageVendorListDTO": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "IdpResponse": {
                "required": [
                    "apiKey",
                    "enabled",
                    "idpType"
                ],
                "type": "object",
                "properties": {
                    "idpType": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "apiSecret": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "VendorForCoverDTO": {
                "required": [
                    "enabledPaymentGateways",
                    "name",
                    "paymentKey"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "paymentKey": {
                        "type": "string"
                    },
                    "enabledPaymentGateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountEnabledpaymentgatewaydto"
                        }
                    }
                }
            },
            "ApplicationRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "rootUrl": {
                        "type": "string"
                    },
                    "adminUrl": {
                        "type": "string"
                    },
                    "baseUrl": {
                        "type": "string"
                    },
                    "surrogateAuthRequired": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "alwaysDisplayInConsole": {
                        "type": "boolean"
                    },
                    "clientAuthenticatorType": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "registrationAccessToken": {
                        "type": "string"
                    },
                    "defaultRoles": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notBefore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bearerOnly": {
                        "type": "boolean"
                    },
                    "consentRequired": {
                        "type": "boolean"
                    },
                    "standardFlowEnabled": {
                        "type": "boolean"
                    },
                    "implicitFlowEnabled": {
                        "type": "boolean"
                    },
                    "directAccessGrantsEnabled": {
                        "type": "boolean"
                    },
                    "serviceAccountsEnabled": {
                        "type": "boolean"
                    },
                    "authorizationServicesEnabled": {
                        "type": "boolean"
                    },
                    "directGrantsOnly": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "publicClient": {
                        "type": "boolean"
                    },
                    "frontchannelLogout": {
                        "type": "boolean"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "authenticationFlowBindingOverrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fullScopeAllowed": {
                        "type": "boolean"
                    },
                    "nodeReRegistrationTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registeredNodes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    },
                    "clientTemplate": {
                        "type": "string",
                        "deprecated": true
                    },
                    "useTemplateConfig": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateScope": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateMappers": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "defaultClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "optionalClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authorizationSettings": {
                        "$ref": "#/components/schemas/ResourceServerRepresentation"
                    },
                    "access": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    },
                    "origin": {
                        "type": "string"
                    },
                    "claims": {
                        "$ref": "#/components/schemas/ClaimRepresentation"
                    }
                }
            },
            "AuthenticationExecutionExportRepresentation": {
                "type": "object",
                "properties": {
                    "authenticatorConfig": {
                        "type": "string"
                    },
                    "authenticator": {
                        "type": "string"
                    },
                    "authenticatorFlow": {
                        "type": "boolean"
                    },
                    "requirement": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "autheticatorFlow": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "flowAlias": {
                        "type": "string"
                    },
                    "userSetupAllowed": {
                        "type": "boolean"
                    }
                }
            },
            "AuthenticationFlowRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "topLevel": {
                        "type": "boolean"
                    },
                    "builtIn": {
                        "type": "boolean"
                    },
                    "authenticationExecutions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthenticationExecutionExportRepresentation"
                        }
                    }
                }
            },
            "AuthenticatorConfigRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ClaimRepresentation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "boolean"
                    },
                    "profile": {
                        "type": "boolean"
                    },
                    "picture": {
                        "type": "boolean"
                    },
                    "website": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "boolean"
                    },
                    "gender": {
                        "type": "boolean"
                    },
                    "locale": {
                        "type": "boolean"
                    },
                    "address": {
                        "type": "boolean"
                    },
                    "phone": {
                        "type": "boolean"
                    }
                }
            },
            "ClientRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "rootUrl": {
                        "type": "string"
                    },
                    "adminUrl": {
                        "type": "string"
                    },
                    "baseUrl": {
                        "type": "string"
                    },
                    "surrogateAuthRequired": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "alwaysDisplayInConsole": {
                        "type": "boolean"
                    },
                    "clientAuthenticatorType": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "registrationAccessToken": {
                        "type": "string"
                    },
                    "defaultRoles": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notBefore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bearerOnly": {
                        "type": "boolean"
                    },
                    "consentRequired": {
                        "type": "boolean"
                    },
                    "standardFlowEnabled": {
                        "type": "boolean"
                    },
                    "implicitFlowEnabled": {
                        "type": "boolean"
                    },
                    "directAccessGrantsEnabled": {
                        "type": "boolean"
                    },
                    "serviceAccountsEnabled": {
                        "type": "boolean"
                    },
                    "authorizationServicesEnabled": {
                        "type": "boolean"
                    },
                    "directGrantsOnly": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "publicClient": {
                        "type": "boolean"
                    },
                    "frontchannelLogout": {
                        "type": "boolean"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "authenticationFlowBindingOverrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fullScopeAllowed": {
                        "type": "boolean"
                    },
                    "nodeReRegistrationTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registeredNodes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    },
                    "clientTemplate": {
                        "type": "string",
                        "deprecated": true
                    },
                    "useTemplateConfig": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateScope": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateMappers": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "defaultClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "optionalClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authorizationSettings": {
                        "$ref": "#/components/schemas/ResourceServerRepresentation"
                    },
                    "access": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    },
                    "origin": {
                        "type": "string"
                    }
                }
            },
            "ClientScopeRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    }
                }
            },
            "ClientTemplateRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "fullScopeAllowed": {
                        "type": "boolean"
                    },
                    "bearerOnly": {
                        "type": "boolean"
                    },
                    "consentRequired": {
                        "type": "boolean"
                    },
                    "standardFlowEnabled": {
                        "type": "boolean"
                    },
                    "implicitFlowEnabled": {
                        "type": "boolean"
                    },
                    "directAccessGrantsEnabled": {
                        "type": "boolean"
                    },
                    "serviceAccountsEnabled": {
                        "type": "boolean"
                    },
                    "publicClient": {
                        "type": "boolean"
                    },
                    "frontchannelLogout": {
                        "type": "boolean"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    }
                }
            },
            "ComponentExportRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "config": {
                        "$ref": "#/components/schemas/MultivaluedHashMapStringString"
                    }
                }
            },
            "Composites": {
                "type": "object",
                "properties": {
                    "realm": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "client": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "application": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "deprecated": true
                    }
                }
            },
            "CredentialRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "userLabel": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "secretData": {
                        "type": "string"
                    },
                    "credentialData": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string"
                    },
                    "temporary": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string",
                        "deprecated": true
                    },
                    "hashedSaltedValue": {
                        "type": "string",
                        "deprecated": true
                    },
                    "salt": {
                        "type": "string",
                        "deprecated": true
                    },
                    "hashIterations": {
                        "type": "integer",
                        "format": "int32",
                        "deprecated": true
                    },
                    "counter": {
                        "type": "integer",
                        "format": "int32",
                        "deprecated": true
                    },
                    "algorithm": {
                        "type": "string",
                        "deprecated": true
                    },
                    "digits": {
                        "type": "integer",
                        "format": "int32",
                        "deprecated": true
                    },
                    "period": {
                        "type": "integer",
                        "format": "int32",
                        "deprecated": true
                    },
                    "config": {
                        "type": "object",
                        "properties": {
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "deprecated": true
                    }
                }
            },
            "FederatedIdentityRepresentation": {
                "type": "object",
                "properties": {
                    "identityProvider": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "GroupRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "realmRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clientRoles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "access": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "IdentityProviderMapperRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "identityProviderAlias": {
                        "type": "string"
                    },
                    "identityProviderMapper": {
                        "type": "string"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "IdentityProviderRepresentation": {
                "type": "object",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "internalId": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "updateProfileFirstLoginMode": {
                        "type": "string",
                        "deprecated": true
                    },
                    "trustEmail": {
                        "type": "boolean"
                    },
                    "storeToken": {
                        "type": "boolean"
                    },
                    "addReadTokenRoleOnCreate": {
                        "type": "boolean"
                    },
                    "authenticateByDefault": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "linkOnly": {
                        "type": "boolean"
                    },
                    "firstBrokerLoginFlowAlias": {
                        "type": "string"
                    },
                    "postBrokerLoginFlowAlias": {
                        "type": "string"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updateProfileFirstLogin": {
                        "type": "boolean",
                        "writeOnly": true,
                        "deprecated": true
                    }
                }
            },
            "MultivaluedHashMapStringString": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deprecated": true
            },
            "OAuthClientRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "rootUrl": {
                        "type": "string"
                    },
                    "adminUrl": {
                        "type": "string"
                    },
                    "baseUrl": {
                        "type": "string"
                    },
                    "surrogateAuthRequired": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "alwaysDisplayInConsole": {
                        "type": "boolean"
                    },
                    "clientAuthenticatorType": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "registrationAccessToken": {
                        "type": "string"
                    },
                    "defaultRoles": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notBefore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bearerOnly": {
                        "type": "boolean"
                    },
                    "consentRequired": {
                        "type": "boolean"
                    },
                    "standardFlowEnabled": {
                        "type": "boolean"
                    },
                    "implicitFlowEnabled": {
                        "type": "boolean"
                    },
                    "directAccessGrantsEnabled": {
                        "type": "boolean"
                    },
                    "serviceAccountsEnabled": {
                        "type": "boolean"
                    },
                    "authorizationServicesEnabled": {
                        "type": "boolean"
                    },
                    "directGrantsOnly": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "publicClient": {
                        "type": "boolean"
                    },
                    "frontchannelLogout": {
                        "type": "boolean"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "authenticationFlowBindingOverrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "fullScopeAllowed": {
                        "type": "boolean"
                    },
                    "nodeReRegistrationTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registeredNodes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    },
                    "clientTemplate": {
                        "type": "string",
                        "deprecated": true
                    },
                    "useTemplateConfig": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateScope": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "useTemplateMappers": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "defaultClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "optionalClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "authorizationSettings": {
                        "$ref": "#/components/schemas/ResourceServerRepresentation"
                    },
                    "access": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    },
                    "origin": {
                        "type": "string"
                    },
                    "claims": {
                        "$ref": "#/components/schemas/ClaimRepresentation"
                    }
                }
            },
            "PolicyRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "policies": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resources": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logic": {
                        "type": "string",
                        "enum": [
                            "POSITIVE",
                            "NEGATIVE"
                        ]
                    },
                    "decisionStrategy": {
                        "type": "string",
                        "enum": [
                            "AFFIRMATIVE",
                            "UNANIMOUS",
                            "CONSENSUS"
                        ]
                    },
                    "owner": {
                        "type": "string"
                    },
                    "resourcesData": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRepresentation"
                        }
                    },
                    "scopesData": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScopeRepresentation"
                        }
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ProtocolMapperRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolMapper": {
                        "type": "string"
                    },
                    "consentRequired": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "consentText": {
                        "type": "string",
                        "deprecated": true
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "RealmRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "realm": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "displayNameHtml": {
                        "type": "string"
                    },
                    "notBefore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "defaultSignatureAlgorithm": {
                        "type": "string"
                    },
                    "revokeRefreshToken": {
                        "type": "boolean"
                    },
                    "refreshTokenMaxReuse": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessTokenLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessTokenLifespanForImplicitFlow": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ssoSessionIdleTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ssoSessionMaxLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ssoSessionIdleTimeoutRememberMe": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ssoSessionMaxLifespanRememberMe": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offlineSessionIdleTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offlineSessionMaxLifespanEnabled": {
                        "type": "boolean"
                    },
                    "offlineSessionMaxLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clientSessionIdleTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clientSessionMaxLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clientOfflineSessionIdleTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clientOfflineSessionMaxLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessCodeLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessCodeLifespanUserAction": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessCodeLifespanLogin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "actionTokenGeneratedByAdminLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "actionTokenGeneratedByUserLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "oauth2DeviceCodeLifespan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "oauth2DevicePollingInterval": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "sslRequired": {
                        "type": "string"
                    },
                    "passwordCredentialGrantAllowed": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "registrationAllowed": {
                        "type": "boolean"
                    },
                    "registrationEmailAsUsername": {
                        "type": "boolean"
                    },
                    "rememberMe": {
                        "type": "boolean"
                    },
                    "verifyEmail": {
                        "type": "boolean"
                    },
                    "loginWithEmailAllowed": {
                        "type": "boolean"
                    },
                    "duplicateEmailsAllowed": {
                        "type": "boolean"
                    },
                    "resetPasswordAllowed": {
                        "type": "boolean"
                    },
                    "editUsernameAllowed": {
                        "type": "boolean"
                    },
                    "bruteForceProtected": {
                        "type": "boolean"
                    },
                    "permanentLockout": {
                        "type": "boolean"
                    },
                    "maxFailureWaitSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minimumQuickLoginWaitSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "waitIncrementSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quickLoginCheckMilliSeconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "maxDeltaTimeSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failureFactor": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "privateKey": {
                        "type": "string",
                        "deprecated": true
                    },
                    "publicKey": {
                        "type": "string",
                        "deprecated": true
                    },
                    "certificate": {
                        "type": "string",
                        "deprecated": true
                    },
                    "codeSecret": {
                        "type": "string",
                        "deprecated": true
                    },
                    "roles": {
                        "$ref": "#/components/schemas/RolesRepresentation"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupRepresentation"
                        }
                    },
                    "defaultRoles": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultRole": {
                        "$ref": "#/components/schemas/RoleRepresentation"
                    },
                    "defaultGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requiredCredentials": {
                        "uniqueItems": true,
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "passwordPolicy": {
                        "type": "string"
                    },
                    "otpPolicyType": {
                        "type": "string"
                    },
                    "otpPolicyAlgorithm": {
                        "type": "string"
                    },
                    "otpPolicyInitialCounter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "otpPolicyDigits": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "otpPolicyLookAheadWindow": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "otpPolicyPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "otpPolicyCodeReusable": {
                        "type": "boolean"
                    },
                    "otpSupportedApplications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webAuthnPolicyRpEntityName": {
                        "type": "string"
                    },
                    "webAuthnPolicySignatureAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webAuthnPolicyRpId": {
                        "type": "string"
                    },
                    "webAuthnPolicyAttestationConveyancePreference": {
                        "type": "string"
                    },
                    "webAuthnPolicyAuthenticatorAttachment": {
                        "type": "string"
                    },
                    "webAuthnPolicyRequireResidentKey": {
                        "type": "string"
                    },
                    "webAuthnPolicyUserVerificationRequirement": {
                        "type": "string"
                    },
                    "webAuthnPolicyCreateTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "webAuthnPolicyAvoidSameAuthenticatorRegister": {
                        "type": "boolean"
                    },
                    "webAuthnPolicyAcceptableAaguids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webAuthnPolicyPasswordlessRpEntityName": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessSignatureAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webAuthnPolicyPasswordlessRpId": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessAttestationConveyancePreference": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessAuthenticatorAttachment": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessRequireResidentKey": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessUserVerificationRequirement": {
                        "type": "string"
                    },
                    "webAuthnPolicyPasswordlessCreateTimeout": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": {
                        "type": "boolean"
                    },
                    "webAuthnPolicyPasswordlessAcceptableAaguids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRepresentation"
                        }
                    },
                    "federatedUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRepresentation"
                        }
                    },
                    "scopeMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScopeMappingRepresentation"
                        }
                    },
                    "clientScopeMappings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ScopeMappingRepresentation"
                            }
                        }
                    },
                    "clients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClientRepresentation"
                        }
                    },
                    "clientScopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClientScopeRepresentation"
                        }
                    },
                    "defaultDefaultClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultOptionalClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "browserSecurityHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "smtpServer": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "userFederationProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserFederationProviderRepresentation"
                        }
                    },
                    "userFederationMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserFederationMapperRepresentation"
                        }
                    },
                    "loginTheme": {
                        "type": "string"
                    },
                    "accountTheme": {
                        "type": "string"
                    },
                    "adminTheme": {
                        "type": "string"
                    },
                    "emailTheme": {
                        "type": "string"
                    },
                    "eventsEnabled": {
                        "type": "boolean"
                    },
                    "eventsExpiration": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "eventsListeners": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabledEventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "adminEventsEnabled": {
                        "type": "boolean"
                    },
                    "adminEventsDetailsEnabled": {
                        "type": "boolean"
                    },
                    "identityProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProviderRepresentation"
                        }
                    },
                    "identityProviderMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProviderMapperRepresentation"
                        }
                    },
                    "protocolMappers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProtocolMapperRepresentation"
                        }
                    },
                    "components": {
                        "type": "object",
                        "properties": {
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ComponentExportRepresentation"
                            }
                        }
                    },
                    "internationalizationEnabled": {
                        "type": "boolean"
                    },
                    "supportedLocales": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultLocale": {
                        "type": "string"
                    },
                    "authenticationFlows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthenticationFlowRepresentation"
                        }
                    },
                    "authenticatorConfig": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthenticatorConfigRepresentation"
                        }
                    },
                    "requiredActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequiredActionProviderRepresentation"
                        }
                    },
                    "browserFlow": {
                        "type": "string"
                    },
                    "registrationFlow": {
                        "type": "string"
                    },
                    "directGrantFlow": {
                        "type": "string"
                    },
                    "resetCredentialsFlow": {
                        "type": "string"
                    },
                    "clientAuthenticationFlow": {
                        "type": "string"
                    },
                    "dockerAuthenticationFlow": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "keycloakVersion": {
                        "type": "string"
                    },
                    "userManagedAccessAllowed": {
                        "type": "boolean"
                    },
                    "social": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "updateProfileOnInitialSocialLogin": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "socialProviders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "deprecated": true
                    },
                    "applicationScopeMappings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ScopeMappingRepresentation"
                            }
                        },
                        "deprecated": true
                    },
                    "applications": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/ApplicationRepresentation"
                        }
                    },
                    "oauthClients": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/OAuthClientRepresentation"
                        }
                    },
                    "clientTemplates": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/ClientTemplateRepresentation"
                        }
                    },
                    "clientProfiles": {
                        "$ref": "#/components/schemas/JsonNode"
                    },
                    "clientPolicies": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "RequiredActionProviderRepresentation": {
                "type": "object",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "defaultAction": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ResourceOwnerRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ResourceRepresentation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/ResourceOwnerRepresentation"
                    },
                    "ownerManagedAccess": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "_id": {
                        "type": "string"
                    },
                    "uris": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scopes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScopeRepresentation"
                        }
                    },
                    "icon_uri": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "writeOnly": true,
                        "deprecated": true
                    },
                    "resource_scopes": {
                        "uniqueItems": true,
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/ScopeRepresentation"
                        }
                    }
                }
            },
            "ResourceServerRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "allowRemoteResourceManagement": {
                        "type": "boolean"
                    },
                    "policyEnforcementMode": {
                        "type": "string",
                        "enum": [
                            "ENFORCING",
                            "PERMISSIVE",
                            "DISABLED"
                        ]
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceRepresentation"
                        }
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PolicyRepresentation"
                        }
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScopeRepresentation"
                        }
                    },
                    "decisionStrategy": {
                        "type": "string",
                        "enum": [
                            "AFFIRMATIVE",
                            "UNANIMOUS",
                            "CONSENSUS"
                        ]
                    }
                }
            },
            "RoleRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "scopeParamRequired": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "composite": {
                        "type": "boolean"
                    },
                    "composites": {
                        "$ref": "#/components/schemas/Composites"
                    },
                    "clientRole": {
                        "type": "boolean"
                    },
                    "containerId": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "RolesRepresentation": {
                "type": "object",
                "properties": {
                    "realm": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleRepresentation"
                        }
                    },
                    "client": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RoleRepresentation"
                            }
                        }
                    },
                    "application": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/RoleRepresentation"
                            }
                        },
                        "deprecated": true
                    }
                }
            },
            "ScopeMappingRepresentation": {
                "type": "object",
                "properties": {
                    "self": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string"
                    },
                    "clientTemplate": {
                        "type": "string",
                        "deprecated": true
                    },
                    "clientScope": {
                        "type": "string"
                    },
                    "roles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ScopeRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "iconUri": {
                        "type": "string"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PolicyRepresentation"
                        }
                    },
                    "displayName": {
                        "type": "string"
                    }
                }
            },
            "SocialLinkRepresentation": {
                "type": "object",
                "properties": {
                    "socialProvider": {
                        "type": "string"
                    },
                    "socialUserId": {
                        "type": "string"
                    },
                    "socialUsername": {
                        "type": "string"
                    }
                }
            },
            "UserConsentRepresentation": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "grantedClientScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastUpdatedDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "grantedRealmRoles": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UserFederationMapperRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "federationProviderDisplayName": {
                        "type": "string"
                    },
                    "federationMapperType": {
                        "type": "string"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "UserFederationProviderRepresentation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "providerName": {
                        "type": "string"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fullSyncPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "changedSyncPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastSync": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserRepresentation": {
                "type": "object",
                "properties": {
                    "self": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "createdTimestamp": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "totp": {
                        "type": "boolean",
                        "deprecated": true
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "federationLink": {
                        "type": "string"
                    },
                    "serviceAccountClientId": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CredentialRepresentation"
                        }
                    },
                    "disableableCredentialTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requiredActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "federatedIdentities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FederatedIdentityRepresentation"
                        }
                    },
                    "realmRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clientRoles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "clientConsents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserConsentRepresentation"
                        }
                    },
                    "notBefore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "applicationRoles": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "deprecated": true
                    },
                    "socialLinks": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/SocialLinkRepresentation"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "access": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "AuthorizationCodeResponse": {
                "required": [
                    "client_id",
                    "id",
                    "scope",
                    "sub",
                    "vendor_uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "vendor_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parent_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sub": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "VerifyDTO": {
                "required": [
                    "paymentKey",
                    "secretKey"
                ],
                "type": "object",
                "properties": {
                    "secretKey": {
                        "type": "string"
                    },
                    "paymentKey": {
                        "type": "string"
                    }
                }
            },
            "AccountResponseDTO": {
                "required": [
                    "managerUuid",
                    "paymentKey",
                    "planType",
                    "secretToken",
                    "vendorUuid",
                    "zoneId"
                ],
                "type": "object",
                "properties": {
                    "managerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "paymentKey": {
                        "type": "string"
                    },
                    "secretToken": {
                        "type": "string"
                    },
                    "planType": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                }
            },
            "RealmDTO": {
                "type": "object",
                "properties": {
                    "keycloakId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userRegistration": {
                        "type": "boolean"
                    },
                    "emailAsUsername": {
                        "type": "boolean"
                    },
                    "editUsername": {
                        "type": "boolean"
                    },
                    "forgotPassword": {
                        "type": "boolean"
                    },
                    "rememberMe": {
                        "type": "boolean"
                    },
                    "verifyEmail": {
                        "type": "boolean"
                    },
                    "loginWithEmail": {
                        "type": "boolean"
                    },
                    "sslRequired": {
                        "type": "string"
                    },
                    "userFederationId": {
                        "type": "string"
                    }
                }
            },
            "AccountErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "AccountApiresponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "message": {
                        "type": "string",
                        "writeOnly": true
                    }
                }
            },
            "AccountCustomerdto": {
                "required": [
                    "createdAt",
                    "emailVerified",
                    "enabled",
                    "id",
                    "nickname",
                    "realm",
                    "realname",
                    "username",
                    "uuid",
                    "vendor"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/CustomerVendorDTO"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realm": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "realname": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AccountReq": {
                "required": [
                    "managerUuid"
                ],
                "type": "object",
                "properties": {
                    "managerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "planType": {
                        "type": "string",
                        "enum": [
                            "ZERO",
                            "SOLO",
                            "MINI",
                            "PRO",
                            "MAX"
                        ]
                    },
                    "name": {
                        "maxLength": 2147483647,
                        "minLength": 2,
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "maxLength": 2147483647,
                        "minLength": 3,
                        "type": "string"
                    },
                    "email": {
                        "maxLength": 2147483647,
                        "minLength": 3,
                        "type": "string"
                    },
                    "vendorTerms": {
                        "$ref": "#/components/schemas/VendorTermsCreateDTO"
                    }
                }
            },
            "AccountCustomercreatedto": {
                "title": "고객 생성 데이터",
                "required": [
                    "attributes",
                    "email",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "이메일"
                    },
                    "phone": {
                        "pattern": "^(0\\d{1,2}-?\\d{3,4}-?\\d{4}|(\\+\\d{2,3}|\\d{2,3}\\)|\\d{2,3})[ -]?\\d{1,2}[ -]?\\d{3,4}[ -]?\\d{4})$",
                        "type": "string",
                        "description": "전화번호"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingAddressDTO"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS(기본값: false)"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email(기본값: false)"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao(기본값: false)"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객의 추가 정보"
                        },
                        "description": "고객의 추가 정보"
                    }
                },
                "description": "고객 생성 데이터"
            },
            "AccountCycledto": {
                "required": [
                    "interval",
                    "period"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "period": {
                        "$ref": "#/components/schemas/AccountPerioddto"
                    }
                }
            },
            "AccountPerioddto": {
                "required": [
                    "label",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "AccountAppstoreordercreaterequestdto": {
                "required": [
                    "priceCode",
                    "productCode"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    }
                }
            },
            "AccountEnabledpaymentgatewaydto": {
                "required": [
                    "isBill",
                    "isTest",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "isTest": {
                        "type": "boolean"
                    },
                    "isBill": {
                        "type": "boolean"
                    }
                }
            },
            "UpdateEventTypes": {
                "required": [
                    "eventTypes"
                ],
                "type": "object",
                "properties": {
                    "eventTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_CREATED",
                                "ORDER_UPDATED",
                                "USAGE_ADDED",
                                "INVOICE_CREATED",
                                "INVOICE_UPDATED",
                                "INVOICE_DELETED",
                                "PAYMENT_COMPLETED",
                                "PAYMENT_FAILED",
                                "PAYMENT_CANCELED",
                                "PAYMENT_STANDBY",
                                "CUSTOMER_CREATED",
                                "CUSTOMER_UPDATED",
                                "CUSTOMER_DELETED",
                                "SUBSCRIPTION_CREATED",
                                "SUBSCRIPTION_UPDATED",
                                "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                                "PRODUCT_CREATED",
                                "PRODUCT_UPDATED",
                                "PRODUCT_DELETED",
                                "PRICE_CREATED",
                                "PRICE_UPDATED",
                                "PRICE_DELETED"
                            ]
                        }
                    }
                }
            },
            "Detail": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_CREATED",
                                "ORDER_UPDATED",
                                "USAGE_ADDED",
                                "INVOICE_CREATED",
                                "INVOICE_UPDATED",
                                "INVOICE_DELETED",
                                "PAYMENT_COMPLETED",
                                "PAYMENT_FAILED",
                                "PAYMENT_CANCELED",
                                "PAYMENT_STANDBY",
                                "CUSTOMER_CREATED",
                                "CUSTOMER_UPDATED",
                                "CUSTOMER_DELETED",
                                "SUBSCRIPTION_CREATED",
                                "SUBSCRIPTION_UPDATED",
                                "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                                "PRODUCT_CREATED",
                                "PRODUCT_UPDATED",
                                "PRODUCT_DELETED",
                                "PRICE_CREATED",
                                "PRICE_UPDATED",
                                "PRICE_DELETED"
                            ]
                        }
                    },
                    "url": {
                        "type": "string"
                    },
                    "secretKey": {
                        "type": "string"
                    }
                },
                "description": "웹훅 상세 정보"
            },
            "NotificationChannelUpdateDTO": {
                "required": [
                    "channelType"
                ],
                "type": "object",
                "properties": {
                    "channelType": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SLACK",
                            "KAKAO",
                            "SMS"
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "slackChannelId": {
                        "type": "string"
                    },
                    "slackChannelName": {
                        "type": "string"
                    },
                    "slackId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "NotificationUpdateDTO": {
                "required": [
                    "channels",
                    "types"
                ],
                "type": "object",
                "properties": {
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CREATED_CUSTOMER",
                                "DELETED_CUSTOMER",
                                "SUBSCRIPTION_RENEW_FAILED",
                                "OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_SUCCESS",
                                "REFUND_ORDER",
                                "EXCHANGE_ORDER",
                                "RETURN_ORDER",
                                "REQUEST_QUOTATION",
                                "CREATED_INVOICE"
                            ]
                        }
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationChannelUpdateDTO"
                        }
                    }
                }
            },
            "ApiResponseNotificationDTO": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "$ref": "#/components/schemas/NotificationDTO"
                    }
                }
            },
            "NotificationChannelDTO": {
                "required": [
                    "channelType",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "channelType": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SLACK",
                            "KAKAO",
                            "SMS"
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "slackChannelId": {
                        "type": "string"
                    },
                    "slackChannelName": {
                        "type": "string"
                    },
                    "slackId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "workspaceId": {
                        "type": "string"
                    },
                    "workspaceName": {
                        "type": "string"
                    }
                }
            },
            "NotificationDTO": {
                "required": [
                    "channels",
                    "code",
                    "id",
                    "types"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "channelDetail": {
                        "type": "string"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CREATED_CUSTOMER",
                                "DELETED_CUSTOMER",
                                "SUBSCRIPTION_RENEW_FAILED",
                                "OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_SUCCESS",
                                "REFUND_ORDER",
                                "EXCHANGE_ORDER",
                                "RETURN_ORDER",
                                "REQUEST_QUOTATION",
                                "CREATED_INVOICE"
                            ]
                        }
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationChannelDTO"
                        }
                    }
                },
                "description": "관련 데이터"
            },
            "Create": {
                "required": [
                    "eventTypes"
                ],
                "type": "object",
                "properties": {
                    "eventTypes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_CREATED",
                                "ORDER_UPDATED",
                                "USAGE_ADDED",
                                "INVOICE_CREATED",
                                "INVOICE_UPDATED",
                                "INVOICE_DELETED",
                                "PAYMENT_COMPLETED",
                                "PAYMENT_FAILED",
                                "PAYMENT_CANCELED",
                                "PAYMENT_STANDBY",
                                "CUSTOMER_CREATED",
                                "CUSTOMER_UPDATED",
                                "CUSTOMER_DELETED",
                                "SUBSCRIPTION_CREATED",
                                "SUBSCRIPTION_UPDATED",
                                "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                                "PRODUCT_CREATED",
                                "PRODUCT_UPDATED",
                                "PRODUCT_DELETED",
                                "PRICE_CREATED",
                                "PRICE_UPDATED",
                                "PRICE_DELETED"
                            ]
                        }
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "NotificationChannelCreateDTO": {
                "required": [
                    "channelType"
                ],
                "type": "object",
                "properties": {
                    "channelType": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SLACK",
                            "KAKAO",
                            "SMS"
                        ]
                    },
                    "email": {
                        "type": "string"
                    },
                    "slackChannelId": {
                        "type": "string"
                    },
                    "slackChannelName": {
                        "type": "string"
                    },
                    "slackId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "NotificationCreateDTO": {
                "required": [
                    "channels",
                    "types"
                ],
                "type": "object",
                "properties": {
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CREATED_CUSTOMER",
                                "DELETED_CUSTOMER",
                                "SUBSCRIPTION_RENEW_FAILED",
                                "OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_OUT_OF_STOCK",
                                "SUBSCRIPTION_RENEW_SUCCESS",
                                "REFUND_ORDER",
                                "EXCHANGE_ORDER",
                                "RETURN_ORDER",
                                "REQUEST_QUOTATION",
                                "CREATED_INVOICE"
                            ]
                        }
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationChannelCreateDTO"
                        }
                    }
                }
            },
            "ApiResponseUnit": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "$ref": "#/components/schemas/Unit"
                    }
                }
            },
            "Unit": {
                "type": "object"
            },
            "ListItem": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_CREATED",
                                "ORDER_UPDATED",
                                "USAGE_ADDED",
                                "INVOICE_CREATED",
                                "INVOICE_UPDATED",
                                "INVOICE_DELETED",
                                "PAYMENT_COMPLETED",
                                "PAYMENT_FAILED",
                                "PAYMENT_CANCELED",
                                "PAYMENT_STANDBY",
                                "CUSTOMER_CREATED",
                                "CUSTOMER_UPDATED",
                                "CUSTOMER_DELETED",
                                "SUBSCRIPTION_CREATED",
                                "SUBSCRIPTION_UPDATED",
                                "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                                "PRODUCT_CREATED",
                                "PRODUCT_UPDATED",
                                "PRODUCT_DELETED",
                                "PRICE_CREATED",
                                "PRICE_UPDATED",
                                "PRICE_DELETED"
                            ]
                        }
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "description": "목록용 웹훅"
            },
            "PageListItem": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListItem"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "RecordDetail": {
                "required": [
                    "eventType",
                    "processStatus"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "웹훅 발송 내역 번호",
                        "format": "int64"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "이벤트 타입",
                        "enum": [
                            "ORDER_CREATED",
                            "ORDER_UPDATED",
                            "USAGE_ADDED",
                            "INVOICE_CREATED",
                            "INVOICE_UPDATED",
                            "INVOICE_DELETED",
                            "PAYMENT_COMPLETED",
                            "PAYMENT_FAILED",
                            "PAYMENT_CANCELED",
                            "PAYMENT_STANDBY",
                            "CUSTOMER_CREATED",
                            "CUSTOMER_UPDATED",
                            "CUSTOMER_DELETED",
                            "SUBSCRIPTION_CREATED",
                            "SUBSCRIPTION_UPDATED",
                            "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                            "PRODUCT_CREATED",
                            "PRODUCT_UPDATED",
                            "PRODUCT_DELETED",
                            "PRICE_CREATED",
                            "PRICE_UPDATED",
                            "PRICE_DELETED"
                        ]
                    },
                    "processStatus": {
                        "type": "string",
                        "description": "전송 상태",
                        "enum": [
                            "SUCCESS",
                            "FAIL",
                            "PENDING"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성 일시",
                        "format": "date-time"
                    }
                },
                "description": "웹훅 발송 기록"
            },
            "Event": {
                "required": [
                    "description",
                    "domain",
                    "key",
                    "name",
                    "schema"
                ],
                "type": "object",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "도메인",
                        "enum": [
                            "ORDER",
                            "INVOICE",
                            "SUBSCRIPTION",
                            "PAYMENT",
                            "CUSTOMER",
                            "PRODUCT"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "이벤트",
                        "enum": [
                            "ORDER_CREATED",
                            "ORDER_UPDATED",
                            "USAGE_ADDED",
                            "INVOICE_CREATED",
                            "INVOICE_UPDATED",
                            "INVOICE_DELETED",
                            "PAYMENT_COMPLETED",
                            "PAYMENT_FAILED",
                            "PAYMENT_CANCELED",
                            "PAYMENT_STANDBY",
                            "CUSTOMER_CREATED",
                            "CUSTOMER_UPDATED",
                            "CUSTOMER_DELETED",
                            "SUBSCRIPTION_CREATED",
                            "SUBSCRIPTION_UPDATED",
                            "SUBSCRIPTION_PAYMENT_DUE_NOTIFICATION",
                            "PRODUCT_CREATED",
                            "PRODUCT_UPDATED",
                            "PRODUCT_DELETED",
                            "PRICE_CREATED",
                            "PRICE_UPDATED",
                            "PRICE_DELETED"
                        ]
                    },
                    "key": {
                        "type": "string",
                        "description": "이벤트 연동키"
                    },
                    "description": {
                        "type": "string",
                        "description": "이벤트 설명"
                    },
                    "schema": {
                        "type": "string",
                        "description": "스키마",
                        "enum": [
                            "ORDER",
                            "USAGE",
                            "INVOICE",
                            "PAYMENT",
                            "CUSTOMER",
                            "SUBSCRIPTION",
                            "PRODUCT",
                            "PRICE"
                        ]
                    }
                },
                "description": "웹훅 이벤트"
            },
            "SlackInfoDTO": {
                "required": [
                    "id",
                    "token",
                    "vendorUuid",
                    "workspaceId",
                    "workspaceName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "workspaceId": {
                        "type": "string"
                    },
                    "workspaceName": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "SlackChannelDTO": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SlackChannelListDTO": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SlackChannelDTO"
                        }
                    }
                }
            },
            "NotificationErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "CMSUpdateDTO": {
                "required": [
                    "accountHolderSocialSecurityNumber",
                    "bankAccount",
                    "bankAccountHolder",
                    "bankAccountHolderContactNumber",
                    "bankCode",
                    "companyName",
                    "contactNumber",
                    "corporateManager",
                    "division",
                    "extension",
                    "idKey"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "companyRegistrationNumber": {
                        "type": "string"
                    },
                    "contactNumber": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "corporateManager": {
                        "type": "string"
                    },
                    "accountHolderSocialSecurityNumber": {
                        "type": "string"
                    },
                    "bankCode": {
                        "type": "string",
                        "enum": [
                            "KDB",
                            "IBK",
                            "KB",
                            "KEB",
                            "SH",
                            "NH",
                            "WOORI",
                            "SC",
                            "HANMI",
                            "DGB",
                            "BNK_BS",
                            "KJB",
                            "JEJU",
                            "JB",
                            "BNK_KN",
                            "MG",
                            "CREDIT_UNION",
                            "POST",
                            "HANA",
                            "SHINHAN_UNIFIED",
                            "KBANK",
                            "KAKAO_BANK",
                            "TOSS_BANK"
                        ]
                    },
                    "bankAccount": {
                        "type": "string"
                    },
                    "bankAccountHolder": {
                        "type": "string"
                    },
                    "bankAccountHolderContactNumber": {
                        "type": "string"
                    },
                    "division": {
                        "type": "string",
                        "enum": [
                            "IN_WRITING",
                            "ELECTRONIC_SIGNATURE",
                            "TRANSCRIPT"
                        ]
                    },
                    "extension": {
                        "type": "string",
                        "enum": [
                            "JPG",
                            "JPEG",
                            "GIF",
                            "TIF",
                            "PDF",
                            "MP3",
                            "WAV",
                            "WMA",
                            "DER"
                        ]
                    }
                }
            },
            "PaygateInfoDTO": {
                "required": [
                    "isBill",
                    "isTest",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "isTest": {
                        "type": "boolean"
                    },
                    "isBill": {
                        "type": "boolean"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "secrets": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "PaymentViewUpdateRequestDTO": {
                "required": [
                    "editorContext",
                    "viewContext"
                ],
                "type": "object",
                "properties": {
                    "editorContext": {
                        "type": "string"
                    },
                    "viewContext": {
                        "type": "string"
                    }
                }
            },
            "PaymentViewResponseDTO": {
                "required": [
                    "createdAt",
                    "editorContext",
                    "inUse",
                    "modifiedAt",
                    "vendorUuid",
                    "viewContext",
                    "viewId",
                    "viewType"
                ],
                "type": "object",
                "properties": {
                    "viewId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "viewType": {
                        "type": "string"
                    },
                    "editorContext": {
                        "type": "string"
                    },
                    "viewContext": {
                        "type": "string"
                    },
                    "inUse": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PaymentViewUpdateInUseRequestDTO": {
                "required": [
                    "inUse"
                ],
                "type": "object",
                "properties": {
                    "inUse": {
                        "type": "boolean"
                    }
                }
            },
            "ApiResponseObject": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean"
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "response": {
                        "type": "object"
                    }
                }
            },
            "MoneyEmbeddable": {
                "required": [
                    "amount",
                    "currency",
                    "floatingPointMovedAmount",
                    "scaledAmount"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "scaledAmount": {
                        "type": "number"
                    },
                    "floatingPointMovedAmount": {
                        "type": "number"
                    }
                }
            },
            "Partner": {
                "required": [
                    "partnerOrderId",
                    "partnerUserId"
                ],
                "type": "object",
                "properties": {
                    "partnerOrderId": {
                        "type": "string"
                    },
                    "partnerUserId": {
                        "type": "string"
                    }
                }
            },
            "Product": {
                "required": [
                    "itemName",
                    "money",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "itemName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "amount": {
                        "type": "number",
                        "writeOnly": true
                    },
                    "quantity": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "money": {
                        "$ref": "#/components/schemas/MoneyEmbeddable"
                    }
                }
            },
            "CMSCreateDTO": {
                "required": [
                    "accountHolderSocialSecurityNumber",
                    "bankAccount",
                    "bankAccountHolder",
                    "bankAccountHolderContactNumber",
                    "bankCode",
                    "companyName",
                    "contactNumber",
                    "corporateManager",
                    "customer",
                    "discount",
                    "division",
                    "extension",
                    "idKey",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    },
                    "discount": {
                        "type": "number"
                    },
                    "companyRegistrationNumber": {
                        "type": "string"
                    },
                    "contactNumber": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "corporateManager": {
                        "type": "string"
                    },
                    "accountHolderSocialSecurityNumber": {
                        "type": "string"
                    },
                    "bankCode": {
                        "type": "string",
                        "enum": [
                            "KDB",
                            "IBK",
                            "KB",
                            "KEB",
                            "SH",
                            "NH",
                            "WOORI",
                            "SC",
                            "HANMI",
                            "DGB",
                            "BNK_BS",
                            "KJB",
                            "JEJU",
                            "JB",
                            "BNK_KN",
                            "MG",
                            "CREDIT_UNION",
                            "POST",
                            "HANA",
                            "SHINHAN_UNIFIED",
                            "KBANK",
                            "KAKAO_BANK",
                            "TOSS_BANK"
                        ]
                    },
                    "bankAccount": {
                        "type": "string"
                    },
                    "bankAccountHolder": {
                        "type": "string"
                    },
                    "bankAccountHolderContactNumber": {
                        "type": "string"
                    },
                    "division": {
                        "type": "string",
                        "enum": [
                            "IN_WRITING",
                            "ELECTRONIC_SIGNATURE",
                            "TRANSCRIPT"
                        ]
                    },
                    "extension": {
                        "type": "string",
                        "enum": [
                            "JPG",
                            "JPEG",
                            "GIF",
                            "TIF",
                            "PDF",
                            "MP3",
                            "WAV",
                            "WMA",
                            "DER"
                        ]
                    }
                }
            },
            "PayLinkDTO": {
                "type": "object"
            },
            "CardPaymentDTO": {
                "required": [
                    "cardNumber",
                    "cardQuota",
                    "customer",
                    "discount",
                    "expirationMonth",
                    "expirationYear",
                    "idKey",
                    "isBill",
                    "isMobile",
                    "isPoint",
                    "paymentGateway",
                    "paymentMethod",
                    "product",
                    "taxFreeAmount"
                ],
                "type": "object",
                "properties": {
                    "cardNumber": {
                        "type": "string"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "discount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number"
                    },
                    "taxFreeAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "cvc": {
                        "type": "string"
                    },
                    "isMobile": {
                        "type": "boolean"
                    },
                    "isBill": {
                        "type": "boolean"
                    },
                    "cardQuota": {
                        "type": "string"
                    },
                    "isPoint": {
                        "type": "boolean"
                    }
                }
            },
            "CancelRequestDTO": {
                "required": [
                    "idKey",
                    "requestPrice"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "requestPrice": {
                        "type": "number"
                    },
                    "refundAccount": {
                        "type": "string"
                    },
                    "refundAccountBank": {
                        "type": "string",
                        "enum": [
                            "KDB",
                            "IBK",
                            "KB",
                            "KEB",
                            "HOUSING",
                            "SH",
                            "NH",
                            "NH_BRANCH",
                            "NH_LIVESTOCK",
                            "WOORI",
                            "CHB",
                            "COMMERCIAL",
                            "SC",
                            "HANIL",
                            "SEOUL",
                            "SHINHAN",
                            "HANMI",
                            "DGB",
                            "BNK_BS",
                            "KJB",
                            "JEJU",
                            "JB",
                            "KANGWON",
                            "BNK_KN",
                            "BC",
                            "MG",
                            "CREDIT_UNION",
                            "MUTUAL_SAVINGS",
                            "CITI",
                            "HKSANGHAI",
                            "DEUTSCHE",
                            "ABN_AMRO",
                            "JP_MORGAN",
                            "MUFG",
                            "BOA",
                            "NFCF",
                            "BARO",
                            "POST",
                            "HANA",
                            "PEACE",
                            "SSG",
                            "SHINHAN_UNIFIED",
                            "KBANK",
                            "KAKAO_BANK",
                            "YUANTA",
                            "HYUNDAI",
                            "MIRAE_ASSET",
                            "KOREA_INVESTMENT",
                            "WOORI_INVESTMENT",
                            "HI_INVESTMENT",
                            "HYUNDAI_MOTOR",
                            "SK",
                            "DAISHIN",
                            "HANA_FINANCIAL",
                            "SHINHAN_INVESTMENT",
                            "DB",
                            "EUGENE",
                            "MERITZ",
                            "SHINYOUNG",
                            "DAEWOO",
                            "SAMSUNG",
                            "KYOBO",
                            "KIWOOM",
                            "EBEST",
                            "IM",
                            "HANWHA",
                            "NH_INVESTMENT",
                            "BOOKOOK",
                            "CAPE"
                        ]
                    },
                    "refundAccountName": {
                        "type": "string"
                    },
                    "option": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "PaymentViewCreateRequestDTO": {
                "required": [
                    "editorContext",
                    "viewContext",
                    "viewType"
                ],
                "type": "object",
                "properties": {
                    "viewType": {
                        "type": "string"
                    },
                    "editorContext": {
                        "type": "string"
                    },
                    "viewContext": {
                        "type": "string"
                    }
                }
            },
            "HPayRealTimePayDTO": {
                "required": [
                    "forceCl",
                    "isTest",
                    "mid",
                    "reqAmt"
                ],
                "type": "object",
                "properties": {
                    "Mid": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "ReqAmt": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "ForceCl": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "EdiDate": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "EncryptData": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "SubId": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "DepositNm": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "SubCoNo": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "SubCoNm": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "BankCd": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "AccntNo": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "AccntNm": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "Memo": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "MallReserved": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "isTest": {
                        "type": "boolean"
                    },
                    "reqAmt": {
                        "type": "string"
                    },
                    "forceCl": {
                        "type": "string"
                    },
                    "subId": {
                        "type": "string"
                    },
                    "depositNm": {
                        "type": "string"
                    },
                    "subCoNo": {
                        "type": "string"
                    },
                    "mid": {
                        "type": "string"
                    },
                    "mallReserved": {
                        "type": "string"
                    },
                    "ediDate": {
                        "type": "string"
                    },
                    "encryptData": {
                        "type": "string"
                    },
                    "bankCd": {
                        "type": "string"
                    },
                    "accntNo": {
                        "type": "string"
                    },
                    "subCoNm": {
                        "type": "string"
                    },
                    "memo": {
                        "type": "string"
                    },
                    "accntNm": {
                        "type": "string"
                    }
                }
            },
            "ReceiptUrlsRequestDTO": {
                "required": [
                    "idKeys",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "idKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ReceiptUrlsResponseDTO": {
                "required": [
                    "customer",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "receiptUrl": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    }
                }
            },
            "ApiResponseCancelResponse": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean"
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "response": {
                        "$ref": "#/components/schemas/CancelResponse"
                    }
                }
            },
            "CancelPaymentDTO": {
                "type": "object",
                "properties": {
                    "canceledAmount": {
                        "type": "number"
                    },
                    "tid": {
                        "type": "string"
                    },
                    "errorReturn": {
                        "type": "string"
                    },
                    "option": {
                        "type": "string"
                    },
                    "pgAuth": {
                        "type": "string"
                    },
                    "paymentReturn": {
                        "type": "string"
                    },
                    "paymentStatus": {
                        "type": "string",
                        "enum": [
                            "STANDBY",
                            "COMPLETE",
                            "CANCELED",
                            "PARTIAL_CANCELED",
                            "USER_CANCELED",
                            "CANCELED_FAIL",
                            "CANCEL_PROGRESS",
                            "FAILED",
                            "VIRTUAL_BANK_STANDBY",
                            "CMS_STANDBY"
                        ]
                    },
                    "canceledDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CancelResponse": {
                "type": "object",
                "properties": {
                    "tid": {
                        "type": "string"
                    },
                    "paymentReceiptUrl": {
                        "type": "string"
                    },
                    "cancelPayment": {
                        "$ref": "#/components/schemas/CancelPaymentDTO"
                    }
                }
            },
            "PaymentBillingDTO": {
                "required": [
                    "customer",
                    "discount",
                    "idKey",
                    "isMobile",
                    "partner",
                    "product",
                    "taxFreeAmount"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "partner": {
                        "$ref": "#/components/schemas/Partner"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "taxFreeAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number"
                    },
                    "discount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number"
                    },
                    "isMobile": {
                        "type": "boolean"
                    },
                    "option": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "PaymentPageRequestDTO": {
                "required": [
                    "page",
                    "size",
                    "sortDir"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sortDir": {
                        "type": "string",
                        "enum": [
                            "ORDER_ID",
                            "PG_ID",
                            "STEPPAY_ID",
                            "PRODUCT_NAME",
                            "PRICE",
                            "TYPE",
                            "CUSTOMER_NAME",
                            "PURCHASED_AT",
                            "PAYGATE",
                            "PAYMENT_METHOD",
                            "STATUS",
                            "CREATED_AT"
                        ]
                    },
                    "sort": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    }
                }
            },
            "Filter": {
                "type": "object",
                "properties": {
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_ID",
                            "CUSTOMER_ID",
                            "CUSTOMER_NAME",
                            "ID_KEY",
                            "VENDOR_UUID"
                        ]
                    },
                    "search": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NiceCmsDTO": {
                "required": [
                    "accountHolderSocialSecurityNumber",
                    "bankAccount",
                    "bankCode",
                    "companyName",
                    "corporateManager",
                    "date",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "corporateManager": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "companyRegistrationNumber": {
                        "type": "string"
                    },
                    "accountHolderSocialSecurityNumber": {
                        "type": "string"
                    },
                    "bankCode": {
                        "type": "string"
                    },
                    "bankAccount": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACCOUNT_PENDING",
                            "ACCOUNT_FAIL",
                            "ACCOUNT_SUCCESS",
                            "WITHDRAW_PENDING",
                            "WITHDRAW_FAIL",
                            "WITHDRAW_SUCCESS"
                        ]
                    },
                    "errorReturn": {
                        "type": "string"
                    }
                },
                "description": "NICE CMS 정보"
            },
            "PageResponseList": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponseList"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ResponseList": {
                "required": [
                    "canceledAmount",
                    "discount",
                    "paymentGateway",
                    "paymentMethod",
                    "paymentOnly",
                    "price",
                    "status",
                    "type",
                    "vendorUUID"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "string"
                    },
                    "pgId": {
                        "type": "string"
                    },
                    "steppayId": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "discount": {
                        "type": "number"
                    },
                    "priceCurrency": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ONE_SHOT",
                            "SUBSCRIBE"
                        ]
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "purchasedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "STANDBY",
                            "COMPLETE",
                            "CANCELED",
                            "PARTIAL_CANCELED",
                            "USER_CANCELED",
                            "CANCELED_FAIL",
                            "CANCEL_PROGRESS",
                            "FAILED",
                            "VIRTUAL_BANK_STANDBY",
                            "CMS_STANDBY"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentOnly": {
                        "type": "boolean"
                    },
                    "canceledAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "errorReason": {
                        "type": "string"
                    },
                    "receiptUrl": {
                        "type": "string"
                    },
                    "customerPhone": {
                        "type": "string"
                    },
                    "customerEmail": {
                        "type": "string"
                    },
                    "vendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "niceCMSDTO": {
                        "$ref": "#/components/schemas/NiceCmsDTO"
                    }
                }
            },
            "InternalPaymentDTO": {
                "required": [
                    "cancel",
                    "cancelHistory",
                    "customer",
                    "id",
                    "idKey",
                    "paidAmount",
                    "paymentGateway",
                    "paymentMethod",
                    "paymentOnly",
                    "product",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "paidAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "STANDBY",
                            "COMPLETE",
                            "CANCELED",
                            "PARTIAL_CANCELED",
                            "USER_CANCELED",
                            "CANCELED_FAIL",
                            "CANCEL_PROGRESS",
                            "FAILED",
                            "VIRTUAL_BANK_STANDBY",
                            "CMS_STANDBY"
                        ]
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentOnly": {
                        "type": "boolean"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "cancel": {
                        "$ref": "#/components/schemas/PaymentCancel"
                    },
                    "cancelHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CancelPaymentDTO"
                        }
                    },
                    "vBankDTO": {
                        "$ref": "#/components/schemas/VBankDTO"
                    },
                    "cmsDTO": {
                        "$ref": "#/components/schemas/NiceCmsDTO"
                    },
                    "partnerOrderId": {
                        "type": "string"
                    },
                    "partnerUserId": {
                        "type": "string"
                    },
                    "vbankDTO": {
                        "$ref": "#/components/schemas/VBankDTO"
                    }
                }
            },
            "VBankDTO": {
                "required": [
                    "accountName",
                    "accountNumber",
                    "bankDate",
                    "bankName"
                ],
                "type": "object",
                "properties": {
                    "bankCode": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "bankDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "가상 계좌 정보 (paymentMethod가 VBANK 일 때"
            },
            "PaymentErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "PaymentCustomer": {
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "PaymentReq": {
                "required": [
                    "customer",
                    "customerId",
                    "idKey",
                    "partner",
                    "paymentGateway",
                    "paymentMethodId",
                    "product",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "partner": {
                        "$ref": "#/components/schemas/Partner"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/PaymentCustomer"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pinCode": {
                        "type": "string"
                    },
                    "webAuthnIdKey": {
                        "type": "string"
                    }
                }
            },
            "PaymentRequestlistwithfilter": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ONE_SHOT",
                                "SUBSCRIBE"
                            ]
                        }
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "STANDBY",
                                "COMPLETE",
                                "CANCELED",
                                "PARTIAL_CANCELED",
                                "USER_CANCELED",
                                "CANCELED_FAIL",
                                "CANCEL_PROGRESS",
                                "FAILED",
                                "VIRTUAL_BANK_STANDBY",
                                "CMS_STANDBY"
                            ]
                        }
                    },
                    "paymentGateway": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "NAVER",
                                "DANAL",
                                "KAKAO",
                                "KG",
                                "KCP",
                                "NICE",
                                "JT",
                                "GOOGLE",
                                "BANKPAY",
                                "BLUEWALNUT",
                                "KSNET",
                                "TOSS",
                                "EXIMBAY",
                                "SETTLE",
                                "DAOUDATA",
                                "WELCOME",
                                "NICE_V2",
                                "STRIPE",
                                "PAYPLE",
                                "PAYPLE_GLOBAL",
                                "KICC",
                                "UNKNOWN"
                            ]
                        }
                    },
                    "paymentMethod": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CARD",
                                "VBANK",
                                "BANK",
                                "CELLPHONE",
                                "SIMPLE_PAY",
                                "CMS",
                                "CARD_BILL",
                                "CELLPHONE_BILL",
                                "CMS_BILL"
                            ]
                        }
                    },
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_ID",
                            "CUSTOMER_ID",
                            "CUSTOMER_NAME",
                            "ID_KEY",
                            "VENDOR_UUID"
                        ]
                    },
                    "search": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PaymentEnabledpaymentgatewaydto": {
                "required": [
                    "isBill",
                    "isTest",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "isTest": {
                        "type": "boolean"
                    },
                    "isBill": {
                        "type": "boolean"
                    }
                }
            },
            "PaymentCancel": {
                "required": [
                    "canceledAmount"
                ],
                "type": "object",
                "properties": {
                    "canceledAmount": {
                        "type": "number"
                    },
                    "lastCanceledDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "InternalWebHookRequestDTO": {
                "required": [
                    "amount",
                    "idKey",
                    "orderId",
                    "paymentGateway",
                    "paymentMethod",
                    "webHookType"
                ],
                "type": "object",
                "properties": {
                    "webHookType": {
                        "type": "string",
                        "enum": [
                            "PAYMENT",
                            "BILLKEY",
                            "VBANK",
                            "CANCELED",
                            "USER_CANCELED",
                            "FAILED",
                            "CMS"
                        ]
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "paymentInfo": {
                        "type": "string"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "amount": {
                        "type": "number"
                    },
                    "options": {
                        "type": "object"
                    }
                }
            },
            "BundleProductDTO": {
                "title": "번들 상품 정보",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "options": {
                        "type": "array",
                        "description": "상품 옵션 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupDTO"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "description": "상품 가격플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductPricedto"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    }
                },
                "description": "번들 상품 정보"
            },
            "CSItemDTO": {
                "required": [
                    "actor",
                    "category",
                    "createdAt",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "actor": {
                        "type": "string",
                        "enum": [
                            "SYSTEM",
                            "SELLER",
                            "BUYER"
                        ]
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "CANCELLATION",
                            "EXCHANGE",
                            "RETURN"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "CS기록"
            },
            "Claim": {
                "title": "청구 방식 정보",
                "required": [
                    "billingDate",
                    "methodType",
                    "whenToClaimType"
                ],
                "type": "object",
                "properties": {
                    "methodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "whenToClaimType": {
                        "type": "string",
                        "description": "후불인 경우, 언제 결제되는지",
                        "enum": [
                            "FIRST_PAYMENT",
                            "DATE"
                        ]
                    },
                    "billingDate": {
                        "type": "integer",
                        "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
                        "format": "int32"
                    },
                    "provideStartDay": {
                        "type": "integer",
                        "description": "서비스 제공기간 시작일",
                        "format": "int32"
                    }
                },
                "description": "청구 방식 정보"
            },
            "CountrySettingDTO": {
                "required": [
                    "countryCode",
                    "currencyCode",
                    "id",
                    "isDefault",
                    "taxRate",
                    "timezoneName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "timezoneName": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "taxRate": {
                        "type": "number"
                    }
                },
                "description": "국가 설정 정보"
            },
            "DemoCycle": {
                "required": [
                    "num",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "num": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    }
                },
                "description": "무료체험이 적용됐는지 적용 여부 및 기간"
            },
            "FirstSale": {
                "title": "첫 구매 할인 정보",
                "required": [
                    "enabled",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "첫 구매 할인 적용 여부"
                    },
                    "price": {
                        "type": "integer",
                        "description": "첫 구매 할인시 적용되는 할인 금액",
                        "format": "int64"
                    }
                },
                "description": "첫 구매 할인 정보"
            },
            "OptionCombinationDTO": {
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "HIDDEN"
                        ]
                    }
                },
                "description": "옵션 조합"
            },
            "OrderCustomerDTO": {
                "title": "주문 고객 정보",
                "required": [
                    "attributes",
                    "createdAt",
                    "id",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "고객 uuid",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "description": "고객 상태",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "전화번호"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingV1DTO"
                    },
                    "username": {
                        "type": "string",
                        "description": "고객 아이디"
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객 추가 데이터"
                        },
                        "description": "고객 추가 데이터"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "고객 생성 시점",
                        "format": "date-time"
                    }
                },
                "description": "주문 고객 정보"
            },
            "OrderItemUnitChangeHistoryV1DTO": {
                "title": "계정 수 변동 내역",
                "required": [
                    "changedCount",
                    "days"
                ],
                "type": "object",
                "properties": {
                    "changedCount": {
                        "type": "integer",
                        "description": "계정 수 증감량",
                        "format": "int64"
                    },
                    "days": {
                        "type": "integer",
                        "description": "요금 계산 기준 날짜",
                        "format": "int64"
                    }
                },
                "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)"
            },
            "OrderLogDTO": {
                "title": "주문 메모 정보",
                "required": [
                    "content",
                    "createdAt",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "메모 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "메모 타입",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "content": {
                        "type": "string",
                        "description": "메모 내용"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    }
                },
                "description": "주문 메모 목록"
            },
            "OrderPaymentDTO": {
                "title": "결제 상세 정보",
                "required": [
                    "amount",
                    "discount"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "description": "결제 수단",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "결제 금액",
                        "format": "int64"
                    },
                    "discount": {
                        "type": "integer",
                        "description": "할인 금액",
                        "format": "int64"
                    },
                    "paymentReturn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "PG사 반환값"
                        },
                        "description": "PG사 반환값"
                    },
                    "paymentReceiptUrl": {
                        "type": "string",
                        "description": "영수증 링크"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용한 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "cardNumber": {
                        "type": "string",
                        "description": "결제 정보(카드 번호 등)"
                    },
                    "vbankDTO": {
                        "$ref": "#/components/schemas/VBankDTO"
                    },
                    "niceCmsDTO": {
                        "$ref": "#/components/schemas/NiceCmsDTO"
                    },
                    "customerDTO": {
                        "$ref": "#/components/schemas/ProductCustomerdto"
                    },
                    "errorCode": {
                        "type": "string",
                        "description": "에러 코드(결제 실패시)"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "에러 메세지(결제 실패시)"
                    }
                },
                "description": "결제 상세 정보"
            },
            "OrderSubscriptionDTO": {
                "title": "주문 관련 구독 정보",
                "required": [
                    "id",
                    "interval",
                    "intervalCount",
                    "items",
                    "price",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "description": "구독 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemDTO"
                        }
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "구독 시작 시점",
                        "format": "date-time"
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "description": "최근 결제 시점",
                        "format": "date-time"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "description": "다음 결제 시점",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "구독 만료 시점",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "trialEndDate": {
                        "type": "string",
                        "description": "체험기간 종료 시점",
                        "format": "date-time"
                    }
                },
                "description": "부모 구독 정보(갱신 결제일 경우)"
            },
            "Plan": {
                "title": "가격 플랜 정보",
                "required": [
                    "description",
                    "isHiddenFromShop",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "플랜 이름"
                    },
                    "description": {
                        "type": "string",
                        "description": "플랜 설명"
                    },
                    "detailDescription": {
                        "type": "string",
                        "description": "자세히 보기"
                    },
                    "isHiddenFromShop": {
                        "type": "boolean",
                        "description": "플랜 사용 여부"
                    },
                    "adminName": {
                        "type": "string",
                        "description": "어드민 플랜 이름"
                    }
                },
                "description": "가격 플랜 정보"
            },
            "PriceAdditionalBillingDTO": {
                "title": "추가 과금 정보",
                "required": [
                    "id",
                    "ranges",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "추가 과금 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "추가 과금 타입",
                        "enum": [
                            "USAGE_BASED_WITH_RANGE",
                            "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
                        ]
                    },
                    "ranges": {
                        "type": "array",
                        "description": "추가 과금 범위 정보",
                        "items": {
                            "$ref": "#/components/schemas/PriceAdditionalBillingRangeDTO"
                        }
                    }
                },
                "description": "추가 과금 정보"
            },
            "PriceAdditionalBillingRangeDTO": {
                "title": "추가 과금 범위 정보",
                "required": [
                    "id",
                    "price",
                    "until"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "추가 과금 범위 번호",
                        "format": "int64"
                    },
                    "until": {
                        "type": "integer",
                        "description": "범위가 어디까지인지",
                        "format": "int64"
                    },
                    "price": {
                        "type": "number",
                        "description": "범위에 적용되는 금액"
                    }
                },
                "description": "추가 과금 범위 정보"
            },
            "PriceBundleDTO": {
                "required": [
                    "price",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/ProductProductdto"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    }
                },
                "description": "번들 플랜 - 번들 상품 구성"
            },
            "PriceOptionDTO": {
                "title": "가격 플랜 옵션 정보",
                "required": [
                    "id",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 이름"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "연관 상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "옵션 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "description": "가격",
                        "format": "int64"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "연관 가격플랜 코드"
                    },
                    "priceName": {
                        "type": "string",
                        "description": "연관 가격플랜 이름"
                    },
                    "productType": {
                        "type": "string",
                        "description": "연관 상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "recurringDTO": {
                        "$ref": "#/components/schemas/PriceRecurringDTO"
                    }
                },
                "description": "옵션 정보"
            },
            "PriceRecurringDTO": {
                "title": "구독 주기 정보",
                "required": [
                    "id",
                    "intervalCount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주기 정보 번호",
                        "format": "int64"
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "주기",
                        "format": "int32"
                    },
                    "aggregateUsageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "SUM",
                            "LAST_DURING_PERIOD",
                            "LAST_EVER",
                            "MAX"
                        ]
                    },
                    "interval": {
                        "type": "string",
                        "description": "주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "usageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "LICENSED",
                            "METERED"
                        ]
                    }
                },
                "description": "구독 주기 정보"
            },
            "PriceSetupOptionDTO": {
                "title": "기본료 정보",
                "required": [
                    "claimMethodType",
                    "id",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "기본료 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "기본료 이름"
                    },
                    "type": {
                        "type": "string",
                        "description": "기본료 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "description": "기본료 금액",
                        "format": "int64"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "기본료가 선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    }
                },
                "description": "기본료 정보"
            },
            "PriceVolumeDTO": {
                "required": [
                    "id",
                    "max",
                    "min",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "min": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "max": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deprecated": true
            },
            "ProductCategoryDTO": {
                "required": [
                    "categoryId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "description": "카테고리"
            },
            "ProductEventBadge": {
                "required": [
                    "event"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "시작 시점",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "끝 시점",
                        "format": "date-time"
                    }
                },
                "description": "이벤트 뱃지"
            },
            "ProductOptionDTO": {
                "title": "옵션 정보",
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 이름"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "parent": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ProductOptionGroupDTO": {
                "title": "상품 옵션 그룹 정보",
                "required": [
                    "id",
                    "name",
                    "options"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 그룹 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 그룹 이름"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionDTO"
                        }
                    },
                    "depth": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "옵션 그룹 정보"
            },
            "ProductWidgetDTO": {
                "type": "object",
                "properties": {
                    "useDemo": {
                        "type": "boolean"
                    },
                    "useEventBadge": {
                        "type": "boolean"
                    },
                    "useOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "useNotice": {
                        "type": "boolean"
                    }
                },
                "description": "상품 위젯 사용 여부"
            },
            "RelatedOrder": {
                "required": [
                    "code",
                    "createdAt",
                    "id",
                    "items",
                    "orderType",
                    "paidAmount",
                    "productName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 코드"
                    },
                    "orderType": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "결제 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목",
                        "items": {
                            "$ref": "#/components/schemas/RelatedOrderItem"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "관련 주문"
            },
            "RelatedOrderItem": {
                "title": "관련 주문 항목 상세정보",
                "required": [
                    "amount",
                    "code",
                    "orderItemId",
                    "plan",
                    "priceType",
                    "productName",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "integer",
                        "description": "주문 아이템 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 아이템 코드"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanV1DTO"
                    },
                    "status": {
                        "type": "string",
                        "description": "주문 항목 상태",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "amount": {
                        "type": "number",
                        "description": "가격"
                    },
                    "priceType": {
                        "type": "string",
                        "description": "가격 플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "parentOrderItemCode": {
                        "type": "string",
                        "description": "부모 아이템 코드"
                    }
                },
                "description": "주문 항목"
            },
            "Shipping": {
                "title": "배송지 정보",
                "required": [
                    "address1",
                    "address2",
                    "name",
                    "phone",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "수령인 이름"
                    },
                    "phone": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "수령인 전화번호"
                    },
                    "postcode": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "우편번호"
                    },
                    "address1": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "주소"
                    },
                    "address2": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "세부 주소"
                    },
                    "state": {
                        "type": "string",
                        "description": "주 정보"
                    },
                    "city": {
                        "type": "string",
                        "description": "도시 정보"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "국가 코드"
                    }
                },
                "description": "고객이 최근에 사용한 배송지"
            },
            "SubscriptionItemDTO": {
                "title": "구독 항목 정보",
                "required": [
                    "claimMethodType",
                    "featuredImageUrl",
                    "hasOptions",
                    "id",
                    "isAdditional",
                    "isOnetimePurchasable",
                    "keepWhenRenew",
                    "plan",
                    "price",
                    "priceType",
                    "productName",
                    "productType",
                    "quantity",
                    "selectedOptions",
                    "selectedProductOptionIds",
                    "selectedProductOptionPrice",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 항목 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "구독 항목 코드"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "productType": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "활성구독 제한 여부"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "이미지 URL"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string",
                        "description": "선택한 옵션 정보"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "description": "선택한 옵션들의 ID",
                        "items": {
                            "type": "integer",
                            "description": "선택한 옵션들의 ID",
                            "format": "int64"
                        }
                    },
                    "selectedProductOptionPrice": {
                        "type": "number",
                        "description": "선택한 옵션 추가 금액"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "isAdditional": {
                        "type": "boolean",
                        "description": "추가 구매 상품인지 여부"
                    },
                    "keepWhenRenew": {
                        "type": "boolean",
                        "description": "갱신될 때 유지되는 항목인지 여부"
                    },
                    "hasOptions": {
                        "type": "boolean",
                        "description": "옵션이 존재하는지 여부"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매 가능 수량",
                        "format": "int32"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격 플랜 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "항목 타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 정보",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "priceType": {
                        "type": "string",
                        "description": "가격 플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "selectedOptions": {
                        "type": "array",
                        "description": "선택된 옵션",
                        "items": {
                            "type": "integer",
                            "description": "선택된 옵션",
                            "format": "int64"
                        }
                    },
                    "parentSubscriptionItemCode": {
                        "type": "string",
                        "description": "파생 구독 아이템의 부모(번들) 아이템 코드"
                    }
                },
                "description": "구독 항목들"
            },
            "SubscriptionChangePaymentMethodDTO": {
                "title": "구독 결제수단 변경 정보",
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용할 PG. 지정하면 지정된 PG만 사용할 수 있습니다.",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    }
                },
                "description": "결제수단 변경 정보"
            },
            "BundleProductV1DTO": {
                "title": "번들 상품 정보",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "options": {
                        "type": "array",
                        "description": "상품 옵션 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "description": "상품 가격플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/PriceV1DTO"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    }
                },
                "description": "번들 상품 정보"
            },
            "ClaimV1DTO": {
                "title": "청구 방식 정보",
                "required": [
                    "billingDate",
                    "methodType",
                    "whenToClaimType"
                ],
                "type": "object",
                "properties": {
                    "methodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "whenToClaimType": {
                        "type": "string",
                        "description": "후불인 경우, 언제 결제되는지",
                        "enum": [
                            "FIRST_PAYMENT",
                            "DATE"
                        ]
                    },
                    "billingDate": {
                        "type": "integer",
                        "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
                        "format": "int32"
                    },
                    "provideStartDay": {
                        "type": "integer",
                        "description": "서비스 제공기간 시작일",
                        "format": "int32"
                    }
                },
                "description": "청구 방식 정보"
            },
            "CountrySettingV1DTO": {
                "required": [
                    "countryCode",
                    "currencyCode",
                    "id",
                    "isDefault",
                    "taxRate",
                    "timezoneName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "timezoneName": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "taxRate": {
                        "type": "number"
                    }
                },
                "description": "국가 설정 정보"
            },
            "FirstSaleV1DTO": {
                "title": "첫 구매 할인 정보",
                "required": [
                    "enabled",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "첫 구매 할인 적용 여부"
                    },
                    "price": {
                        "type": "integer",
                        "description": "첫 구매 할인시 적용되는 할인 금액",
                        "format": "int64"
                    }
                },
                "description": "첫 구매 할인 정보"
            },
            "NiceCmsV1DTO": {
                "required": [
                    "bankAccount",
                    "bankCode",
                    "companyName",
                    "corporateManager",
                    "date",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "corporateManager": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "companyRegistrationNumber": {
                        "type": "string"
                    },
                    "bankCode": {
                        "type": "string"
                    },
                    "bankAccount": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACCOUNT_PENDING",
                            "ACCOUNT_FAIL",
                            "ACCOUNT_SUCCESS",
                            "WITHDRAW_PENDING",
                            "WITHDRAW_FAIL",
                            "WITHDRAW_SUCCESS"
                        ]
                    },
                    "errorReturn": {
                        "type": "string"
                    }
                },
                "description": "NICE CMS 정보"
            },
            "OptionCombinationV1DTO": {
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "HIDDEN"
                        ]
                    }
                },
                "description": "옵션 조합"
            },
            "OrderCustomerV1DTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                },
                "description": "결제자 정보"
            },
            "OrderItemV1DTO": {
                "title": "주문 항목 정보",
                "required": [
                    "code",
                    "createdAt",
                    "currency",
                    "id",
                    "minimumQuantity",
                    "modifiedAt",
                    "orderItemCode",
                    "orderedPlanName",
                    "orderedProductName",
                    "orderedProductType",
                    "paidAmount",
                    "quantity",
                    "selectedProductOptionIds",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 항목 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 항목 코드"
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "결제 금액"
                    },
                    "currency": {
                        "type": "string",
                        "description": "통화 코드"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "price": {
                        "$ref": "#/components/schemas/PriceV1DTO"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductV1DTO"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 항목 타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "주문 항목 상태",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 이미지 URL"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string",
                        "description": "선택한 상품 옵션"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "description": "선택한 옵션 ID 목록",
                        "items": {
                            "type": "integer",
                            "description": "선택한 옵션 ID 목록",
                            "format": "int64"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "canceledDateTime": {
                        "type": "string",
                        "description": "취소 시점",
                        "format": "date-time"
                    },
                    "orderItemCode": {
                        "type": "string",
                        "description": "주문 항목 코드"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "orderedProductType": {
                        "type": "string",
                        "description": "주문 시점의 상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "orderedProductName": {
                        "type": "string",
                        "description": "주문 시점의 상품 이름"
                    },
                    "orderedPlanName": {
                        "type": "string",
                        "description": "주문 시점의 가격 플랜 이름"
                    },
                    "discountName": {
                        "type": "string",
                        "description": "할인 타입(주문 항목 타입이 DISCOUNT인 경우)"
                    },
                    "relatedOrderItemId": {
                        "type": "integer",
                        "description": "연관된 주문 항목 (주문 항목 타입이 DISCOUNT인 경우)",
                        "format": "int64"
                    },
                    "priceSetupType": {
                        "type": "string",
                        "description": "기본료 주문 항목인 경우 1회 또는 정기적으로 구분하는 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "demoCycle": {
                        "$ref": "#/components/schemas/DemoCycleDTO"
                    },
                    "usedCount": {
                        "type": "number",
                        "description": "사용량(사용량 기반 과금 상품인 경우)"
                    },
                    "usageFormula": {
                        "type": "string",
                        "description": "사용량 계산식"
                    },
                    "deliveryCode": {
                        "type": "string",
                        "description": "배송코드(매핑값)"
                    },
                    "histories": {
                        "type": "array",
                        "description": "CS기록",
                        "items": {
                            "$ref": "#/components/schemas/CSItemDTO"
                        }
                    },
                    "unitChangeHistory": {
                        "type": "array",
                        "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemUnitChangeHistoryV1DTO"
                        }
                    },
                    "unitCount": {
                        "type": "integer",
                        "description": "계정 수(계정 수 기반 과금 상품인 경우",
                        "format": "int64"
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "description": "최소 구매 가능 수량",
                        "format": "int32"
                    },
                    "maximumQuantity": {
                        "type": "integer",
                        "description": "최대 구매 가능 수량",
                        "format": "int32"
                    },
                    "parentOrderItemCode": {
                        "type": "string",
                        "description": "파생 주문 아이템의 부모(번들) 주문 아이템 코드"
                    }
                },
                "description": "주문 항목들"
            },
            "OrderLogV1DTO": {
                "title": "주문 메모 정보",
                "required": [
                    "content",
                    "createdAt",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "메모 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "메모 타입",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "content": {
                        "type": "string",
                        "description": "메모 내용"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    }
                },
                "description": "주문 메모 목록"
            },
            "OrderPaymentV1DTO": {
                "title": "결제 상세 정보",
                "required": [
                    "amount",
                    "discount"
                ],
                "type": "object",
                "properties": {
                    "paymentMethod": {
                        "type": "string",
                        "description": "결제 수단",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "결제 금액",
                        "format": "int64"
                    },
                    "discount": {
                        "type": "integer",
                        "description": "할인 금액",
                        "format": "int64"
                    },
                    "paymentReturn": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "PG사 반환값"
                        },
                        "description": "PG사 반환값"
                    },
                    "paymentReceiptUrl": {
                        "type": "string",
                        "description": "영수증 링크"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용한 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "cardNumber": {
                        "type": "string",
                        "description": "결제 정보(카드 번호 등)"
                    },
                    "vbankDTO": {
                        "$ref": "#/components/schemas/VBankV1DTO"
                    },
                    "niceCmsDTO": {
                        "$ref": "#/components/schemas/NiceCmsV1DTO"
                    },
                    "customerDTO": {
                        "$ref": "#/components/schemas/OrderCustomerV1DTO"
                    },
                    "errorCode": {
                        "type": "string",
                        "description": "에러 코드(결제 실패시)"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "에러 메세지(결제 실패시)"
                    }
                },
                "description": "결제 정보"
            },
            "OrderSubscriptionV1DTO": {
                "title": "주문 관련 구독 정보",
                "required": [
                    "id",
                    "interval",
                    "intervalCount",
                    "items",
                    "price",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "description": "구독 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemV1DTO"
                        }
                    },
                    "price": {
                        "$ref": "#/components/schemas/PriceV1DTO"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "구독 시작 시점",
                        "format": "date-time"
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "description": "최근 결제 시점",
                        "format": "date-time"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "description": "다음 결제 시점",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "구독 만료 시점",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "trialEndDate": {
                        "type": "string",
                        "description": "체험기간 종료 시점",
                        "format": "date-time"
                    }
                },
                "description": "부모 구독 정보(갱신 결제일 경우)"
            },
            "OrderV1DTO": {
                "title": "주문 상세 정보",
                "required": [
                    "discountedAmount",
                    "id",
                    "leftAmount",
                    "orderCode",
                    "orderId",
                    "orderLogs",
                    "paidAmount",
                    "productName",
                    "relatedOrders",
                    "returnedAmount",
                    "subscriptions",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "주문 번호 (이전 버전 호환)",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string",
                        "description": "주문 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "결제 금액"
                    },
                    "leftAmount": {
                        "type": "number",
                        "description": "남은 금액"
                    },
                    "returnedAmount": {
                        "type": "number",
                        "description": "환불 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목들",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemV1DTO"
                        }
                    },
                    "customer": {
                        "$ref": "#/components/schemas/OrderCustomerDTO"
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "청구서 사용시, 구매 기한",
                        "format": "date-time"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingV1DTO"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "payment": {
                        "$ref": "#/components/schemas/OrderPaymentV1DTO"
                    },
                    "orderLogs": {
                        "type": "array",
                        "description": "주문 메모 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderLogV1DTO"
                        }
                    },
                    "code": {
                        "type": "string"
                    },
                    "subscriptions": {
                        "type": "array",
                        "description": "관련 구독 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderSubscriptionV1DTO"
                        }
                    },
                    "parentSubscription": {
                        "$ref": "#/components/schemas/OrderSubscriptionV1DTO"
                    },
                    "invoiceId": {
                        "type": "integer",
                        "description": "청구서 ID",
                        "format": "int64"
                    },
                    "discountedAmount": {
                        "type": "number",
                        "description": "할인 금액"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "paymentDueDate": {
                        "type": "string",
                        "description": "결제일 지정",
                        "format": "date-time"
                    },
                    "idKey": {
                        "type": "string",
                        "description": "결제 정보 조회용 idKey"
                    },
                    "relatedOrders": {
                        "type": "array",
                        "description": "관련 주문",
                        "items": {
                            "$ref": "#/components/schemas/RelatedOrder"
                        }
                    },
                    "calculateStartDate": {
                        "type": "string",
                        "description": "합산 시작 시점",
                        "format": "date-time"
                    },
                    "calculateEndDate": {
                        "type": "string",
                        "description": "합산 끝 시점",
                        "format": "date-time"
                    },
                    "childOrders": {
                        "type": "array",
                        "description": "하위 벤더의 주문",
                        "items": {
                            "$ref": "#/components/schemas/OrderV1DTO"
                        }
                    }
                },
                "description": "관련 주문"
            },
            "PlanV1DTO": {
                "title": "가격 플랜 정보",
                "required": [
                    "description",
                    "isHiddenFromShop",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "플랜 이름"
                    },
                    "description": {
                        "type": "string",
                        "description": "플랜 설명"
                    },
                    "detailDescription": {
                        "type": "string",
                        "description": "자세히 보기"
                    },
                    "isHiddenFromShop": {
                        "type": "boolean",
                        "description": "플랜 사용 여부"
                    },
                    "adminName": {
                        "type": "string",
                        "description": "어드민 플랜 이름"
                    }
                },
                "description": "가격 플랜 정보"
            },
            "PriceAdditionalBillingRangeV1DTO": {
                "title": "추가 과금 범위 정보",
                "required": [
                    "id",
                    "price",
                    "until"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "추가 과금 범위 번호",
                        "format": "int64"
                    },
                    "until": {
                        "type": "integer",
                        "description": "범위가 어디까지인지",
                        "format": "int64"
                    },
                    "price": {
                        "type": "number",
                        "description": "범위에 적용되는 금액"
                    }
                },
                "description": "추가 과금 범위 정보"
            },
            "PriceAdditionalBillingV1DTO": {
                "title": "추가 과금 정보",
                "required": [
                    "id",
                    "ranges",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "추가 과금 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "추가 과금 타입",
                        "enum": [
                            "USAGE_BASED_WITH_RANGE",
                            "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
                        ]
                    },
                    "ranges": {
                        "type": "array",
                        "description": "추가 과금 범위 정보",
                        "items": {
                            "$ref": "#/components/schemas/PriceAdditionalBillingRangeV1DTO"
                        }
                    }
                },
                "description": "추가 과금 정보"
            },
            "PriceBundleV1DTO": {
                "required": [
                    "price",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/ProductV1DTO"
                    },
                    "price": {
                        "$ref": "#/components/schemas/PriceV1DTO"
                    }
                },
                "description": "번들 플랜 - 번들 상품 구성"
            },
            "PriceOptionV1DTO": {
                "title": "가격 플랜 옵션 정보",
                "required": [
                    "id",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 이름"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "연관 상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "옵션 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "description": "가격",
                        "format": "int64"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "연관 가격플랜 코드"
                    },
                    "priceName": {
                        "type": "string",
                        "description": "연관 가격플랜 이름"
                    },
                    "productType": {
                        "type": "string",
                        "description": "연관 상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "recurringDTO": {
                        "$ref": "#/components/schemas/PriceRecurringV1DTO"
                    }
                },
                "description": "옵션 정보",
                "deprecated": true
            },
            "PriceRecurringV1DTO": {
                "title": "구독 주기 정보",
                "required": [
                    "id",
                    "intervalCount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주기 정보 번호",
                        "format": "int64"
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "주기",
                        "format": "int32"
                    },
                    "aggregateUsageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "SUM",
                            "LAST_DURING_PERIOD",
                            "LAST_EVER",
                            "MAX"
                        ]
                    },
                    "interval": {
                        "type": "string",
                        "description": "주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "usageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "LICENSED",
                            "METERED"
                        ]
                    }
                },
                "description": "구독 주기 정보"
            },
            "PriceSetupOptionV1DTO": {
                "title": "기본료 정보",
                "required": [
                    "claimMethodType",
                    "id",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "기본료 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "기본료 이름"
                    },
                    "type": {
                        "type": "string",
                        "description": "기본료 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "description": "기본료 금액",
                        "format": "int64"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "기본료가 선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    }
                },
                "description": "기본료 정보"
            },
            "PriceV1DTO": {
                "title": "가격 플랜 정보",
                "required": [
                    "basicServing",
                    "billingDate",
                    "bundlePrices",
                    "code",
                    "enabledFirstSalePrice",
                    "firstSalePrice",
                    "id",
                    "maximumPurchaseQuantity",
                    "membershipExpirationDate",
                    "onetimeBundlePrice",
                    "options",
                    "order",
                    "price",
                    "type",
                    "volumes"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "가격 플랜 아이디",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "가격 플랜 코드"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "planName": {
                        "type": "string",
                        "description": "플랜명",
                        "deprecated": true
                    },
                    "planDescription": {
                        "type": "string",
                        "description": "플랜 설명",
                        "deprecated": true
                    },
                    "type": {
                        "type": "string",
                        "description": "플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "enabledFirstSalePrice": {
                        "type": "boolean",
                        "description": "첫 구매 할인 적용 여부",
                        "deprecated": true
                    },
                    "firstSalePrice": {
                        "type": "integer",
                        "description": "첫 구매 할인시 적용되는 할인 금액",
                        "format": "int64",
                        "deprecated": true
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "whenToClaimType": {
                        "type": "string",
                        "description": "후불인 경우, 언제 결제되는지",
                        "enum": [
                            "FIRST_PAYMENT",
                            "DATE"
                        ]
                    },
                    "billingDate": {
                        "type": "integer",
                        "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
                        "format": "int32"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매가능 수량",
                        "format": "int32"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "description": "구독 만기 기간",
                        "format": "int32"
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "description": "구독 만기 기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/PriceSetupOptionV1DTO"
                    },
                    "options": {
                        "type": "array",
                        "description": "옵션 정보",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceOptionV1DTO"
                        }
                    },
                    "volumes": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceVolumeV1DTO"
                        }
                    },
                    "additionalBilling": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingV1DTO"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringV1DTO"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanV1DTO"
                    },
                    "firstSale": {
                        "$ref": "#/components/schemas/FirstSaleV1DTO"
                    },
                    "claim": {
                        "$ref": "#/components/schemas/ClaimV1DTO"
                    },
                    "basicServing": {
                        "type": "integer",
                        "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
                        "format": "int32"
                    },
                    "bundlePrices": {
                        "type": "array",
                        "description": "번들 플랜 - 번들 상품 구성",
                        "items": {
                            "$ref": "#/components/schemas/PriceBundleV1DTO"
                        }
                    },
                    "onetimeBundlePrice": {
                        "type": "number",
                        "description": "번들 플랜 - 단건 상품 금액"
                    },
                    "order": {
                        "type": "integer",
                        "description": "우선 순위",
                        "format": "int32"
                    }
                },
                "description": "가격 플랜 정보"
            },
            "PriceVolumeV1DTO": {
                "required": [
                    "id",
                    "max",
                    "min",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "min": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "max": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "deprecated": true
            },
            "ProductCategoryV1DTO": {
                "required": [
                    "categoryId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "description": "카테고리"
            },
            "ProductEventBadgeV1DTO": {
                "title": "첫 구매 할인 정보",
                "required": [
                    "event"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "시작 시점",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "끝 시점",
                        "format": "date-time"
                    }
                },
                "description": "이벤트 뱃지",
                "deprecated": true
            },
            "ProductOptionGroupV1DTO": {
                "title": "상품 옵션 그룹 정보",
                "required": [
                    "id",
                    "name",
                    "options"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 그룹 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 그룹 이름"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionV1DTO"
                        }
                    },
                    "depth": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "옵션 그룹 정보"
            },
            "ProductOptionV1DTO": {
                "title": "옵션 정보",
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "옵션 이름"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "parent": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ProductV1DTO": {
                "title": "상품 상세 정보",
                "required": [
                    "categories",
                    "code",
                    "combinedProducts",
                    "createdAt",
                    "demoPeriod",
                    "demoPeriodUnit",
                    "enabledDemo",
                    "eventBadge",
                    "id",
                    "isOnetimePurchasable",
                    "optionCombinations",
                    "optionGroups",
                    "prices",
                    "productOrder",
                    "status",
                    "useCombination",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "상품 아이디",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "subTitle": {
                        "type": "string",
                        "description": "부제목"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 대표 이미지 URL"
                    },
                    "imageUrls": {
                        "type": "array",
                        "description": "상품 이미지 URL",
                        "items": {
                            "type": "string",
                            "description": "상품 이미지 URL"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "summary": {
                        "type": "string",
                        "description": "상품 요약"
                    },
                    "reasonOfReject": {
                        "type": "string",
                        "description": "상품 승인 거절 사유"
                    },
                    "sku": {
                        "type": "string",
                        "description": "SKU",
                        "deprecated": true
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "재고 수량",
                        "format": "int32"
                    },
                    "combinedProducts": {
                        "type": "array",
                        "description": "번들 상품 정보",
                        "items": {
                            "$ref": "#/components/schemas/BundleProductV1DTO"
                        }
                    },
                    "optionGroups": {
                        "type": "array",
                        "description": "옵션 그룹 정보",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupV1DTO"
                        }
                    },
                    "useCombination": {
                        "type": "boolean",
                        "description": "조합형 옵션 사용 여부"
                    },
                    "optionCombinations": {
                        "type": "array",
                        "description": "옵션 조합",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationV1DTO"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "description": "가격 플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/PriceV1DTO"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정 시점",
                        "format": "date-time"
                    },
                    "enabledDemo": {
                        "type": "boolean",
                        "description": "체험기간 활성화 여부"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "description": "체험 기간",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "description": "체험 기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "description": "카테고리",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategoryV1DTO"
                        }
                    },
                    "vendorUuid": {
                        "type": "string",
                        "description": "가맹점 UUID",
                        "format": "uuid"
                    },
                    "productOrder": {
                        "type": "integer",
                        "description": "순서",
                        "format": "int32"
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "활성 구독 제한",
                        "deprecated": true
                    },
                    "eventBadge": {
                        "type": "array",
                        "description": "이벤트 뱃지",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/ProductEventBadgeV1DTO"
                        }
                    },
                    "notice": {
                        "type": "string",
                        "description": "유의 사항",
                        "deprecated": true
                    },
                    "useWidget": {
                        "$ref": "#/components/schemas/ProductWidgetV1DTO"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "그룹 ID",
                        "format": "int64",
                        "deprecated": true
                    },
                    "countrySetting": {
                        "$ref": "#/components/schemas/CountrySettingV1DTO"
                    }
                },
                "description": "상품 정보"
            },
            "ProductWidgetV1DTO": {
                "type": "object",
                "properties": {
                    "useDemo": {
                        "type": "boolean"
                    },
                    "useEventBadge": {
                        "type": "boolean"
                    },
                    "useOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "useNotice": {
                        "type": "boolean"
                    }
                },
                "description": "상품 위젯 사용 여부",
                "deprecated": true
            },
            "ShippingV1DTO": {
                "title": "배송지 정보",
                "required": [
                    "address1",
                    "address2",
                    "name",
                    "phone",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "수령인 이름"
                    },
                    "phone": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "수령인 전화번호"
                    },
                    "postcode": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "우편번호"
                    },
                    "address1": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "주소"
                    },
                    "address2": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string",
                        "description": "세부 주소"
                    },
                    "state": {
                        "type": "string",
                        "description": "주 정보"
                    },
                    "city": {
                        "type": "string",
                        "description": "도시 정보"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "국가 코드"
                    }
                },
                "description": "고객이 최근에 사용한 배송 정보 - 주소"
            },
            "SubscriptionItemV1DTO": {
                "title": "구독 항목 정보",
                "required": [
                    "claimMethodType",
                    "featuredImageUrl",
                    "hasOptions",
                    "id",
                    "isAdditional",
                    "isOnetimePurchasable",
                    "keepWhenRenew",
                    "plan",
                    "price",
                    "priceType",
                    "productName",
                    "productType",
                    "quantity",
                    "selectedOptions",
                    "selectedProductOptionIds",
                    "selectedProductOptionPrice",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 항목 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "구독 항목 코드"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "productType": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "활성구독 제한 여부"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "이미지 URL"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string",
                        "description": "선택한 옵션 정보"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "description": "선택한 옵션들의 ID",
                        "items": {
                            "type": "integer",
                            "description": "선택한 옵션들의 ID",
                            "format": "int64"
                        }
                    },
                    "selectedProductOptionPrice": {
                        "type": "number",
                        "description": "선택한 옵션 추가 금액"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/PlanV1DTO"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "isAdditional": {
                        "type": "boolean",
                        "description": "추가 구매 상품인지 여부"
                    },
                    "keepWhenRenew": {
                        "type": "boolean",
                        "description": "갱신될 때 유지되는 항목인지 여부"
                    },
                    "hasOptions": {
                        "type": "boolean",
                        "description": "옵션이 존재하는지 여부"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매 가능 수량",
                        "format": "int32"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격 플랜 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "항목 타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 정보",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "priceType": {
                        "type": "string",
                        "description": "가격 플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "selectedOptions": {
                        "type": "array",
                        "description": "선택된 옵션",
                        "items": {
                            "type": "integer",
                            "description": "선택된 옵션",
                            "format": "int64"
                        }
                    },
                    "parentSubscriptionItemCode": {
                        "type": "string",
                        "description": "파생 구독 아이템의 부모(번들) 아이템 코드"
                    }
                },
                "description": "구독 항목들"
            },
            "VBankV1DTO": {
                "required": [
                    "accountName",
                    "accountNumber",
                    "bankDate",
                    "bankName"
                ],
                "type": "object",
                "properties": {
                    "bankCode": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "bankDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "가상 계좌 정보 (paymentMethod가 VBANK 일 때"
            },
            "CustomerPaymentMethodV1DTO": {
                "title": "결제 수단 정보",
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용한 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "결제수단 정보(카드번호 등)"
                    }
                },
                "description": "연관 결제수단"
            },
            "SubscriptionCustomerV1DTO": {
                "title": "구독 고객 정보",
                "required": [
                    "attributes",
                    "id",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "고객 UUID",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "status": {
                        "type": "string",
                        "description": "고객 상태",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "username": {
                        "type": "string",
                        "description": "고객 아이디"
                    },
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "전화번호"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingV1DTO"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객 추가 데이터"
                        },
                        "description": "고객 추가 데이터"
                    }
                },
                "description": "고객 정보"
            },
            "SubscriptionV1DTO": {
                "title": "구독 상세 정보",
                "required": [
                    "currentPeriod",
                    "customer",
                    "id",
                    "interval",
                    "intervalCount",
                    "price",
                    "recurringCount",
                    "relatedOrders",
                    "startDate",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "price": {
                        "$ref": "#/components/schemas/PriceV1DTO"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "시작 시점",
                        "format": "date-time"
                    },
                    "trialPeriod": {
                        "$ref": "#/components/schemas/ProductPerioddto"
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "description": "최근 결제 시점",
                        "format": "date-time"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "description": "다음 결제 시점",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "종료일",
                        "format": "date-time"
                    },
                    "parentOrder": {
                        "$ref": "#/components/schemas/OrderV1DTO"
                    },
                    "items": {
                        "type": "array",
                        "description": "구독 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemV1DTO"
                        }
                    },
                    "customer": {
                        "$ref": "#/components/schemas/SubscriptionCustomerV1DTO"
                    },
                    "relatedOrders": {
                        "type": "array",
                        "description": "관련 주문",
                        "items": {
                            "$ref": "#/components/schemas/OrderV1DTO"
                        }
                    },
                    "pausedDateTime": {
                        "type": "string",
                        "description": "일시정지 시점",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/CustomerPaymentMethodV1DTO"
                    },
                    "originNextPaymentDate": {
                        "type": "string",
                        "description": "최초 다음 결제 시점 - nextPaymentDate 는 변경될 수 있기 때문에 변경 전 데이터를 저장합니다.",
                        "format": "date-time"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/ShippingV1DTO"
                    },
                    "canceledVia": {
                        "type": "string",
                        "description": "구독이 취소되었을 때 어떤 경로로 취소되었는지 정보",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "recurringCount": {
                        "type": "integer",
                        "description": "구독이 몇번 갱신되었는지 나타내는 정보",
                        "format": "int32"
                    },
                    "currentPeriod": {
                        "$ref": "#/components/schemas/ProductPerioddto"
                    }
                }
            },
            "SubscriptionItemReplaceDTO": {
                "title": "구독 항목 교체 정보",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 항목 번호",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "description": "선택한 상품 옵션 정보",
                        "items": {
                            "type": "integer",
                            "description": "선택한 상품 옵션 정보",
                            "format": "int64"
                        }
                    }
                }
            },
            "SubscriptionItemChangeDTO": {
                "title": "구독 항목 수정 정보",
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "selectedProductOptions": {
                        "type": "array",
                        "description": "선택한 상품 옵션 정보",
                        "items": {
                            "type": "integer",
                            "description": "선택한 상품 옵션 정보",
                            "format": "int64"
                        }
                    }
                }
            },
            "SubscriptionChangeRecurringDTO": {
                "title": "구독 주기 변경 정보",
                "required": [
                    "interval",
                    "intervalCount"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    }
                },
                "description": "변경할 주기 정보"
            },
            "OptionCombinationCreateDTO": {
                "required": [
                    "addQuantity",
                    "optionIds",
                    "price",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "optionIds": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "addQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "HIDDEN"
                        ]
                    }
                },
                "description": "옵션 조합"
            },
            "ProductOptionCreateDTO": {
                "required": [
                    "addQuantity",
                    "groupName",
                    "key",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "조합형 옵션 사용시 무시됩니다.",
                        "format": "int32"
                    },
                    "addQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number",
                        "description": "조합형 옵션 사용시 무시됩니다."
                    },
                    "key": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "description": "세부 옵션"
            },
            "ProductOptionGroupCreateDTO": {
                "required": [
                    "name",
                    "options",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SELECT",
                            "COLOR",
                            "PRODUCT"
                        ]
                    },
                    "options": {
                        "type": "array",
                        "description": "세부 옵션",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionCreateDTO"
                        }
                    }
                },
                "description": "옵션 그룹 수정 데이터"
            },
            "ProductUpdateDTO": {
                "title": "상품 수정 데이터",
                "required": [
                    "categoryIds",
                    "combinedProducts",
                    "demoPeriod",
                    "eventBadge",
                    "productOrder",
                    "subTitle"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "subTitle": {
                        "type": "string",
                        "description": "부제목"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 대표 이미지 URL"
                    },
                    "imageUrls": {
                        "type": "array",
                        "description": "상품 이미지 URL",
                        "items": {
                            "type": "string",
                            "description": "상품 이미지 URL"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "summary": {
                        "type": "string",
                        "description": "상품 요약"
                    },
                    "reasonOfReject": {
                        "type": "string",
                        "description": "상품 승인 거절 사유"
                    },
                    "sku": {
                        "type": "string",
                        "description": "SKU"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "재고 수량",
                        "format": "int32"
                    },
                    "eventBadge": {
                        "type": "array",
                        "description": "이벤트 뱃지",
                        "items": {
                            "$ref": "#/components/schemas/ProductEventBadge"
                        }
                    },
                    "notice": {
                        "type": "string",
                        "description": "유의 사항"
                    },
                    "productOrder": {
                        "type": "integer",
                        "description": "순서",
                        "format": "int32"
                    },
                    "enabledDemo": {
                        "type": "boolean",
                        "description": "체험기간 활성 여부"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "description": "체험기간",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "description": "체험기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "combinedProducts": {
                        "type": "array",
                        "description": "번들 상품 번호",
                        "items": {
                            "type": "integer",
                            "description": "번들 상품 번호",
                            "format": "int64"
                        }
                    },
                    "optionGroups": {
                        "type": "array",
                        "description": "옵션 그룹 수정 데이터",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
                        }
                    },
                    "useCombination": {
                        "type": "boolean",
                        "description": "조합형 옵션 사용 여부"
                    },
                    "optionCombinations": {
                        "type": "array",
                        "description": "옵션 조합",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationCreateDTO"
                        }
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "1회 구매 상품"
                    },
                    "useWidget": {
                        "$ref": "#/components/schemas/ProductWidgetCreatDTO"
                    },
                    "categoryIds": {
                        "type": "array",
                        "description": "카테고리 리스트 아이디",
                        "items": {
                            "type": "integer",
                            "description": "카테고리 리스트 아이디",
                            "format": "int64"
                        }
                    },
                    "countrySettingId": {
                        "type": "integer",
                        "description": "결제 국가 설정 ID",
                        "format": "int64"
                    }
                },
                "description": "상품 수정 데이터"
            },
            "ProductWidgetCreatDTO": {
                "type": "object",
                "properties": {
                    "useDemo": {
                        "type": "boolean"
                    },
                    "useEventBadge": {
                        "type": "boolean"
                    },
                    "useOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "useNotice": {
                        "type": "boolean"
                    }
                },
                "description": "상품 위젯 사용 여부"
            },
            "PriceAdditionalBillingRangeCreateDTO": {
                "title": "추가 과금 생성 정보",
                "required": [
                    "price",
                    "until"
                ],
                "type": "object",
                "properties": {
                    "until": {
                        "type": "integer",
                        "description": "범위가 어디까지인지. -1 이면 무한대의 범위를 나타내며, -1 값은 배열에 적어도 하나 있어야 합니다.",
                        "format": "int64"
                    },
                    "price": {
                        "type": "number",
                        "description": "범위에 적용되는 금액"
                    }
                },
                "description": "추가 과금 범위 정보"
            },
            "PriceAdditionalBillingUpdateDTO": {
                "title": "추가 과금 수정 정보",
                "required": [
                    "id",
                    "ranges",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "추가 과금 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "추가 과금 타입",
                        "enum": [
                            "USAGE_BASED_WITH_RANGE",
                            "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
                        ]
                    },
                    "ranges": {
                        "type": "array",
                        "description": "추가 과금 범위 정보",
                        "items": {
                            "$ref": "#/components/schemas/PriceAdditionalBillingRangeCreateDTO"
                        }
                    }
                },
                "description": "추가 과금 수정 정보"
            },
            "PriceOptionUpdateDTO": {
                "title": "가격 플랜 옵션 수정 정보",
                "required": [
                    "id",
                    "priceCode",
                    "productCode",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "옵션 번호",
                        "format": "int64"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "옵션 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격플랜 코드"
                    }
                },
                "description": "가격플랜 옵션 수정 정보",
                "deprecated": true
            },
            "PriceRecurringUpdateDTO": {
                "title": "구독 주기 수정 정보",
                "required": [
                    "aggregateUsageType",
                    "id",
                    "interval",
                    "intervalCount",
                    "usageType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주기 정보 번호",
                        "format": "int64"
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "주기",
                        "format": "int32"
                    },
                    "interval": {
                        "type": "string",
                        "description": "주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "aggregateUsageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "SUM",
                            "LAST_DURING_PERIOD",
                            "LAST_EVER",
                            "MAX"
                        ]
                    },
                    "usageType": {
                        "type": "string",
                        "deprecated": true,
                        "enum": [
                            "LICENSED",
                            "METERED"
                        ]
                    }
                },
                "description": "구독 주기 수정 정보"
            },
            "PriceSetupOptionUpdateDTO": {
                "title": "기본료 수정 정보",
                "required": [
                    "id",
                    "name",
                    "price",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "기본료 정보 번호",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "기본료 이름"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "기본료 수정 정보"
            },
            "PriceUpdateDTO": {
                "title": "가격플랜 수정 데이터",
                "required": [
                    "basicServing",
                    "plan",
                    "price",
                    "type",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "price": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "가격"
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "firstSale": {
                        "$ref": "#/components/schemas/FirstSale"
                    },
                    "claim": {
                        "$ref": "#/components/schemas/Claim"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매 수량",
                        "format": "int32"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "description": "구독 만기 기간",
                        "format": "int32",
                        "deprecated": true
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "description": "구독 만기 기간 단위",
                        "deprecated": true,
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "expiryPaymentCount": {
                        "type": "integer",
                        "description": "구독 만료되는 결제 횟수",
                        "format": "int32"
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/PriceSetupOptionUpdateDTO"
                    },
                    "options": {
                        "type": "array",
                        "description": "가격플랜 옵션 수정 정보",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceOptionUpdateDTO"
                        }
                    },
                    "volumes": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceVolumeUpdateDTO"
                        }
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringUpdateDTO"
                    },
                    "additionalBilling": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingUpdateDTO"
                    },
                    "basicServing": {
                        "type": "integer",
                        "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
                        "format": "int32"
                    },
                    "isRepresentative": {
                        "type": "boolean",
                        "description": "대표 가격 지정 - 스텝샵에서 기본 가격으로 설정됩니다."
                    },
                    "bundlePrices": {
                        "type": "array",
                        "description": "번들 가격 코드 - 번들로 만들 가격 코드를 입력합니다.",
                        "items": {
                            "type": "string",
                            "description": "번들 가격 코드 - 번들로 만들 가격 코드를 입력합니다."
                        }
                    },
                    "onetimeBundlePrice": {
                        "type": "number",
                        "description": "번들 플랜 설정 - 번들 플랜에 포함된 단건 가격이 설정됩니다."
                    },
                    "type": {
                        "type": "string",
                        "description": "가격 플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    }
                },
                "description": "가격플랜 수정 데이터"
            },
            "PriceVolumeUpdateDTO": {
                "required": [
                    "id",
                    "max",
                    "min",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "min": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "max": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number"
                    }
                },
                "deprecated": true
            },
            "ApiResponseBoolean": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "type": "boolean",
                        "description": "관련 데이터"
                    }
                }
            },
            "InvoiceProductDTO": {
                "title": "청구서 상품 및 가격플랜 정보",
                "required": [
                    "minimumQuantity",
                    "priceCode",
                    "productCode"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격 플랜 코드"
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "description": "최소 수량. 청구서를 받은 고객은 이 수량보다 적은 수량으로 구매할 수 없습니다.",
                        "format": "int32"
                    },
                    "maximumQuantity": {
                        "type": "integer",
                        "description": "최대 수량. 청구서를 받은 고객은 이 수량보다 많은 수량으로 구매할 수 없습니다.",
                        "format": "int32"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    }
                },
                "description": "청구서 상품 및 가격 플랜 목록"
            },
            "InvoiceUpdateDTO": {
                "title": "청구서 수정 데이터",
                "required": [
                    "customerId",
                    "discount",
                    "id",
                    "products",
                    "publishMethods",
                    "publishType",
                    "purchaseDeadline"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "청구서 번호",
                        "format": "int64"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "청구서 받을 고객 번호",
                        "format": "int64"
                    },
                    "products": {
                        "type": "array",
                        "description": "청구서 상품 및 가격 플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceProductDTO"
                        }
                    },
                    "publishType": {
                        "type": "string",
                        "description": "청구서 발행 타입",
                        "enum": [
                            "NOW",
                            "RESERVATION"
                        ]
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "구매 가능 기한",
                        "format": "date-time"
                    },
                    "reservationAt": {
                        "type": "string",
                        "description": "예약 발송 시점",
                        "format": "date-time"
                    },
                    "publishMethods": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "발송 수단 목록",
                        "items": {
                            "type": "string",
                            "description": "발송 수단 목록",
                            "enum": [
                                "KAKAO",
                                "SMS",
                                "EMAIL"
                            ]
                        }
                    },
                    "discount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "할인 금액"
                    },
                    "memoToCustomer": {
                        "type": "string",
                        "description": "청구서 메모"
                    }
                },
                "description": "청구서 수정 데이터"
            },
            "SubscriptionLogUpdateDTO": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "LogRequestDTO": {
                "required": [
                    "content"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    }
                }
            },
            "ProductStatusUpdateDTO": {
                "title": "상품 수정 데이터",
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    }
                }
            },
            "CategoryUpsertDTO": {
                "required": [
                    "name",
                    "order",
                    "visibleOnMyStoreBreadcrumb"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "visibleOnMyStoreBreadcrumb": {
                        "type": "boolean"
                    },
                    "order": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ApiResponseString": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "type": "string",
                        "description": "관련 데이터"
                    }
                }
            },
            "OrderLogUpdateDTO": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "OrderProductOptionUpdateDTO": {
                "required": [
                    "orderItemCode",
                    "productOptionIds"
                ],
                "type": "object",
                "properties": {
                    "orderItemCode": {
                        "type": "string"
                    },
                    "productOptionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "RecipientDTO": {
                "required": [
                    "address1",
                    "address2",
                    "name",
                    "phone",
                    "postcode"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    }
                }
            },
            "ReturnPatch": {
                "required": [
                    "orderCode",
                    "orderItemCodes",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "CSHistorySingleDTO": {
                "required": [
                    "actor",
                    "createdAt",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "actor": {
                        "type": "string",
                        "enum": [
                            "SYSTEM",
                            "SELLER",
                            "BUYER"
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubStatusTypeInterface"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CSItemSingleDTO": {
                "required": [
                    "category",
                    "histories",
                    "orderCode",
                    "orderItemCode",
                    "status",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCode": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "CANCELLATION",
                            "EXCHANGE",
                            "RETURN"
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubStatusTypeInterface"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CSHistorySingleDTO"
                        }
                    }
                }
            },
            "SubStatusTypeInterface": {
                "required": [
                    "description",
                    "endCS",
                    "endOrder",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "endOrder": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endCS": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ExchangePatch": {
                "required": [
                    "orderCode",
                    "orderItemCodes",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "CountrySettingUpdateDTO": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "timezoneName": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "taxRate": {
                        "type": "number"
                    }
                }
            },
            "ShippingListUpdateDTO": {
                "required": [
                    "isDefaultAddress",
                    "label",
                    "shipping"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "isDefaultAddress": {
                        "type": "boolean"
                    }
                }
            },
            "CartItemModifyRequestDTO": {
                "required": [
                    "currency",
                    "priceCode",
                    "productCode",
                    "quantity",
                    "selectedOptions"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selectedOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "CartItemCache": {
                "required": [
                    "claim",
                    "currency",
                    "maximumPurchaseQuantity",
                    "priceCode",
                    "productCode",
                    "quantity",
                    "selectedOptionPrice",
                    "selectedOptions",
                    "selectedOptionsLabel"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringDTO"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "demoCycle": {
                        "$ref": "#/components/schemas/DemoCycle"
                    },
                    "firstSale": {
                        "$ref": "#/components/schemas/FirstSale"
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/PriceSetupOptionDTO"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "claim": {
                        "$ref": "#/components/schemas/Claim"
                    },
                    "id": {
                        "type": "string"
                    },
                    "selectedOptionsLabel": {
                        "type": "string"
                    },
                    "selectedOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "selectedOptionPrice": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "selectedPrice": {
                        "$ref": "#/components/schemas/CartItemPriceCache"
                    },
                    "productSnapshot": {
                        "$ref": "#/components/schemas/CartItemSnapshotCache"
                    }
                }
            },
            "CartItemPriceCache": {
                "required": [
                    "code",
                    "planDescription",
                    "planName",
                    "price",
                    "priceType",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "planDescription": {
                        "type": "string"
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    }
                }
            },
            "CartItemSnapshotCache": {
                "required": [
                    "productCode",
                    "productName",
                    "productOptions",
                    "productPrices"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productFeaturedImageUrl": {
                        "type": "string"
                    },
                    "productOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemSnapshotOptionCache"
                        }
                    },
                    "productPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemPriceCache"
                        }
                    }
                }
            },
            "CartItemSnapshotOptionCache": {
                "required": [
                    "optionId",
                    "optionName",
                    "subOption"
                ],
                "type": "object",
                "properties": {
                    "optionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "optionName": {
                        "type": "string"
                    },
                    "subOption": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemSnapshotOptionSubCache"
                        }
                    }
                }
            },
            "CartItemSnapshotOptionSubCache": {
                "required": [
                    "optionId",
                    "optionName",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "optionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "optionName": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CartListCache": {
                "required": [
                    "customerUuid",
                    "items",
                    "shippingFee",
                    "storeUuid",
                    "totalDiscount",
                    "totalPay",
                    "totalPrice",
                    "totalSubscription",
                    "valueAddedTax"
                ],
                "type": "object",
                "properties": {
                    "storeUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "_items": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CartItemCache"
                        }
                    },
                    "totalPrice": {
                        "type": "number"
                    },
                    "totalSubscription": {
                        "type": "number"
                    },
                    "totalDiscount": {
                        "type": "number"
                    },
                    "shippingFee": {
                        "type": "number"
                    },
                    "valueAddedTax": {
                        "type": "number"
                    },
                    "totalPay": {
                        "type": "number"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemCache"
                        }
                    }
                }
            },
            "SubscriptionPauseDTO": {
                "title": "구독 일시정지 정보",
                "required": [
                    "whenToPause",
                    "whenToResume"
                ],
                "type": "object",
                "properties": {
                    "whenToResume": {
                        "type": "string",
                        "description": "일시정지 후 언제 재개되는지를 설정합니다.",
                        "enum": [
                            "NOTHING",
                            "PAUSED_UNTIL"
                        ]
                    },
                    "whenToPause": {
                        "type": "string",
                        "description": "언제 일시정지 시킬 지를 설정합니다.",
                        "enum": [
                            "IMMEDIATE",
                            "LAZY"
                        ]
                    },
                    "until": {
                        "$ref": "#/components/schemas/ProductCycledto"
                    }
                },
                "description": "일시정지 정보 - 일시정지, 재개 시점을 설정합니다."
            },
            "SubscriptionItemCreateDTO": {
                "title": "구독 항목 생성 정보",
                "required": [
                    "priceCode",
                    "productCode",
                    "quantity",
                    "selectedProductOptions",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string",
                        "description": "추가할 상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "추가할 가격플랜 코드"
                    },
                    "quantity": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "상품 수량",
                        "format": "int32",
                        "default": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "selectedProductOptions": {
                        "type": "array",
                        "description": "상품 옵션",
                        "items": {
                            "type": "integer",
                            "description": "상품 옵션",
                            "format": "int64"
                        },
                        "default": []
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    }
                },
                "description": "추가할 구독 항목 정보"
            },
            "SubscriptionChangePayDatetimeDTO": {
                "title": "결제일 변경 정보",
                "required": [
                    "when"
                ],
                "type": "object",
                "properties": {
                    "when": {
                        "type": "string",
                        "description": "변경될 시점. 현재보다 미래 시점으로 설정해야 합니다.",
                        "format": "date-time"
                    }
                },
                "description": "결제일 변경을 위한 정보"
            },
            "SubscriptionCancelDTO": {
                "title": "구독 취소 정보",
                "required": [
                    "whenToCancel"
                ],
                "type": "object",
                "properties": {
                    "whenToCancel": {
                        "type": "string",
                        "description": "언제 취소되는지를 설정합니다. NOW일 경우 바로 취소되며, 이외에는 설정 시점이 되었을 때까지 취소 대기중 상태가 됩니다.",
                        "enum": [
                            "NOW",
                            "END_OF_PERIOD",
                            "SPECIFIC_DATE_TIME"
                        ]
                    },
                    "when": {
                        "type": "string",
                        "description": "whenToCancel 이 SPECIFIC_DATE_TIME 일 경우 필수값입니다. 취소되는 시점을 설정할 수 있으며, 시점이 되기 전까지는 취소 대기중 상태가 됩니다.",
                        "format": "date-time"
                    }
                },
                "description": "취소 정보 - 취소 시점을 설정합니다."
            },
            "ApiResponseSubscriptionManualRenewResultDTO": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "$ref": "#/components/schemas/SubscriptionManualRenewResultDTO"
                    }
                }
            },
            "SubscriptionManualRenewResultDTO": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "관련 데이터"
            },
            "ProductWidget": {
                "required": [
                    "useDemo",
                    "useEventBadge",
                    "useNotice",
                    "useOnetimePurchasable"
                ],
                "type": "object",
                "properties": {
                    "useDemo": {
                        "type": "boolean"
                    },
                    "useEventBadge": {
                        "type": "boolean"
                    },
                    "useOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "useNotice": {
                        "type": "boolean"
                    }
                },
                "description": "상품 위젯 사용 여부"
            },
            "PriceOptionCreateDTO": {
                "required": [
                    "priceCode"
                ],
                "type": "object",
                "properties": {
                    "priceCode": {
                        "type": "string"
                    }
                },
                "description": "추가 구매 가능한 상품 옵션",
                "deprecated": true
            },
            "PriceRecurringCreateDTO": {
                "required": [
                    "aggregateUsageType",
                    "interval",
                    "intervalCount",
                    "usageType"
                ],
                "type": "object",
                "properties": {
                    "intervalCount": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "aggregateUsageType": {
                        "type": "string",
                        "enum": [
                            "SUM",
                            "LAST_DURING_PERIOD",
                            "LAST_EVER",
                            "MAX"
                        ]
                    },
                    "usageType": {
                        "type": "string",
                        "enum": [
                            "LICENSED",
                            "METERED"
                        ]
                    }
                },
                "description": "반복 주기, 가격 타입이 ONE_TIME이 아닌 경우 필수값입니다. "
            },
            "PriceSetupOptionCreateDTO": {
                "required": [
                    "claimMethodType",
                    "name",
                    "price",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    }
                },
                "description": "도입비, 설치비 옵션"
            },
            "OrderCreateV1DTO": {
                "title": "주문 생성 데이터",
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "customerUuid": {
                        "type": "string",
                        "description": "고객 uuid",
                        "format": "uuid"
                    },
                    "items": {
                        "minLength": 1,
                        "type": "array",
                        "description": "주문 항목 생성 데이터 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemCreateV1DTO"
                        }
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
                        "format": "date-time"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    }
                },
                "description": "주문 생성 데이터"
            },
            "OrderItemCreateV1DTO": {
                "title": "주문 항목 생성 데이터",
                "minLength": 1,
                "required": [
                    "currency",
                    "minimumQuantity",
                    "priceCode",
                    "productCode"
                ],
                "type": "object",
                "properties": {
                    "productOption": {
                        "type": "array",
                        "description": "상품 옵션을 고정하는데 사용됩니다.",
                        "items": {
                            "type": "integer",
                            "description": "상품 옵션을 고정하는데 사용됩니다.",
                            "format": "int64"
                        },
                        "default": []
                    },
                    "currency": {
                        "type": "string",
                        "description": "통화 코드",
                        "default": "KRW"
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "description": "최소 수량을 지정합니다.",
                        "format": "int32",
                        "default": 0
                    },
                    "maximumQuantity": {
                        "type": "integer",
                        "description": "최대 수량을 지정합니다.",
                        "format": "int32"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격플랜 코드"
                    }
                },
                "description": "주문 항목 생성 데이터 목록"
            },
            "InvoiceCreateDTO": {
                "title": "청구서 생성 데이터",
                "required": [
                    "customerId",
                    "discount",
                    "items",
                    "paymentGateway",
                    "publishMethods",
                    "publishType"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "청구서를 받을 고객 번호",
                        "format": "int64"
                    },
                    "items": {
                        "minLength": 1,
                        "type": "array",
                        "description": "청구 상품 및 가격플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceProductDTO"
                        }
                    },
                    "publishType": {
                        "type": "string",
                        "description": "청구서 발행 타입",
                        "enum": [
                            "NOW",
                            "RESERVATION"
                        ],
                        "default": "NOW"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
                        "format": "date-time"
                    },
                    "reservationAt": {
                        "type": "string",
                        "description": "발송 시간을 나타냅니다. ISO 8601 형식",
                        "format": "date-time"
                    },
                    "publishMethods": {
                        "type": "array",
                        "description": "사용할 발송 수단 목록",
                        "items": {
                            "type": "string",
                            "description": "사용할 발송 수단 목록",
                            "enum": [
                                "KAKAO",
                                "SMS",
                                "EMAIL"
                            ]
                        }
                    },
                    "discount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "할인 금액",
                        "default": 0
                    },
                    "instantAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "청구서 즉시 결제"
                    },
                    "memoToCustomer": {
                        "type": "string",
                        "description": "청구서 메모"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    }
                },
                "description": "청구서 생성 데이터"
            },
            "InvoiceResponseDTO": {
                "title": "청구서 생성 응답 정보",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "청구서 번호",
                        "format": "int64"
                    }
                }
            },
            "OrderTransactionCustomer": {
                "required": [
                    "phone"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    }
                }
            },
            "OrderTransactionDTO": {
                "required": [
                    "customer",
                    "isDefaultShipping",
                    "items",
                    "totalAmount"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTransactionItemDTO"
                        }
                    },
                    "customer": {
                        "$ref": "#/components/schemas/OrderTransactionCustomer"
                    },
                    "totalAmount": {
                        "type": "number"
                    },
                    "isDefaultShipping": {
                        "type": "boolean"
                    }
                }
            },
            "OrderTransactionItemDTO": {
                "required": [
                    "orderItemType",
                    "quantity",
                    "selectedPriceOptions",
                    "selectedProductOptions",
                    "totalAmount"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalAmount": {
                        "type": "number"
                    },
                    "selectedProductOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectedProductOptionDTO"
                        }
                    },
                    "selectedPriceOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectedPriceOptionDTO"
                        }
                    },
                    "orderItemType": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "discountName": {
                        "type": "string"
                    },
                    "relatedOrderItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "usedCount": {
                        "type": "number"
                    }
                }
            },
            "SelectedPriceOptionDTO": {
                "required": [
                    "priceCode",
                    "priceOptionId",
                    "productCode",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "priceOptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "SelectedProductOptionDTO": {
                "title": "선택한 옵션 정보",
                "required": [
                    "optionIds",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "description": "옵션 수량",
                        "format": "int32"
                    },
                    "optionIds": {
                        "type": "array",
                        "description": "선택한 옵션 번호 목록",
                        "items": {
                            "type": "integer",
                            "description": "선택한 옵션 번호 목록",
                            "format": "int64"
                        }
                    }
                }
            },
            "SubscriptionMemoDTO": {
                "type": "object",
                "properties": {
                    "subscriptionMemo": {
                        "type": "string"
                    }
                }
            },
            "SubscriptionLogCreateDTO": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "SubscriptionChangeDatetimeDTO": {
                "required": [
                    "type",
                    "when"
                ],
                "type": "object",
                "properties": {
                    "when": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "PAY",
                            "TRIAL",
                            "MEMBERSHIP"
                        ]
                    }
                }
            },
            "QuotationCreatedDTO": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "OrderLogCreateDTO": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "PriceModuleMappingRequestDTO": {
                "required": [
                    "items",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceQuantityPare"
                        }
                    },
                    "vendorUuid": {
                        "type": "string"
                    },
                    "invoiceDiscount": {
                        "type": "number"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "postcode": {
                        "type": "string"
                    }
                }
            },
            "PriceQuantityPare": {
                "required": [
                    "priceId",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "priceId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usedCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "BigDecimal": {
                "type": "object"
            },
            "DeliveryCharge": {
                "required": [
                    "defaultDeliveryCharge",
                    "deliveryChargeType",
                    "freeShipOverAmount",
                    "islandAndMountainShipAmount",
                    "jejuShipAmount",
                    "useDeliveryCharge",
                    "useLocalShipCharge"
                ],
                "type": "object",
                "properties": {
                    "useDeliveryCharge": {
                        "type": "boolean"
                    },
                    "deliveryChargeType": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "CONDITIONAL_FREE",
                            "FIXED"
                        ]
                    },
                    "defaultDeliveryCharge": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "freeShipOverAmount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "useLocalShipCharge": {
                        "type": "boolean"
                    },
                    "jejuShipAmount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "islandAndMountainShipAmount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "vendorUuid": {
                        "type": "string"
                    }
                }
            },
            "OrderItem": {
                "required": [
                    "amount",
                    "applyDemo",
                    "applyFirstSale",
                    "claimMethodType",
                    "isBox",
                    "isBundle",
                    "isDerived",
                    "key",
                    "plan",
                    "quantity",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "FEE",
                            "USAGE",
                            "DEFERRED",
                            "ADD",
                            "INSTANT"
                        ]
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "isBox": {
                        "type": "boolean"
                    },
                    "applyFirstSale": {
                        "type": "boolean"
                    },
                    "applyDemo": {
                        "type": "boolean"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "amount": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "onetimePrice": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "isDerived": {
                        "type": "boolean"
                    },
                    "isBundle": {
                        "type": "boolean"
                    },
                    "relatedItem": {
                        "$ref": "#/components/schemas/OrderItem"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vendorUuid": {
                        "type": "string"
                    }
                }
            },
            "PriceModuleInputDTO": {
                "required": [
                    "deliveryCharges",
                    "items",
                    "type",
                    "vendorSettings"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "RECURRING_INITIAL"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "deliveryCharges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryCharge"
                        }
                    },
                    "vendorSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorSettings"
                        }
                    },
                    "invoiceDiscount": {
                        "type": "number"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ProductCustomer"
                    },
                    "vendorUuid": {
                        "type": "string"
                    }
                }
            },
            "VendorSettings": {
                "required": [
                    "vatIncluded",
                    "vatRate"
                ],
                "type": "object",
                "properties": {
                    "vatIncluded": {
                        "type": "boolean"
                    },
                    "vatRate": {
                        "$ref": "#/components/schemas/BigDecimal"
                    },
                    "paymentAmountScale": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "vendorUuid": {
                        "type": "string"
                    }
                }
            },
            "CustomerOrderDTO": {
                "title": "고객과 연관된 주소 정보",
                "required": [
                    "amount",
                    "claimMethodType",
                    "createdAt",
                    "id",
                    "productName",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "amount": {
                        "type": "number",
                        "description": "주문 금액"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 정보",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성 일시",
                        "format": "date-time"
                    }
                },
                "description": "고객과 연관된 주소 목록"
            },
            "CustomerSubscriptionDTO": {
                "title": "고객과 연관된 구독 정보",
                "required": [
                    "code",
                    "id",
                    "items",
                    "recurring",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "구독 코드"
                    },
                    "nextPaymentDateTime": {
                        "type": "string",
                        "description": "다음 결제 시점",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "description": "구독 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemDTO"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/Interval"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/PaymentMethodDTO"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "종료일",
                        "format": "date-time"
                    },
                    "lastPaymentDateTime": {
                        "type": "string",
                        "description": "최근 결제 시점",
                        "format": "date-time"
                    }
                },
                "description": "고객과 연관된 구독 목록"
            },
            "Interval": {
                "required": [
                    "interval",
                    "intervalCount"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "구독 주기 정보"
            },
            "InvoiceDTO": {
                "title": "청구서 상세 정보",
                "required": [
                    "discount",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "청구서 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "청구서 상태",
                        "enum": [
                            "TEMPORARY",
                            "RESERVATION",
                            "SENT",
                            "PAID",
                            "OVER_DUE",
                            "SEND_FAIL"
                        ]
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ProductCustomerdto"
                    },
                    "publishType": {
                        "type": "string",
                        "description": "청구서 발행 상태",
                        "enum": [
                            "NOW",
                            "RESERVATION"
                        ]
                    },
                    "order": {
                        "$ref": "#/components/schemas/ProductOrderdto"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "구매 기한",
                        "format": "date-time"
                    },
                    "publishMethod": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "발송 수단 목록",
                        "items": {
                            "type": "string",
                            "description": "발송 수단 목록",
                            "enum": [
                                "KAKAO",
                                "SMS",
                                "EMAIL"
                            ]
                        }
                    },
                    "discount": {
                        "type": "integer",
                        "description": "할인 금액",
                        "format": "int64"
                    },
                    "memoToCustomer": {
                        "type": "string",
                        "description": "청구서 메모"
                    },
                    "reservationAt": {
                        "type": "string",
                        "description": "예약 일시",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "description": "삭제 일시",
                        "format": "date-time"
                    }
                }
            },
            "PaymentMethodDTO": {
                "title": "결제수단 정보",
                "required": [
                    "id",
                    "paymentInfo"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "결제수단 번호",
                        "format": "int64"
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "결제수단 정보"
                    }
                },
                "description": "고객이 사용중인 결제수단 목록"
            },
            "InvoiceSendNowDTO": {
                "type": "object",
                "properties": {
                    "newPurchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateInvoicesByExcelFailedRowDTO": {
                "required": [
                    "discount",
                    "invalidColumns",
                    "memo",
                    "priceCode",
                    "publishMethods",
                    "quantity",
                    "recipients",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "recipients": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "memo": {
                        "type": "string"
                    },
                    "publishMethods": {
                        "type": "string"
                    },
                    "reservationAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "invalidColumns": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CreateInvoicesByExcelRawData": {
                "required": [
                    "discount",
                    "memo",
                    "priceCode",
                    "publishMethods",
                    "quantity",
                    "recipients",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "recipients": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "memo": {
                        "type": "string"
                    },
                    "publishMethods": {
                        "type": "string"
                    },
                    "reservationAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateInvoicesByExcelResultDTO": {
                "required": [
                    "failedResult",
                    "nowStatusCount",
                    "reservationStatusCount",
                    "succeededResult"
                ],
                "type": "object",
                "properties": {
                    "succeededResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceCreateWithAdditionalRecipientsDTO"
                        }
                    },
                    "failedResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateInvoicesByExcelFailedRowDTO"
                        }
                    },
                    "nowStatusCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reservationStatusCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "InvoiceCreateWithAdditionalRecipientsDTO": {
                "required": [
                    "invoiceCreateDTO",
                    "rawData",
                    "recipientEmails"
                ],
                "type": "object",
                "properties": {
                    "recipientEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "invoiceCreateDTO": {
                        "$ref": "#/components/schemas/InvoiceCreateDTO"
                    },
                    "rawData": {
                        "$ref": "#/components/schemas/CreateInvoicesByExcelRawData"
                    }
                }
            },
            "CountrySettingCreateDTO": {
                "required": [
                    "countryCode",
                    "currencyCode",
                    "isDefault",
                    "taxRate",
                    "timezoneName"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "timezoneName": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "taxRate": {
                        "type": "number"
                    }
                }
            },
            "SubscriptionCheckBulkResultDTO": {
                "required": [
                    "currentPeriodEndDate",
                    "currentPeriodStartDate"
                ],
                "type": "object",
                "properties": {
                    "trialPeriodStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trialPeriodEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currentPeriodStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currentPeriodEndDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PreClaimQuotaPaymentRequestDTO": {
                "required": [
                    "deltaAmount"
                ],
                "type": "object",
                "properties": {
                    "usedAmount": {
                        "type": "number"
                    },
                    "prevAmount": {
                        "type": "number"
                    },
                    "deltaAmount": {
                        "type": "number"
                    }
                }
            },
            "UsageRecordCheckRequestDTO": {
                "required": [
                    "adminName",
                    "customerName",
                    "mainPlanCode",
                    "mainPlanName",
                    "planCode",
                    "planName",
                    "priceType",
                    "productName",
                    "record",
                    "startDate",
                    "subPlanCode",
                    "subPlanName",
                    "subProductName",
                    "subscriptionId"
                ],
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "record": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "priceType": {
                        "type": "string"
                    },
                    "mainPlanCode": {
                        "type": "string"
                    },
                    "subPlanCode": {
                        "type": "string"
                    },
                    "mainPlanName": {
                        "type": "string"
                    },
                    "subPlanName": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "adminName": {
                        "type": "string"
                    },
                    "subProductName": {
                        "type": "string"
                    }
                }
            },
            "UsageRecordCheckResponseDTO": {
                "required": [
                    "inTrialPeriod",
                    "invalidCustomerName",
                    "invalidPlanCode",
                    "invalidPlanName",
                    "notInPeriod",
                    "subscriptionItemId",
                    "subscriptionNotFound",
                    "valid"
                ],
                "type": "object",
                "properties": {
                    "notInPeriod": {
                        "type": "boolean"
                    },
                    "subscriptionNotFound": {
                        "type": "boolean"
                    },
                    "invalidCustomerName": {
                        "type": "boolean"
                    },
                    "invalidPlanCode": {
                        "type": "boolean"
                    },
                    "invalidPlanName": {
                        "type": "boolean"
                    },
                    "subscriptionItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "inTrialPeriod": {
                        "type": "boolean"
                    },
                    "valid": {
                        "type": "boolean"
                    }
                }
            },
            "OfflineOrderCreateRequestDTO": {
                "required": [
                    "items",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemdto"
                        }
                    }
                }
            },
            "OfflineOrderItemResponseDTO": {
                "required": [
                    "code",
                    "priceCode",
                    "productCode",
                    "productOptions",
                    "quantity",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ONETIME",
                            "RECURRING"
                        ]
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "productOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "OfflineOrderResponseDTO": {
                "required": [
                    "amount",
                    "code",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OfflineOrderItemResponseDTO"
                        }
                    }
                }
            },
            "CmsWebhookPayload": {
                "required": [
                    "created_at",
                    "entry",
                    "event",
                    "model"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "model": {
                        "type": "string"
                    },
                    "entry": {
                        "$ref": "#/components/schemas/JsonNode"
                    }
                }
            },
            "ShippingListCreateDTO": {
                "required": [
                    "isDefaultAddress",
                    "label",
                    "shipping"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "isDefaultAddress": {
                        "type": "boolean"
                    }
                }
            },
            "QuotationCreateDTO": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemcreatedto"
                        }
                    },
                    "requestMemo": {
                        "type": "string"
                    }
                }
            },
            "OrderAndTransactionCreateDTO": {
                "required": [
                    "customer",
                    "isDefaultShipping",
                    "items",
                    "priceCode",
                    "totalAmount"
                ],
                "type": "object",
                "properties": {
                    "priceCode": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTransactionItemDTO"
                        }
                    },
                    "customer": {
                        "$ref": "#/components/schemas/OrderTransactionCustomer"
                    },
                    "totalAmount": {
                        "type": "number"
                    },
                    "isDefaultShipping": {
                        "type": "boolean"
                    }
                }
            },
            "WebAuthnAuthDTO": {
                "type": "object",
                "properties": {
                    "webAuthnRequestData": {
                        "type": "string"
                    },
                    "webAuthnResponseData": {
                        "type": "string"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "WebAuthnRegisterDTO": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "webAuthnRequestData": {
                        "type": "string"
                    },
                    "webAuthnResponseData": {
                        "type": "string"
                    }
                }
            },
            "CardMethodDTO": {
                "required": [
                    "customerId",
                    "idKey"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "pinCode": {
                        "type": "string"
                    },
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "newPinCode": {
                        "type": "string"
                    }
                }
            },
            "CartItemCreateDTO": {
                "required": [
                    "currency",
                    "priceCode",
                    "productCode",
                    "quantity",
                    "selectedOptions"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selectedOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "CartListCreateDTO": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemCreateDTO"
                        }
                    }
                }
            },
            "GWAdminDTO": {
                "required": [
                    "adminUuid",
                    "email",
                    "fedUuid",
                    "nickname",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "adminUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "fedUuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "SubscriptionChangePriceAdminDTO": {
                "required": [
                    "price",
                    "productCode",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "price": {
                        "type": "number"
                    },
                    "productCode": {
                        "type": "string"
                    }
                }
            },
            "ReqV1": {
                "required": [
                    "requestPrice"
                ],
                "type": "object",
                "properties": {
                    "requestPrice": {
                        "minimum": 0,
                        "type": "number",
                        "description": "환불 요청 금액"
                    },
                    "reason": {
                        "type": "string",
                        "description": "환불 사유"
                    }
                },
                "description": "주문 취소 요청 데이터"
            },
            "QuotationStateChangeDTO": {
                "required": [
                    "id",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "ProductStatusOrTypeUpdateDTO": {
                "required": [
                    "productCode"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "countrySettingId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ManagerFullReq": {
                "title": "주문 전체취소 요청 데이터",
                "required": [
                    "requestPrice"
                ],
                "type": "object",
                "properties": {
                    "requestPrice": {
                        "minimum": 0,
                        "type": "number",
                        "description": "환불 요청 금액"
                    },
                    "reason": {
                        "type": "string",
                        "description": "환불 사유"
                    }
                }
            },
            "InvoiceStatusUpdateDTO": {
                "required": [
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "TEMPORARY",
                            "RESERVATION",
                            "SENT",
                            "PAID",
                            "OVER_DUE",
                            "SEND_FAIL"
                        ]
                    }
                }
            },
            "DeliveryBunchSingle": {
                "required": [
                    "code",
                    "createdAt",
                    "customerName",
                    "customerUuid",
                    "deliveryCharge",
                    "deliveryItemList",
                    "direction",
                    "orderCode",
                    "orderCreatedAt",
                    "orderId",
                    "orderPaymentDate",
                    "purpose",
                    "recipient",
                    "status",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "purpose": {
                        "type": "string",
                        "enum": [
                            "ORDER",
                            "EXCHANGE_COLLECTION",
                            "EXCHANGE_DELIVERY",
                            "EXCHANGE_REJECTED",
                            "RETURN_COLLECTION",
                            "RETURN_REJECTED"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "TO_BUYER",
                            "TO_SELLER"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PREPARING",
                            "SUSPENDED",
                            "ON_THE_WAY",
                            "COMPLETED"
                        ]
                    },
                    "deliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCreatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recipient": {
                        "$ref": "#/components/schemas/RecipientDTO"
                    },
                    "deliveryItemList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryItemSingle"
                        }
                    },
                    "tracking": {
                        "$ref": "#/components/schemas/DeliveryTrackingDTO"
                    },
                    "orderPaidAmount": {
                        "type": "number"
                    },
                    "orderReturnedAmount": {
                        "type": "number"
                    },
                    "orderDiscountedAmount": {
                        "type": "number"
                    }
                }
            },
            "DeliveryItemSingle": {
                "required": [
                    "orderItemCode",
                    "paidAmount",
                    "pricePlanName",
                    "pricePrice",
                    "priceType",
                    "productName",
                    "productType",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "orderItemCode": {
                        "type": "string"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "pricePrice": {
                        "type": "number"
                    },
                    "pricePlanName": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string"
                    },
                    "movedTo": {
                        "type": "string"
                    }
                }
            },
            "DeliveryTrackingDTO": {
                "required": [
                    "courier",
                    "trackingNumber"
                ],
                "type": "object",
                "properties": {
                    "courier": {
                        "type": "string",
                        "enum": [
                            "DOOR_TO_DOOR",
                            "LOTTE",
                            "DONGBUEXPRESS",
                            "HANIPS",
                            "HANJIN",
                            "HLC",
                            "KDEXP",
                            "KGLOGIS",
                            "KOREANAIR",
                            "ILOGEN",
                            "EPANTOS",
                            "EPOST",
                            "INNOGIS",
                            "ILYANGLOGIS",
                            "CVSNET",
                            "EPOST_EMS",
                            "FEDEX",
                            "KGBLS",
                            "OCSKOREA",
                            "TNT",
                            "UPS",
                            "DHL",
                            "ETC"
                        ]
                    },
                    "trackingNumber": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "departedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "arrivedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DeliveryBunchCreateRequest": {
                "required": [
                    "direction",
                    "orderCode",
                    "orderItemCodes",
                    "purpose"
                ],
                "type": "object",
                "properties": {
                    "purpose": {
                        "type": "string",
                        "enum": [
                            "ORDER",
                            "EXCHANGE_COLLECTION",
                            "EXCHANGE_DELIVERY",
                            "EXCHANGE_REJECTED",
                            "RETURN_COLLECTION",
                            "RETURN_REJECTED"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "TO_BUYER",
                            "TO_SELLER"
                        ]
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CSRefundItemManagerReq": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "requestPrice": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "description": "환불 처리 금액"
                    },
                    "quantity": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "type": "string",
                        "description": "환불할 항목 코드"
                    }
                },
                "description": "이게 있으면 부분환불, 없으면 전체환불"
            },
            "CSRefundManagerReq": {
                "title": "주문 환불 처리 데이터",
                "required": [
                    "code",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "requestPrice": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "description": "환불 처리 금액합계"
                    },
                    "reason": {
                        "type": "string",
                        "description": "환불 사유"
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 번호"
                    },
                    "items": {
                        "type": "array",
                        "description": "이게 있으면 부분환불, 없으면 전체환불",
                        "items": {
                            "$ref": "#/components/schemas/CSRefundItemManagerReq"
                        }
                    }
                }
            },
            "CancellationPatch": {
                "required": [
                    "orderCode",
                    "orderItemCodes",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "CustomerReq": {
                "title": "주문 전체환불 요청 데이터",
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "환불 사유"
                    }
                }
            },
            "CustomerPinCodeReqDTO": {
                "required": [
                    "pinCode"
                ],
                "type": "object",
                "properties": {
                    "pinCode": {
                        "type": "string"
                    }
                }
            },
            "CustomerPinCodeValidationDTO": {
                "required": [
                    "isPinCorrect",
                    "pinCodeCount"
                ],
                "type": "object",
                "properties": {
                    "pinCodeCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isPinCorrect": {
                        "type": "boolean"
                    }
                }
            },
            "DeliveryBunchCustomerSingle": {
                "required": [
                    "code",
                    "createdAt",
                    "customerName",
                    "customerUuid",
                    "deliveryCharge",
                    "direction",
                    "orderCode",
                    "orderCreatedAt",
                    "orderId",
                    "orderItems",
                    "orderPaymentDate",
                    "purpose",
                    "recipient",
                    "status",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "purpose": {
                        "type": "string",
                        "enum": [
                            "ORDER",
                            "EXCHANGE_COLLECTION",
                            "EXCHANGE_DELIVERY",
                            "EXCHANGE_REJECTED",
                            "RETURN_COLLECTION",
                            "RETURN_REJECTED"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "TO_BUYER",
                            "TO_SELLER"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PREPARING",
                            "SUSPENDED",
                            "ON_THE_WAY",
                            "COMPLETED"
                        ]
                    },
                    "deliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCreatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recipient": {
                        "$ref": "#/components/schemas/RecipientDTO"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemdto"
                        }
                    },
                    "tracking": {
                        "$ref": "#/components/schemas/DeliveryTrackingDTO"
                    },
                    "orderPaidAmount": {
                        "type": "number"
                    },
                    "orderReturnedAmount": {
                        "type": "number"
                    },
                    "orderDiscountedAmount": {
                        "type": "number"
                    },
                    "receiptUrl": {
                        "type": "string"
                    }
                }
            },
            "ReturnStart": {
                "required": [
                    "orderCode",
                    "orderItemCodes",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "ExchangeStart": {
                "required": [
                    "orderCode",
                    "orderItemCodes",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "CancellationStart": {
                "required": [
                    "orderCode",
                    "orderItemCodes"
                ],
                "type": "object",
                "properties": {
                    "orderCode": {
                        "type": "string"
                    },
                    "orderItemCodes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "PageableDTO": {
                "title": "Pagination 정보",
                "required": [
                    "offset",
                    "pageNumber",
                    "pageSize",
                    "paged",
                    "sort",
                    "unpaged"
                ],
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "description": "오프셋",
                        "format": "int32"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean",
                        "description": "Pagination 정보 포함 여부"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "unpaged": {
                        "type": "boolean",
                        "description": "Pagination 정보 미포함 여부"
                    }
                },
                "description": "Pagination 정보"
            },
            "SortDTO": {
                "title": "Pagination 정렬 정보",
                "required": [
                    "empty",
                    "sorted",
                    "unsorted"
                ],
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean",
                        "description": "비어있는지 여부"
                    },
                    "sorted": {
                        "type": "boolean",
                        "description": "정렬되어 있는지 여부"
                    },
                    "unsorted": {
                        "type": "boolean",
                        "description": "정렬되어 있지 않은지 여부"
                    }
                },
                "description": "정렬 정보"
            },
            "SubscriptionListV1DTO": {
                "title": "구독 목록 정보",
                "required": [
                    "customerName",
                    "id",
                    "interval",
                    "intervalCount",
                    "items",
                    "lastPaymentDateTime",
                    "price",
                    "productName",
                    "startDateTime",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "customerName": {
                        "type": "string",
                        "description": "고객명"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "price": {
                        "$ref": "#/components/schemas/PriceV1DTO"
                    },
                    "items": {
                        "type": "array",
                        "description": "구독 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemV1DTO"
                        }
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "구독 시작 시점",
                        "format": "date-time"
                    },
                    "lastPaymentDateTime": {
                        "type": "string",
                        "description": "최근 결제 시점",
                        "format": "date-time"
                    },
                    "nextPaymentDateTime": {
                        "type": "string",
                        "description": "다음 결제 시점",
                        "format": "date-time"
                    },
                    "expiredDateTime": {
                        "type": "string",
                        "description": "구독 만료 시점",
                        "format": "date-time"
                    },
                    "pausedDateTime": {
                        "type": "string",
                        "description": "구독 일시정지 시점",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/CustomerPaymentMethodV1DTO"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "종료일",
                        "format": "date-time"
                    }
                },
                "description": "구독 목록"
            },
            "SubscriptionListV1PageDTO": {
                "title": "구독 목록 Pagination 정보",
                "required": [
                    "content",
                    "empty",
                    "first",
                    "last",
                    "number",
                    "numberOfElements",
                    "pageable",
                    "size",
                    "sort",
                    "totalElements",
                    "totalPages"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "description": "구독 목록",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionListV1DTO"
                        }
                    },
                    "empty": {
                        "type": "boolean",
                        "description": "목록이 비어있는지 여부"
                    },
                    "first": {
                        "type": "boolean",
                        "description": "첫 번째 페이지인지 여부"
                    },
                    "last": {
                        "type": "boolean",
                        "description": "마지막 페이지인지 여부"
                    },
                    "number": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "description": "페이지 내 고객 목록 개수",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableDTO"
                    },
                    "size": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "totalElements": {
                        "type": "integer",
                        "description": "전체 고객 개수",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "전체 페이지수",
                        "format": "int32"
                    }
                }
            },
            "SubscriptionCalculatedDTO": {
                "title": "사용량 정산 정보",
                "required": [
                    "amount",
                    "endDate",
                    "items",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "예상 결제 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "예상 결제 금액 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionCalculatedItemDTO"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "description": "측정 시작 시점",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "측정 종료 시점",
                        "format": "date-time"
                    }
                }
            },
            "SubscriptionCalculatedItemDTO": {
                "required": [
                    "amount",
                    "name",
                    "subscriptionItemId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "subscriptionItemId": {
                        "type": "integer",
                        "description": "구독 항목 번호",
                        "format": "int64"
                    },
                    "count": {
                        "type": "number",
                        "description": "현재 사용량"
                    },
                    "amount": {
                        "type": "number",
                        "description": "예상 결제 금액"
                    },
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "type": {
                        "type": "string",
                        "description": "타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "additionalBillings": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
                    },
                    "usageFormula": {
                        "type": "string",
                        "description": "사용량 기반 과금 계산식"
                    }
                },
                "description": "예상 결제 금액 항목들"
            },
            "SubscriptionCalculatedItemV1DTO": {
                "required": [
                    "amount",
                    "name",
                    "subscriptionItemId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "subscriptionItemId": {
                        "type": "integer",
                        "description": "구독 항목 번호",
                        "format": "int64"
                    },
                    "count": {
                        "type": "number",
                        "description": "현재 사용량"
                    },
                    "amount": {
                        "type": "number",
                        "description": "예상 결제 금액"
                    },
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "type": {
                        "type": "string",
                        "description": "타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "additionalBillings": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingV1DTO"
                    }
                },
                "description": "예상 결제 금액 항목들"
            },
            "SubscriptionCalculatedV1DTO": {
                "title": "사용량 정산 정보",
                "required": [
                    "amount",
                    "endDate",
                    "items",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "예상 결제 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "예상 결제 금액 항목들",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionCalculatedItemV1DTO"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "description": "측정 시작 시점",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "측정 종료 시점",
                        "format": "date-time"
                    }
                }
            },
            "ProductListDTO": {
                "required": [
                    "categories",
                    "code",
                    "createdAt",
                    "description",
                    "enabledDemo",
                    "featuredImageUrl",
                    "id",
                    "modifiedAt",
                    "name",
                    "prices",
                    "productOrder",
                    "status",
                    "type",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductPricedto"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategoryDTO"
                        }
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "enabledDemo": {
                        "type": "boolean"
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "productOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "countrySetting": {
                        "$ref": "#/components/schemas/CountrySettingDTO"
                    }
                },
                "description": "상품 목록"
            },
            "ProductListPageDTO": {
                "title": "상품 목록 Pagination 정보",
                "required": [
                    "content",
                    "empty",
                    "first",
                    "last",
                    "number",
                    "numberOfElements",
                    "pageable",
                    "size",
                    "sort",
                    "totalElements",
                    "totalPages"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "description": "상품 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean",
                        "description": "목록이 비어있는지 여부"
                    },
                    "first": {
                        "type": "boolean",
                        "description": "첫 번째 페이지인지 여부"
                    },
                    "last": {
                        "type": "boolean",
                        "description": "마지막 페이지인지 여부"
                    },
                    "number": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "description": "페이지 내 고객 목록 개수",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableDTO"
                    },
                    "size": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "totalElements": {
                        "type": "integer",
                        "description": "전체 고객 개수",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "전체 페이지수",
                        "format": "int32"
                    }
                }
            },
            "OrderListPageV1DTO": {
                "title": "주문 목록 Pagination 정보",
                "required": [
                    "content",
                    "empty",
                    "first",
                    "last",
                    "number",
                    "numberOfElements",
                    "pageable",
                    "size",
                    "sort",
                    "totalElements",
                    "totalPages"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "description": "주문 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderListV1DTO"
                        }
                    },
                    "empty": {
                        "type": "boolean",
                        "description": "목록이 비어있는지 여부"
                    },
                    "first": {
                        "type": "boolean",
                        "description": "첫 번째 페이지인지 여부"
                    },
                    "last": {
                        "type": "boolean",
                        "description": "마지막 페이지인지 여부"
                    },
                    "number": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "description": "페이지 내 고객 목록 개수",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableDTO"
                    },
                    "size": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "totalElements": {
                        "type": "integer",
                        "description": "전체 고객 개수",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "전체 페이지수",
                        "format": "int32"
                    }
                }
            },
            "OrderListV1DTO": {
                "title": "주문 목록 정보",
                "required": [
                    "claimMethodType",
                    "createdAt",
                    "id",
                    "items",
                    "leftAmount",
                    "paidAmount",
                    "price",
                    "productName",
                    "returnedAmount",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "고객명"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemdto"
                        }
                    },
                    "price": {
                        "type": "integer",
                        "description": "가격",
                        "format": "int32"
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "청구서 사용시, 구매 기한",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "주문 생성 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "주문 수정 시점",
                        "format": "date-time"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지, 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "결제 금액"
                    },
                    "returnedAmount": {
                        "type": "number",
                        "description": "환불 금액"
                    },
                    "leftAmount": {
                        "type": "number",
                        "description": "환불 안 된 금액"
                    }
                },
                "description": "주문 목록"
            },
            "InvoiceListDTO": {
                "title": "청구서 목록 정보",
                "required": [
                    "id",
                    "orderCode",
                    "orderType",
                    "price",
                    "productCountryCode",
                    "productCurrencyCode",
                    "vendorUUID"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "청구서 번호",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "orderCode": {
                        "type": "string",
                        "description": "관련 주문 코드"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "청구서를 받는 고객 이름"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품명"
                    },
                    "orderType": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "price": {
                        "type": "number",
                        "description": "금액"
                    },
                    "status": {
                        "type": "string",
                        "description": "청구서 상태",
                        "enum": [
                            "TEMPORARY",
                            "RESERVATION",
                            "SENT",
                            "PAID",
                            "OVER_DUE",
                            "SEND_FAIL"
                        ]
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "구매 기한",
                        "format": "date-time"
                    },
                    "vendorUUID": {
                        "type": "string",
                        "description": "벤더 UUID",
                        "format": "uuid"
                    },
                    "parentVendorUUID": {
                        "type": "string",
                        "description": "부모 벤더 UUID",
                        "format": "uuid"
                    },
                    "reservationAt": {
                        "type": "string",
                        "description": "예약 발송일",
                        "format": "date-time"
                    },
                    "productCountryCode": {
                        "type": "string",
                        "description": "첫번째 상품의 국가 코드"
                    },
                    "productCurrencyCode": {
                        "type": "string",
                        "description": "첫번째 상품의 통화 코드"
                    }
                },
                "description": "청구서 목록"
            },
            "InvoiceListPageDTO": {
                "title": "청구서 목록 Pagination 정보",
                "required": [
                    "content",
                    "empty",
                    "first",
                    "last",
                    "number",
                    "numberOfElements",
                    "pageable",
                    "size",
                    "sort",
                    "totalElements",
                    "totalPages"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "description": "청구서 목록",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean",
                        "description": "목록이 비어있는지 여부"
                    },
                    "first": {
                        "type": "boolean",
                        "description": "첫 번째 페이지인지 여부"
                    },
                    "last": {
                        "type": "boolean",
                        "description": "마지막 페이지인지 여부"
                    },
                    "number": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "description": "페이지 내 고객 목록 개수",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableDTO"
                    },
                    "size": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "totalElements": {
                        "type": "integer",
                        "description": "전체 고객 개수",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "전체 페이지수",
                        "format": "int32"
                    }
                },
                "description": "청구서 목록"
            },
            "InvoiceListResponseDTO": {
                "title": "청구서 목록 및 통계 정보",
                "required": [
                    "invoiceList",
                    "overdueCount",
                    "paidCount",
                    "reservationCount",
                    "sendCount"
                ],
                "type": "object",
                "properties": {
                    "reservationCount": {
                        "type": "integer",
                        "description": "예약된 청구서 개수",
                        "format": "int32"
                    },
                    "sendCount": {
                        "type": "integer",
                        "description": "발송한 청구서 개수",
                        "format": "int32"
                    },
                    "paidCount": {
                        "type": "integer",
                        "description": "결제 완료된 청구서 개수",
                        "format": "int32"
                    },
                    "overdueCount": {
                        "type": "integer",
                        "description": "결제 기한 지난 청구서 개수",
                        "format": "int32"
                    },
                    "invoiceList": {
                        "$ref": "#/components/schemas/InvoiceListPageDTO"
                    }
                }
            },
            "DeliveryBunchSingleV1": {
                "required": [
                    "createdAt",
                    "deliveryCharge",
                    "deliveryItemList",
                    "direction",
                    "purpose",
                    "recipient",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "purpose": {
                        "type": "string",
                        "enum": [
                            "ORDER",
                            "EXCHANGE_COLLECTION",
                            "EXCHANGE_DELIVERY",
                            "EXCHANGE_REJECTED",
                            "RETURN_COLLECTION",
                            "RETURN_REJECTED"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "enum": [
                            "TO_BUYER",
                            "TO_SELLER"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "PREPARING",
                            "SUSPENDED",
                            "ON_THE_WAY",
                            "COMPLETED"
                        ]
                    },
                    "deliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "recipient": {
                        "$ref": "#/components/schemas/RecipientDTO"
                    },
                    "deliveryItemList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryItemSingleV1"
                        }
                    },
                    "tracking": {
                        "$ref": "#/components/schemas/DeliveryTrackingDTO"
                    }
                }
            },
            "DeliveryItemSingleV1": {
                "required": [
                    "orderItemCode"
                ],
                "type": "object",
                "properties": {
                    "orderItemCode": {
                        "type": "string"
                    },
                    "movedTo": {
                        "type": "string"
                    }
                }
            },
            "CustomerListDTO": {
                "title": "고객 목록 정보",
                "required": [
                    "activeSubscriptionCount",
                    "code",
                    "countryCode",
                    "customFields",
                    "id",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "orderCount",
                    "paymentMethods"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "status": {
                        "type": "string",
                        "description": "고객 상태",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "username": {
                        "type": "string",
                        "description": "고객 아이디"
                    },
                    "name": {
                        "type": "string",
                        "description": "고객 이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "고객 이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "고객 전화번호"
                    },
                    "orderCount": {
                        "type": "integer",
                        "description": "고객이 주문한 주문 개수",
                        "format": "int32"
                    },
                    "activeSubscriptionCount": {
                        "type": "integer",
                        "description": "고객의 활성 구독 개수",
                        "format": "int32"
                    },
                    "paymentMethods": {
                        "type": "array",
                        "description": "고객이 사용중인 결제수단 목록",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethodDTO"
                        }
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "고객 생성 일시",
                        "format": "date-time"
                    },
                    "dormantAt": {
                        "type": "string",
                        "description": "고객 휴면전환 일시",
                        "format": "date-time"
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "커스텀 필드 영역"
                        },
                        "description": "커스텀 필드 영역"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "가입한 위치의 국가 코드"
                    }
                },
                "description": "고객 목록"
            },
            "CustomerListPageDTO": {
                "title": "고객 목록 Pagination 정보",
                "required": [
                    "content",
                    "empty",
                    "first",
                    "last",
                    "number",
                    "numberOfElements",
                    "pageable",
                    "size",
                    "sort",
                    "totalElements",
                    "totalPages"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "description": "고객 목록",
                        "items": {
                            "$ref": "#/components/schemas/CustomerListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean",
                        "description": "목록이 비어있는지 여부"
                    },
                    "first": {
                        "type": "boolean",
                        "description": "첫 번째 페이지인지 여부"
                    },
                    "last": {
                        "type": "boolean",
                        "description": "마지막 페이지인지 여부"
                    },
                    "number": {
                        "type": "integer",
                        "description": "페이지 번호",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "description": "페이지 내 고객 목록 개수",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableDTO"
                    },
                    "size": {
                        "type": "integer",
                        "description": "페이지 크기",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortDTO"
                    },
                    "totalElements": {
                        "type": "integer",
                        "description": "전체 고객 개수",
                        "format": "int32"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "전체 페이지수",
                        "format": "int32"
                    }
                }
            },
            "PageRequestDTO": {
                "required": [
                    "page",
                    "size",
                    "sort",
                    "sortDir"
                ],
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sortDir": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    "sort": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    }
                }
            },
            "SearchDTO": {
                "type": "object",
                "properties": {
                    "keyword": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PageProductListDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ProductSummaryDTO": {
                "required": [
                    "statusOutOfStock",
                    "statusRejected",
                    "statusSale",
                    "statusUnsold",
                    "statusWaitingApproval",
                    "typeBox",
                    "typeBundle",
                    "typeSoftware"
                ],
                "type": "object",
                "properties": {
                    "typeBox": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "typeSoftware": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "typeBundle": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "statusSale": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "statusOutOfStock": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "statusUnsold": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "statusWaitingApproval": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "statusRejected": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PriceDTOForPricingTable": {
                "required": [
                    "code",
                    "plan",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringDTO"
                    }
                }
            },
            "ProductDTOForPricingTable": {
                "required": [
                    "code",
                    "description",
                    "name",
                    "prices"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceDTOForPricingTable"
                        }
                    }
                }
            },
            "CategoryDTO": {
                "required": [
                    "categoryId",
                    "name",
                    "visibleOnMyStoreBreadcrumb"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "visibleOnMyStoreBreadcrumb": {
                        "type": "boolean"
                    }
                }
            },
            "Period": {
                "title": "기간 정보",
                "required": [
                    "endDateTime",
                    "startDateTime"
                ],
                "type": "object",
                "properties": {
                    "startDateTime": {
                        "type": "string",
                        "description": "시작 시점",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "끝 시점",
                        "format": "date-time"
                    }
                }
            },
            "UrlPayCustomerCardMethodDTO": {
                "type": "object",
                "properties": {
                    "cardName": {
                        "type": "string"
                    },
                    "cardNum": {
                        "type": "string"
                    },
                    "customerPaymentMethodId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "UrlPayOrderCustomerDTO": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "usePinCode": {
                        "type": "boolean"
                    },
                    "useWebAuth": {
                        "type": "boolean"
                    }
                }
            },
            "UrlPayOrderDTO": {
                "required": [
                    "currency",
                    "deliveryCharges",
                    "enabledPaymentGateways",
                    "id",
                    "items",
                    "orderCode",
                    "orderType",
                    "productName",
                    "useOneClick",
                    "vendorSettings"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "orderType": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "discount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "instantAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/UrlPayOrderCustomerDTO"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UrlPayOrderItem"
                        }
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/VendorInfoDTO"
                    },
                    "deliveryCharges": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DeliveryChargeResponseDTO"
                        }
                    },
                    "vendorSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/VendorSettingsDTO"
                        }
                    },
                    "enabledCustomerCardMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UrlPayCustomerCardMethodDTO"
                        }
                    },
                    "enabledPaymentGateways": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductEnabledpaymentgatewaydto"
                        }
                    },
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UrlPaySubscriptionDTO"
                        }
                    },
                    "paymentInfo": {
                        "$ref": "#/components/schemas/UrlPayPaymentDTO"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "parentSubscriptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "useOneClick": {
                        "type": "boolean"
                    }
                }
            },
            "UrlPayOrderItem": {
                "required": [
                    "applyDemo",
                    "applyFirstSale",
                    "claimMethodType",
                    "code",
                    "demoPeriod",
                    "demoPeriodUnit",
                    "enabledDemo",
                    "firstSaleEnabled",
                    "firstSalePrice",
                    "id",
                    "isOnetimePurchasable",
                    "optionCombinations",
                    "optionGroups",
                    "priceAmount",
                    "priceType",
                    "productType",
                    "recurringInterval",
                    "recurringIntervalCount",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "baseQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "capQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "optionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupDTO"
                        }
                    },
                    "optionCombinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationDTO"
                        }
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    },
                    "fixedOption": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "applyDemo": {
                        "type": "boolean"
                    },
                    "applyFirstSale": {
                        "type": "boolean"
                    },
                    "enabledDemo": {
                        "type": "boolean"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "firstSaleEnabled": {
                        "type": "boolean"
                    },
                    "firstSalePrice": {
                        "type": "number"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "recurringInterval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "recurringIntervalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "priceAmount": {
                        "type": "number"
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "setupOptionPrice": {
                        "type": "number"
                    },
                    "parentOrderItemCode": {
                        "type": "string"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "UrlPayPaymentDTO": {
                "required": [
                    "businessName",
                    "itemName",
                    "orderId",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "price": {
                        "type": "number"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "cardNumber": {
                        "type": "string"
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "itemName": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "vBankDTO": {
                        "$ref": "#/components/schemas/VBankDTO"
                    },
                    "niceCmsDTO": {
                        "$ref": "#/components/schemas/NiceCmsDTO"
                    },
                    "vbankDTO": {
                        "$ref": "#/components/schemas/VBankDTO"
                    }
                }
            },
            "UrlPaySubscriptionDTO": {
                "required": [
                    "price",
                    "productName"
                ],
                "type": "object",
                "properties": {
                    "productName": {
                        "type": "string"
                    },
                    "price": {
                        "$ref": "#/components/schemas/UrlPaySubscriptionPriceDTO"
                    },
                    "trialPeriod": {
                        "$ref": "#/components/schemas/Period"
                    }
                }
            },
            "UrlPaySubscriptionPriceDTO": {
                "required": [
                    "demoPeriod",
                    "demoPeriodUnit",
                    "enabledDemo",
                    "originPrice",
                    "planName",
                    "recurring"
                ],
                "type": "object",
                "properties": {
                    "originPrice": {
                        "type": "number"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/Interval"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabledDemo": {
                        "type": "boolean"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    }
                }
            },
            "SubscriptionSearch": {
                "type": "object",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "고객이름, 상품이름, 가격플랜을 OR 조건으로 찾습니다."
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "구독 ID 를 And 조건으로 찾습니다.",
                        "format": "int64"
                    },
                    "productName": {
                        "type": "string",
                        "description": "구독 아이템의 상품이름을 And 조건으로 찾습니다."
                    },
                    "planName": {
                        "type": "string",
                        "description": "구독 아이템의 가격플랜을 And 조건으로 찾습니다."
                    },
                    "customerName": {
                        "type": "string",
                        "description": "구독의 고객이름을 And 조건으로 찾습니다."
                    },
                    "phone": {
                        "type": "string",
                        "description": "구독의 고객전화번호를 And 조건으로 찾습니다."
                    },
                    "email": {
                        "type": "string",
                        "description": "구독의 고객이메일을 And 조건으로 찾습니다."
                    },
                    "vendorUuid": {
                        "type": "string",
                        "description": "하위 벤더들의 구독을 And 조건으로 찾습니다.",
                        "format": "uuid"
                    },
                    "statuses": {
                        "type": "array",
                        "description": "구독상태를 And 조건으로 찾습니다.",
                        "items": {
                            "type": "string",
                            "description": "구독상태를 And 조건으로 찾습니다.",
                            "enum": [
                                "ACTIVE",
                                "UNPAID",
                                "PENDING_PAUSE",
                                "PAUSE",
                                "PENDING_CANCEL",
                                "EXPIRED",
                                "CANCELED",
                                "INCOMPLETE",
                                "QUEUEING"
                            ]
                        }
                    },
                    "ids": {
                        "type": "array",
                        "description": "구독 ID 를 And 조건으로 찾습니다.",
                        "items": {
                            "type": "integer",
                            "description": "구독 ID 를 And 조건으로 찾습니다.",
                            "format": "int64"
                        }
                    },
                    "customerUuid": {
                        "type": "string",
                        "description": "구독의 고객 UUID 를 And 조건으로 찾습니다.",
                        "format": "uuid"
                    }
                }
            },
            "CustomerPaymentMethodDTO": {
                "title": "결제 수단 정보",
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용한 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "결제수단 정보(카드번호 등)"
                    }
                }
            },
            "PageSubscriptionListDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "SubscriptionItemListDTO": {
                "required": [
                    "code",
                    "id",
                    "planName",
                    "priceCode",
                    "priceType",
                    "productName",
                    "unit",
                    "usedAmount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "usedAmount": {
                        "type": "number"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "selectedOptionsLabel": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "parentSubscriptionItemCode": {
                        "type": "string"
                    },
                    "adminPlanName": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "additionalBilling": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
                    }
                }
            },
            "SubscriptionListDTO": {
                "required": [
                    "claimMethodType",
                    "code",
                    "customerName",
                    "id",
                    "interval",
                    "intervalCount",
                    "items",
                    "lastPaymentDateTime",
                    "price",
                    "productName",
                    "startDateTime",
                    "status",
                    "totalAmount",
                    "vendorUUID"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastPaymentDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nextPaymentDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiredDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "pausedDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/CustomerPaymentMethodDTO"
                    },
                    "code": {
                        "type": "string"
                    },
                    "totalAmount": {
                        "type": "number"
                    },
                    "canceledDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cancelRequestAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemListDTO"
                        }
                    },
                    "vendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentVendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "SubscriptionCustomerDTO": {
                "title": "구독 고객 정보",
                "required": [
                    "attributes",
                    "id",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "고객 UUID",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "status": {
                        "type": "string",
                        "description": "고객 상태",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "username": {
                        "type": "string",
                        "description": "고객 아이디"
                    },
                    "name": {
                        "type": "string",
                        "description": "이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "전화번호"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객 추가 데이터"
                        },
                        "description": "고객 추가 데이터"
                    }
                }
            },
            "SubscriptionLogDTO": {
                "required": [
                    "content",
                    "createdAt",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "content": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Pause": {
                "required": [
                    "paused",
                    "pendingPause"
                ],
                "type": "object",
                "properties": {
                    "paused": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pendingPause": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "SubscriptionSummaryDTO": {
                "required": [
                    "active",
                    "cancel",
                    "expired",
                    "failed",
                    "paused"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paused": {
                        "$ref": "#/components/schemas/Pause"
                    },
                    "cancel": {
                        "$ref": "#/components/schemas/ProductCancel"
                    },
                    "expired": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "QuotationSearch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "OrderItemListResponseDTO": {
                "required": [
                    "code",
                    "isRecurring",
                    "priceType",
                    "productCountryCode",
                    "productCurrencyCode",
                    "productName",
                    "productType",
                    "selectedProductOptionNames",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "isRecurring": {
                        "type": "boolean"
                    },
                    "pricePlanName": {
                        "type": "string"
                    },
                    "selectedProductOptionNames": {
                        "type": "string"
                    },
                    "productCountryCode": {
                        "type": "string"
                    },
                    "productCurrencyCode": {
                        "type": "string"
                    }
                }
            },
            "PageQuotationDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuotationDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "QuotationDTO": {
                "required": [
                    "id",
                    "interval",
                    "intervalCount",
                    "orderItemAmount",
                    "orderItems",
                    "state",
                    "vendorUUID"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemListResponseDTO"
                        }
                    },
                    "orderItemAmount": {
                        "type": "number"
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "interval": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "vendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentVendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "LogResponseDTO": {
                "required": [
                    "actor",
                    "content",
                    "createdAt",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actor": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "content": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "QuotationDetailDTO": {
                "required": [
                    "createdAt",
                    "id",
                    "order",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "state": {
                        "type": "string"
                    },
                    "order": {
                        "$ref": "#/components/schemas/ProductOrderdto"
                    },
                    "requestMemo": {
                        "type": "string"
                    },
                    "quotationMemo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LogResponseDTO"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "QuotationSummaryDTO": {
                "required": [
                    "completed",
                    "invoiced",
                    "requested",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "requested": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "invoiced": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "completed": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ProductSearch": {
                "type": "object",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "상품이름, 가격플랜을 Or 조건으로 찾습니다."
                    },
                    "statuses": {
                        "type": "array",
                        "description": "상품상태를 And 조건으로 찾습니다.",
                        "items": {
                            "type": "string",
                            "description": "상품상태를 And 조건으로 찾습니다.",
                            "enum": [
                                "SALE",
                                "OUT_OF_STOCK",
                                "UNSOLD",
                                "WAITING_APPROVAL",
                                "REJECTED"
                            ]
                        }
                    },
                    "categoryId": {
                        "type": "integer",
                        "description": "상품카테고리를 And 조건으로 찾습니다.",
                        "format": "int64"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품코드를 And 조건으로 찾습니다."
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품이름을 And 조건으로 찾습니다."
                    },
                    "productType": {
                        "type": "string",
                        "description": "상품타입을 And 조건으로 찾습니다.",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "vendorUuid": {
                        "type": "string",
                        "description": "하위 벤더들의 상품을 And 조건으로 찾습니다.",
                        "format": "uuid"
                    }
                }
            },
            "PriceSearchDTO": {
                "required": [
                    "billingType",
                    "code",
                    "plan",
                    "planCode",
                    "price",
                    "productName"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "billingType": {
                        "type": "string"
                    },
                    "recurringDTO": {
                        "$ref": "#/components/schemas/PriceRecurringDTO"
                    }
                }
            },
            "NavigationDTO": {
                "required": [
                    "price",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/ProductNavigation"
                    },
                    "price": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductPricedto"
                        }
                    }
                }
            },
            "ProductNavigation": {
                "required": [
                    "categories",
                    "code",
                    "demoPeriod",
                    "demoPeriodUnit",
                    "enabledDemo",
                    "eventBadge",
                    "isOnetimePurchasable",
                    "optionCombinations",
                    "optionGroups",
                    "productOrder",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "subTitle": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "optionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupDTO"
                        }
                    },
                    "optionCombinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationDTO"
                        }
                    },
                    "enabledDemo": {
                        "type": "boolean"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategoryDTO"
                        }
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean"
                    },
                    "eventBadge": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductEventBadge"
                        }
                    },
                    "notice": {
                        "type": "string"
                    },
                    "productOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "useWidget": {
                        "$ref": "#/components/schemas/ProductWidgetDTO"
                    },
                    "countrySetting": {
                        "$ref": "#/components/schemas/CountrySettingDTO"
                    }
                }
            },
            "BundleProductListDTO": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    }
                }
            },
            "OrderSearch": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "DEPOSIT_WAITING",
                                "CANCELLED",
                                "PAID",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY",
                                "ORDER_DELIVERY_PREPARING",
                                "ORDER_DELIVERY_SUSPENDED",
                                "ORDER_DELIVERY_ON_THE_WAY",
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING",
                                "EXCHANGE_REJECTED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REJECTED",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY",
                                "PAYMENT_FAILURE",
                                "FINISHED_EXCHANGE_AVAILABLE",
                                "FINISHED_RETURN_AVAILABLE",
                                "FINISHED_SUCCESSFULLY"
                            ]
                        }
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderListResponseDTO": {
                "required": [
                    "claimMethodType",
                    "code",
                    "createdAt",
                    "id",
                    "items",
                    "leftAmount",
                    "paidAmount",
                    "returnedAmount",
                    "type",
                    "vendorUUID"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemListResponseDTO"
                        }
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "paymentReceiptUrl": {
                        "type": "string"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "code": {
                        "type": "string"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "returnedAmount": {
                        "type": "number"
                    },
                    "leftAmount": {
                        "type": "number"
                    },
                    "vendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "parentVendorUUID": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PageOrderListResponseDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderListResponseDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "OrderPaymentSummaryDTO": {
                "required": [
                    "depositWaiting",
                    "failed",
                    "paid",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "depositWaiting": {
                        "$ref": "#/components/schemas/TotalPricePerUnitDTO"
                    },
                    "paid": {
                        "$ref": "#/components/schemas/TotalPricePerUnitDTO"
                    },
                    "failed": {
                        "$ref": "#/components/schemas/TotalPricePerUnitDTO"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TotalPricePerUnitDTO": {
                "required": [
                    "totalPrice",
                    "units"
                ],
                "type": "object",
                "properties": {
                    "totalPrice": {
                        "type": "number"
                    },
                    "units": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InvoiceSearch": {
                "type": "object",
                "properties": {
                    "q": {
                        "type": "string",
                        "description": "상품이름, 플랜, 고객명, 고객이메일을 Or 조건으로 찾습니다."
                    },
                    "email": {
                        "type": "string",
                        "description": "고객이메일을 And 조건으로 찾습니다."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "TEMPORARY",
                            "RESERVATION",
                            "SENT",
                            "PAID",
                            "OVER_DUE",
                            "SEND_FAIL"
                        ]
                    }
                }
            },
            "InvoiceSummaryDTO": {
                "required": [
                    "overdueCount",
                    "paidCount",
                    "reservationCount",
                    "sendCount"
                ],
                "type": "object",
                "properties": {
                    "sendCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "reservationCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paidCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "overdueCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DeliverySummaryAggregation": {
                "required": [
                    "completed",
                    "on_the_way",
                    "preparing",
                    "suspended",
                    "target"
                ],
                "type": "object",
                "properties": {
                    "target": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "preparing": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "on_the_way": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "completed": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "suspended": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PageDeliveryBunchSingle": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryBunchSingle"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "SalesStatusDTO": {
                "required": [
                    "untilNow",
                    "untilPast"
                ],
                "type": "object",
                "properties": {
                    "untilPast": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "untilNow": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "OrderStatusSummaryDTO": {
                "required": [
                    "cs",
                    "deliveryTarget",
                    "newOrder",
                    "paidOrder",
                    "waitingForDeposit"
                ],
                "type": "object",
                "properties": {
                    "newOrder": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paidOrder": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deliveryTarget": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "waitingForDeposit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "cs": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "PageCustomerListDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerListDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "CustomerListSearchDTO": {
                "required": [
                    "code",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "marketingSms": {
                        "type": "boolean"
                    },
                    "marketingEmail": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CustomerCountrySummaryDTO": {
                "required": [
                    "count",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "RequestListWithFilterReturnSubStatusType": {
                "required": [
                    "statuses"
                ],
                "type": "object",
                "properties": {
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_CODE",
                            "CUSTOMER_NAME",
                            "ITEM_NAME",
                            "CUSTOMER_PHONE_NUMBER",
                            "RECIPIENT_NAME",
                            "RECIPIENT_PHONE_NUMBER",
                            "EMAIL",
                            "TRACKING_NUMBER"
                        ]
                    },
                    "statuses": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "RETURN_REQUEST",
                                "RETURN_REQUEST_CANCELLED",
                                "RETURN_REQUEST_REJECTED",
                                "RETURN_COLLECTION_PREPARING",
                                "RETURN_COLLECTION_ON_THE_WAY",
                                "RETURN_COLLECTION_COMPLETED",
                                "RETURN_REJECTED",
                                "RETURN_REJECT_DELIVERY_PREPARING",
                                "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                                "RETURN_REJECT_DELIVERY_COMPLETED",
                                "RETURN_PENDING",
                                "RETURN_REFUNDING",
                                "RETURN_REFUNDED",
                                "RETURN_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                }
            },
            "BuyerDTO": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "CSList": {
                "required": [
                    "data",
                    "statusCount",
                    "totalCount"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "statusCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "data": {
                        "$ref": "#/components/schemas/PageOrderCSDTO"
                    }
                }
            },
            "OrderCSDTO": {
                "required": [
                    "buyer",
                    "code",
                    "createdAt",
                    "customerName",
                    "customerUuid",
                    "deliveryCharge",
                    "id",
                    "items",
                    "leftAmount",
                    "paidAmount",
                    "paymentGateway",
                    "returnedAmount",
                    "type",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "customerPhone": {
                        "type": "string"
                    },
                    "buyer": {
                        "$ref": "#/components/schemas/BuyerDTO"
                    },
                    "recipient": {
                        "$ref": "#/components/schemas/RecipientDTO"
                    },
                    "deliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "returnedAmount": {
                        "type": "number"
                    },
                    "leftAmount": {
                        "type": "number"
                    },
                    "idKey": {
                        "type": "string"
                    },
                    "paymentReceiptUrl": {
                        "type": "string"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentDueDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemCSDTO"
                        }
                    }
                }
            },
            "OrderCSHistoryDTO": {
                "required": [
                    "actor",
                    "createdAt",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "actor": {
                        "type": "string",
                        "enum": [
                            "SYSTEM",
                            "SELLER",
                            "BUYER"
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/SubStatusTypeInterface"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderItemCSDTO": {
                "required": [
                    "code",
                    "paidAmount",
                    "pricePrice",
                    "priceType",
                    "productCountryCode",
                    "productCurrencyCode",
                    "productName",
                    "productType",
                    "status",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "pricePrice": {
                        "type": "number"
                    },
                    "pricePlanName": {
                        "type": "string"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCSHistoryDTO"
                        }
                    },
                    "selectedOptionsLabel": {
                        "type": "string"
                    },
                    "productCountryCode": {
                        "type": "string"
                    },
                    "productCurrencyCode": {
                        "type": "string"
                    }
                }
            },
            "PageOrderCSDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCSDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "RequestListWithFilterExchangeSubStatusType": {
                "required": [
                    "statuses"
                ],
                "type": "object",
                "properties": {
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_CODE",
                            "CUSTOMER_NAME",
                            "ITEM_NAME",
                            "CUSTOMER_PHONE_NUMBER",
                            "RECIPIENT_NAME",
                            "RECIPIENT_PHONE_NUMBER",
                            "EMAIL",
                            "TRACKING_NUMBER"
                        ]
                    },
                    "statuses": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER_DELIVERY_COMPLETED",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "RETURN_REQUEST",
                                "EXCHANGE_REQUEST",
                                "EXCHANGE_REQUEST_CANCELLED",
                                "EXCHANGE_REQUEST_REJECTED",
                                "EXCHANGE_COLLECTION_PREPARING",
                                "EXCHANGE_COLLECTION_ON_THE_WAY",
                                "EXCHANGE_COLLECTION_COMPLETED",
                                "EXCHANGE_DELIVERY_PREPARING",
                                "EXCHANGE_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_DELIVERY_COMPLETED",
                                "EXCHANGE_REJECTED",
                                "EXCHANGE_REJECT_DELIVERY_PREPARING",
                                "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                                "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                                "EXCHANGE_PENDING"
                            ]
                        }
                    }
                }
            },
            "RequestListWithFilterCancellationSubStatusType": {
                "required": [
                    "statuses"
                ],
                "type": "object",
                "properties": {
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_CODE",
                            "CUSTOMER_NAME",
                            "ITEM_NAME",
                            "CUSTOMER_PHONE_NUMBER",
                            "RECIPIENT_NAME",
                            "RECIPIENT_PHONE_NUMBER",
                            "EMAIL",
                            "TRACKING_NUMBER"
                        ]
                    },
                    "statuses": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PAID",
                                "CANCELLED",
                                "ORDER_DELIVERY_PREPARING",
                                "CANCELLATION_REQUEST",
                                "CANCELLATION_REQUEST_CANCELLED",
                                "CANCELLATION_REQUEST_DENIED",
                                "CANCELLATION_REFUNDING",
                                "CANCELLATION_REFUNDED",
                                "CANCELLATION_REFUNDED_PARTIALLY"
                            ]
                        }
                    }
                }
            },
            "SubscriptionCheckResultDTO": {
                "required": [
                    "isAddable",
                    "isInCurrentPeriod",
                    "isInTrial"
                ],
                "type": "object",
                "properties": {
                    "isAddable": {
                        "type": "boolean"
                    },
                    "isInTrial": {
                        "type": "boolean"
                    },
                    "isInCurrentPeriod": {
                        "type": "boolean"
                    }
                }
            },
            "IntervalDTO": {
                "title": "주기 정보",
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "description": "주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "count": {
                        "type": "integer",
                        "description": "주기",
                        "format": "int32"
                    }
                }
            },
            "PriceAdditionalBilling": {
                "required": [
                    "id",
                    "ranges",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "USAGE_BASED_WITH_RANGE",
                            "USAGE_BASED_WITH_RANGE_AND_FIXED_PRICE"
                        ]
                    },
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceAdditionalBillingRange"
                        }
                    }
                }
            },
            "PriceAdditionalBillingRange": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "until": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "price": {
                        "type": "number"
                    }
                }
            },
            "PriceBundle": {
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    }
                }
            },
            "PriceInternalDTO": {
                "required": [
                    "basicServing",
                    "billingDate",
                    "bundlePrices",
                    "code",
                    "id",
                    "maximumPurchaseQuantity",
                    "membershipExpirationDate",
                    "onetimeBundlePrice",
                    "options",
                    "price",
                    "recurring",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "whenToClaimType": {
                        "type": "string",
                        "enum": [
                            "FIRST_PAYMENT",
                            "DATE"
                        ]
                    },
                    "billingDate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/SetupOption"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceOption"
                        }
                    },
                    "additionalBilling": {
                        "$ref": "#/components/schemas/PriceAdditionalBilling"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/IntervalDTO"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "firstSaleEnabled": {
                        "type": "boolean"
                    },
                    "firstSalePrice": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "claim": {
                        "$ref": "#/components/schemas/Claim"
                    },
                    "basicServing": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bundlePrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceBundle"
                        }
                    },
                    "onetimeBundlePrice": {
                        "type": "number"
                    }
                }
            },
            "PriceOption": {
                "required": [
                    "id",
                    "interval",
                    "intervalCount",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "priceName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "SetupOption": {
                "required": [
                    "claimMethodType",
                    "id",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    }
                }
            },
            "ProductCategory": {
                "required": [
                    "categoryId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ProductInternalDTO": {
                "required": [
                    "code",
                    "createdAt",
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "subTitle": {
                        "type": "string"
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "imageUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "enabledDemo": {
                        "type": "boolean"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                        }
                    },
                    "optionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroup"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceInternalDTO"
                        }
                    }
                }
            },
            "ProductOption": {
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "type": "number"
                    }
                }
            },
            "ProductOptionGroup": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOption"
                        }
                    }
                }
            },
            "InvoiceInternalDTO": {
                "title": "청구서 상세 정보",
                "required": [
                    "discount",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "청구서 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "청구서 상태",
                        "enum": [
                            "TEMPORARY",
                            "RESERVATION",
                            "SENT",
                            "PAID",
                            "OVER_DUE",
                            "SEND_FAIL"
                        ]
                    },
                    "publishType": {
                        "type": "string",
                        "description": "청구서 발행 상태",
                        "enum": [
                            "NOW",
                            "RESERVATION"
                        ]
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "구매 기한",
                        "format": "date-time"
                    },
                    "publishMethod": {
                        "uniqueItems": true,
                        "type": "array",
                        "description": "발송 수단 목록",
                        "items": {
                            "type": "string",
                            "description": "발송 수단 목록",
                            "enum": [
                                "KAKAO",
                                "SMS",
                                "EMAIL"
                            ]
                        }
                    },
                    "discount": {
                        "type": "integer",
                        "description": "할인 금액",
                        "format": "int64"
                    },
                    "memoToCustomer": {
                        "type": "string",
                        "description": "청구서 메모"
                    },
                    "reservationAt": {
                        "type": "string",
                        "description": "예약 일시",
                        "format": "date-time"
                    },
                    "deletedAt": {
                        "type": "string",
                        "description": "삭제 일시",
                        "format": "date-time"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string",
                        "description": "주문 코드"
                    },
                    "customerId": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    }
                }
            },
            "ProductCustomerSubscriptionsSummaryDTO": {
                "required": [
                    "activated",
                    "canceled",
                    "expired",
                    "paused",
                    "unpaid"
                ],
                "type": "object",
                "properties": {
                    "activated": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unpaid": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paused": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expired": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PageSubscriptionListV1DTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionListV1DTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ShippingListItemDTO": {
                "required": [
                    "id",
                    "isDefaultAddress",
                    "isSelected",
                    "label",
                    "shipping"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "label": {
                        "type": "string"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "isDefaultAddress": {
                        "type": "boolean"
                    },
                    "isSelected": {
                        "type": "boolean"
                    }
                }
            },
            "OrderItemCustomerDTO": {
                "required": [
                    "currency",
                    "modifiedAt",
                    "orderItemCode",
                    "paidAmount",
                    "quantity",
                    "selectedProductOptionIds",
                    "status",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "paidAmount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductProductdto"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "selectedProductOptionLabel": {
                        "type": "string"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "orderItemCode": {
                        "type": "string"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryCode": {
                        "type": "string"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CSItemDTO"
                        }
                    }
                }
            },
            "OrderListCustomerDTO": {
                "required": [
                    "createdAt",
                    "items",
                    "orderCode",
                    "orderId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemCustomerDTO"
                        }
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "receiptUrl": {
                        "type": "string"
                    }
                }
            },
            "PageOrderListCustomerDTO": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderListCustomerDTO"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "OrderSummaryAggregationCustomerDTO": {
                "required": [
                    "canceled",
                    "delivered",
                    "delivering",
                    "includeBox",
                    "paid",
                    "preparing"
                ],
                "type": "object",
                "properties": {
                    "paid": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "preparing": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivering": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivered": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "canceled": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "includeBox": {
                        "type": "boolean"
                    }
                }
            },
            "WebAuthnDTO": {
                "required": [
                    "beforeData",
                    "credentialGetJson"
                ],
                "type": "object",
                "properties": {
                    "beforeData": {
                        "type": "string"
                    },
                    "credentialGetJson": {
                        "type": "string"
                    }
                }
            },
            "PageDeliveryBunchCustomerSingle": {
                "type": "object",
                "properties": {
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryBunchCustomerSingle"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ProductSubscriptionCustomerListDTO": {
                "required": [
                    "customerCnt",
                    "productCode",
                    "productId",
                    "productName"
                ],
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "customerCnt": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "SubscriptionNotifyPaymentMessageDTO": {
                "required": [
                    "additionalBillings",
                    "days",
                    "discountTotal",
                    "items",
                    "paymentAmount",
                    "subscriptionId",
                    "totalAmount",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "days": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionCalculatedItemDTO"
                        }
                    },
                    "additionalBillings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string"
                    },
                    "totalAmount": {
                        "type": "number"
                    },
                    "discountTotal": {
                        "type": "number"
                    },
                    "paymentAmount": {
                        "type": "number"
                    },
                    "subscriptionMemo": {
                        "type": "string"
                    }
                }
            },
            "CartItemUniqueDTO": {
                "required": [
                    "priceCode",
                    "productCode",
                    "selectedOptions"
                ],
                "type": "object",
                "properties": {
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "selectedOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "CartListRemoveRequestDTO": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItemUniqueDTO"
                        }
                    }
                }
            },
            "ProductErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "ProductCustomerdto": {
                "title": "고객 상세 정보",
                "required": [
                    "additionalRecipients",
                    "attributes",
                    "createdAt",
                    "id",
                    "marketingEmail",
                    "marketingKakao",
                    "marketingSms",
                    "orderCount",
                    "orders",
                    "paymentMethods",
                    "subscriptions",
                    "totalPurchasedPrice"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "description": "고객 상태",
                        "enum": [
                            "NORMAL",
                            "DORMANT"
                        ]
                    },
                    "username": {
                        "type": "string",
                        "description": "고객 아이디"
                    },
                    "name": {
                        "type": "string",
                        "description": "고객 이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "고객 이메일"
                    },
                    "phone": {
                        "type": "string",
                        "description": "고객 전화번호"
                    },
                    "orderCount": {
                        "type": "integer",
                        "description": "고객이 주문한 주문 개수",
                        "format": "int32"
                    },
                    "totalPurchasedPrice": {
                        "type": "number",
                        "description": "고객이 구매한 전체 금액"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "orders": {
                        "type": "array",
                        "description": "고객과 연관된 주소 목록",
                        "items": {
                            "$ref": "#/components/schemas/CustomerOrderDTO"
                        }
                    },
                    "subscriptions": {
                        "type": "array",
                        "description": "고객과 연관된 구독 목록",
                        "items": {
                            "$ref": "#/components/schemas/CustomerSubscriptionDTO"
                        }
                    },
                    "paymentMethods": {
                        "type": "array",
                        "description": "고객이 사용중인 결제수단 목록",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethodDTO"
                        }
                    },
                    "code": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "marketingSms": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - SMS"
                    },
                    "marketingEmail": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Email"
                    },
                    "marketingKakao": {
                        "type": "boolean",
                        "description": "고객이 허가한 마케팅 채널 - Kakao"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "고객 추가 데이터"
                        },
                        "description": "고객 추가 데이터"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "고객 생성 시점",
                        "format": "date-time"
                    },
                    "additionalRecipients": {
                        "type": "array",
                        "description": "추가 수신인",
                        "items": {
                            "type": "string",
                            "description": "추가 수신인"
                        }
                    }
                }
            },
            "ProductOrderdto": {
                "title": "주문 상세 정보",
                "required": [
                    "code",
                    "discountedAmount",
                    "leftAmount",
                    "orderCode",
                    "orderId",
                    "orderLogs",
                    "paidAmount",
                    "productName",
                    "relatedOrders",
                    "returnedAmount",
                    "subscriptions",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "description": "주문 번호",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string",
                        "description": "주문 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 타입",
                        "enum": [
                            "RECURRING",
                            "ONE_TIME",
                            "PAYMENT_METHOD",
                            "RECURRING_INITIAL",
                            "ADD_USAGE"
                        ]
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "주문 금액"
                    },
                    "returnedAmount": {
                        "type": "number",
                        "description": "환불된 금액"
                    },
                    "leftAmount": {
                        "type": "number",
                        "description": "남은 금액"
                    },
                    "discountedAmount": {
                        "type": "number",
                        "description": "할인 금액"
                    },
                    "productName": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목들",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemdto"
                        }
                    },
                    "customer": {
                        "$ref": "#/components/schemas/OrderCustomerDTO"
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제 시점",
                        "format": "date-time"
                    },
                    "paymentDueDate": {
                        "type": "string",
                        "description": "결제일 지정",
                        "format": "date-time"
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "청구서 사용시, 구매 기한 시점",
                        "format": "date-time"
                    },
                    "shipping": {
                        "$ref": "#/components/schemas/Shipping"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "payment": {
                        "$ref": "#/components/schemas/OrderPaymentDTO"
                    },
                    "orderLogs": {
                        "type": "array",
                        "description": "주문 메모 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderLogDTO"
                        }
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 코드"
                    },
                    "idKey": {
                        "type": "string",
                        "description": "결제 정보 조회용 idKey"
                    },
                    "subscriptions": {
                        "type": "array",
                        "description": "관련 구독 목록",
                        "items": {
                            "$ref": "#/components/schemas/OrderSubscriptionDTO"
                        }
                    },
                    "parentSubscription": {
                        "$ref": "#/components/schemas/OrderSubscriptionDTO"
                    },
                    "relatedOrders": {
                        "type": "array",
                        "description": "관련 주문",
                        "items": {
                            "$ref": "#/components/schemas/RelatedOrder"
                        }
                    },
                    "calculateStartDate": {
                        "type": "string",
                        "description": "합산 시작 시점",
                        "format": "date-time"
                    },
                    "calculateEndDate": {
                        "type": "string",
                        "description": "합산 끝 시점",
                        "format": "date-time"
                    },
                    "childOrders": {
                        "type": "array",
                        "description": "하위 벤더의 주문",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderdto"
                        }
                    }
                },
                "description": "청구서 주문 정보"
            },
            "ProductOrderitemdto": {
                "title": "주문 항목 정보",
                "required": [
                    "code",
                    "createdAt",
                    "currency",
                    "id",
                    "minimumQuantity",
                    "modifiedAt",
                    "orderItemCode",
                    "orderedPlanName",
                    "orderedProductName",
                    "orderedProductType",
                    "paidAmount",
                    "quantity",
                    "selectedProductOptionIds",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 항목 번호",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "주문 항목 코드"
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "결제 금액"
                    },
                    "currency": {
                        "type": "string",
                        "description": "통화 코드"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    },
                    "price": {
                        "$ref": "#/components/schemas/ProductPricedto"
                    },
                    "product": {
                        "$ref": "#/components/schemas/ProductProductdto"
                    },
                    "type": {
                        "type": "string",
                        "description": "주문 항목 타입",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "주문 항목 상태",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 이미지 URL"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string",
                        "description": "선택한 상품 옵션"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "description": "선택한 옵션 ID 목록",
                        "items": {
                            "type": "integer",
                            "description": "선택한 옵션 ID 목록",
                            "format": "int64"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "canceledDateTime": {
                        "type": "string",
                        "description": "취소 시점",
                        "format": "date-time"
                    },
                    "orderItemCode": {
                        "type": "string",
                        "description": "주문 항목 코드"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "orderedProductType": {
                        "type": "string",
                        "description": "주문 시점의 상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "orderedProductName": {
                        "type": "string",
                        "description": "주문 시점의 상품 이름"
                    },
                    "orderedPlanName": {
                        "type": "string",
                        "description": "주문 시점의 가격 플랜 이름"
                    },
                    "discountName": {
                        "type": "string",
                        "description": "할인 타입(주문 항목 타입이 DISCOUNT인 경우)"
                    },
                    "relatedOrderItemId": {
                        "type": "integer",
                        "description": "연관된 주문 항목 (주문 항목 타입이 DISCOUNT인 경우)",
                        "format": "int64"
                    },
                    "priceSetupType": {
                        "type": "string",
                        "description": "기본료 주문 항목인 경우 1회 또는 정기적으로 구분하는 타입",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "demoCycle": {
                        "$ref": "#/components/schemas/DemoCycle"
                    },
                    "usedCount": {
                        "type": "number",
                        "description": "사용량(사용량 기반 과금 상품인 경우)"
                    },
                    "usageFormula": {
                        "type": "string",
                        "description": "사용량 계산식"
                    },
                    "deliveryCode": {
                        "type": "string",
                        "description": "배송코드(매핑값)"
                    },
                    "histories": {
                        "type": "array",
                        "description": "CS기록",
                        "items": {
                            "$ref": "#/components/schemas/CSItemDTO"
                        }
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "description": "최소 구매 가능 수량",
                        "format": "int32"
                    },
                    "maximumQuantity": {
                        "type": "integer",
                        "description": "최대 구매 가능 수량",
                        "format": "int32"
                    },
                    "parentOrderItemCode": {
                        "type": "string",
                        "description": "파생 주문 아이템의 부모(번들) 주문 아이템 코드"
                    },
                    "unitChangeHistory": {
                        "type": "array",
                        "description": "계정 수 변동 내역(계정 수 기반 과금 상품인 경우)",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemUnitChangeHistoryV1DTO"
                        }
                    },
                    "unitCount": {
                        "type": "integer",
                        "description": "계정 수(계정 수 기반 과금 상품인 경우",
                        "format": "int64"
                    }
                },
                "description": "주문 항목들"
            },
            "ProductPricedto": {
                "title": "가격 플랜 정보",
                "required": [
                    "basicServing",
                    "billingDate",
                    "bundlePrices",
                    "code",
                    "enabledFirstSalePrice",
                    "firstSalePrice",
                    "id",
                    "maximumPurchaseQuantity",
                    "membershipExpirationDate",
                    "onetimeBundlePrice",
                    "options",
                    "order",
                    "price",
                    "type",
                    "volumes"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "가격 플랜 아이디",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "가격 플랜 코드"
                    },
                    "price": {
                        "type": "number",
                        "description": "가격"
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "planName": {
                        "type": "string",
                        "description": "플랜명",
                        "deprecated": true
                    },
                    "planDescription": {
                        "type": "string",
                        "description": "플랜 설명",
                        "deprecated": true
                    },
                    "type": {
                        "type": "string",
                        "description": "플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "enabledFirstSalePrice": {
                        "type": "boolean",
                        "description": "첫 구매 할인 적용 여부",
                        "deprecated": true
                    },
                    "firstSalePrice": {
                        "type": "integer",
                        "description": "첫 구매 할인시 적용되는 할인 금액",
                        "format": "int64",
                        "deprecated": true
                    },
                    "claimMethodType": {
                        "type": "string",
                        "description": "선불인지 후불인지 여부",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "whenToClaimType": {
                        "type": "string",
                        "description": "후불인 경우, 언제 결제되는지",
                        "enum": [
                            "FIRST_PAYMENT",
                            "DATE"
                        ]
                    },
                    "billingDate": {
                        "type": "integer",
                        "description": "후불일 때 결제되는 날짜를 지정한 경우, 지정된 날짜",
                        "format": "int32"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매가능 수량",
                        "format": "int32"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "description": "구독 만기 기간",
                        "format": "int32"
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "description": "구독 만기 기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/PriceSetupOptionDTO"
                    },
                    "options": {
                        "type": "array",
                        "description": "옵션 정보",
                        "items": {
                            "$ref": "#/components/schemas/PriceOptionDTO"
                        }
                    },
                    "volumes": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceVolumeDTO"
                        }
                    },
                    "additionalBilling": {
                        "$ref": "#/components/schemas/PriceAdditionalBillingDTO"
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringDTO"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성된 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정된 시점",
                        "format": "date-time"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "firstSale": {
                        "$ref": "#/components/schemas/FirstSale"
                    },
                    "claim": {
                        "$ref": "#/components/schemas/Claim"
                    },
                    "basicServing": {
                        "type": "integer",
                        "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
                        "format": "int32"
                    },
                    "bundlePrices": {
                        "type": "array",
                        "description": "번들 플랜 - 번들 상품 구성",
                        "items": {
                            "$ref": "#/components/schemas/PriceBundleDTO"
                        }
                    },
                    "onetimeBundlePrice": {
                        "type": "number",
                        "description": "번들 플랜 - 단건 상품 금액"
                    },
                    "order": {
                        "type": "integer",
                        "description": "우선 순위",
                        "format": "int32"
                    }
                },
                "description": "가격 플랜 정보"
            },
            "ProductProductdto": {
                "title": "상품 상세 정보",
                "required": [
                    "categories",
                    "code",
                    "combinedProducts",
                    "createdAt",
                    "demoPeriod",
                    "demoPeriodUnit",
                    "enabledDemo",
                    "eventBadge",
                    "id",
                    "isOnetimePurchasable",
                    "optionCombinations",
                    "optionGroups",
                    "prices",
                    "productOrder",
                    "status",
                    "useCombination",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "상품 아이디",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "type": {
                        "type": "string",
                        "description": "상품 타입",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "subTitle": {
                        "type": "string",
                        "description": "부제목"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 대표 이미지 URL"
                    },
                    "imageUrls": {
                        "type": "array",
                        "description": "상품 이미지 URL",
                        "items": {
                            "type": "string",
                            "description": "상품 이미지 URL"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "summary": {
                        "type": "string",
                        "description": "상품 요약"
                    },
                    "reasonOfReject": {
                        "type": "string",
                        "description": "상품 승인 거절 사유"
                    },
                    "sku": {
                        "type": "string",
                        "description": "SKU"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "재고 수량",
                        "format": "int32"
                    },
                    "combinedProducts": {
                        "type": "array",
                        "description": "번들 상품 정보",
                        "items": {
                            "$ref": "#/components/schemas/BundleProductDTO"
                        }
                    },
                    "optionGroups": {
                        "type": "array",
                        "description": "옵션 그룹 정보",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupDTO"
                        }
                    },
                    "useCombination": {
                        "type": "boolean",
                        "description": "조합형 옵션 사용 여부"
                    },
                    "optionCombinations": {
                        "type": "array",
                        "description": "옵션 조합",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationDTO"
                        }
                    },
                    "prices": {
                        "type": "array",
                        "description": "가격 플랜 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductPricedto"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "생성 시점",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "description": "수정 시점",
                        "format": "date-time"
                    },
                    "enabledDemo": {
                        "type": "boolean",
                        "description": "체험기간 활성화 여부"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "description": "체험 기간",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "description": "체험 기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "description": "카테고리",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategoryDTO"
                        }
                    },
                    "vendorUuid": {
                        "type": "string",
                        "description": "가맹점 UUID",
                        "format": "uuid"
                    },
                    "productOrder": {
                        "type": "integer",
                        "description": "순서",
                        "format": "int32"
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "활성 구독 제한"
                    },
                    "eventBadge": {
                        "type": "array",
                        "description": "이벤트 뱃지",
                        "items": {
                            "$ref": "#/components/schemas/ProductEventBadge"
                        }
                    },
                    "notice": {
                        "type": "string",
                        "description": "유의 사항"
                    },
                    "useWidget": {
                        "$ref": "#/components/schemas/ProductWidgetDTO"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "그룹 ID",
                        "format": "int64"
                    },
                    "countrySetting": {
                        "$ref": "#/components/schemas/CountrySettingDTO"
                    }
                },
                "description": "상품 정보"
            },
            "ProductPerioddto": {
                "title": "기간 정보",
                "required": [
                    "endDateTime",
                    "startDateTime"
                ],
                "type": "object",
                "properties": {
                    "startDateTime": {
                        "type": "string",
                        "description": "시작 시점",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "끝 시점",
                        "format": "date-time"
                    }
                },
                "description": "현재 주기 정보"
            },
            "ProductApiresponse": {
                "title": "단순 API 응답",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "결과에 대한 메세지"
                    },
                    "body": {
                        "type": "object",
                        "description": "관련 데이터"
                    }
                }
            },
            "ProductCycledto": {
                "title": "기간 정보",
                "required": [
                    "interval",
                    "intervalCount"
                ],
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string",
                        "description": "기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "description": "기간",
                        "format": "int32"
                    }
                },
                "description": "whenToResume 이 PAUSED_UNTIL 일 경우 필수값입니다. 일시정지 되기까지의 기간을 설정합니다. "
            },
            "ProductProductcreatedto": {
                "title": "상품 생성 데이터",
                "required": [
                    "categoryIds",
                    "demoPeriod",
                    "demoPeriodUnit",
                    "description",
                    "enabledDemo",
                    "eventBadge",
                    "featuredImageUrl",
                    "imageUrls",
                    "isOnetimePurchasable",
                    "name",
                    "optionCombinations",
                    "optionGroups",
                    "productOrder",
                    "status",
                    "subTitle",
                    "type",
                    "useCombination"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "상품 타입을 지정합니다.",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "상품 상태를 지정합니다.",
                        "enum": [
                            "SALE",
                            "OUT_OF_STOCK",
                            "UNSOLD",
                            "WAITING_APPROVAL",
                            "REJECTED"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "productOrder": {
                        "type": "integer",
                        "description": "순서",
                        "format": "int32"
                    },
                    "subTitle": {
                        "type": "string",
                        "description": "부제목"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "결제화면에서 나타는 상품 이미지 입니다."
                    },
                    "imageUrls": {
                        "type": "array",
                        "description": "상품 이미지 URL",
                        "items": {
                            "type": "string",
                            "description": "상품 이미지 URL"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "상품 설명"
                    },
                    "summary": {
                        "type": "string",
                        "description": "상품 요약"
                    },
                    "sku": {
                        "type": "string",
                        "description": "SKU"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "상품 수량 - null 로 지정하면 상품 구매시 수량이 감소되지 않습니다.",
                        "format": "int32"
                    },
                    "enabledDemo": {
                        "type": "boolean",
                        "description": "체험 기간 사용 여부"
                    },
                    "demoPeriod": {
                        "type": "integer",
                        "description": "체험 기간",
                        "format": "int32"
                    },
                    "demoPeriodUnit": {
                        "type": "string",
                        "description": "체험 기간 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "optionGroups": {
                        "type": "array",
                        "description": "옵션 그룹 설정",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionGroupCreateDTO"
                        }
                    },
                    "useCombination": {
                        "type": "boolean",
                        "description": "조합형 옵션 사용 여부"
                    },
                    "optionCombinations": {
                        "type": "array",
                        "description": "옵션 조합",
                        "items": {
                            "$ref": "#/components/schemas/OptionCombinationCreateDTO"
                        }
                    },
                    "categoryIds": {
                        "type": "array",
                        "description": "카테고리",
                        "items": {
                            "type": "integer",
                            "description": "카테고리",
                            "format": "int64"
                        }
                    },
                    "eventBadge": {
                        "type": "array",
                        "description": "이벤트 뱃지",
                        "items": {
                            "$ref": "#/components/schemas/ProductEventBadge"
                        }
                    },
                    "notice": {
                        "type": "string",
                        "description": "유의 사항"
                    },
                    "isOnetimePurchasable": {
                        "type": "boolean",
                        "description": "활성 구독 제한"
                    },
                    "useWidget": {
                        "$ref": "#/components/schemas/ProductWidget"
                    },
                    "countrySettingId": {
                        "type": "integer",
                        "description": "결제 국가 설정 ID",
                        "format": "int64"
                    },
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "ProductPricecreatedto": {
                "title": "가격플랜 생성 데이터",
                "required": [
                    "options",
                    "plan",
                    "price",
                    "type",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "price": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "기본 가격"
                    },
                    "unit": {
                        "type": "string",
                        "description": "단위"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "type": {
                        "type": "string",
                        "description": "가격 플랜 타입",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "firstSale": {
                        "$ref": "#/components/schemas/FirstSale"
                    },
                    "claim": {
                        "$ref": "#/components/schemas/Claim"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "description": "최대 구매 가능 개수 지정",
                        "format": "int32"
                    },
                    "membershipExpirationDate": {
                        "type": "integer",
                        "description": "구독 만기 기간",
                        "format": "int32",
                        "deprecated": true
                    },
                    "membershipExpirationDateType": {
                        "type": "string",
                        "description": "구독 만기 기간 단위",
                        "deprecated": true,
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "expiryRecurringCount": {
                        "type": "integer",
                        "description": "구독 만료되는 결제 횟수",
                        "format": "int32"
                    },
                    "setupOption": {
                        "$ref": "#/components/schemas/PriceSetupOptionCreateDTO"
                    },
                    "options": {
                        "type": "array",
                        "description": "추가 구매 가능한 상품 옵션",
                        "deprecated": true,
                        "items": {
                            "$ref": "#/components/schemas/PriceOptionCreateDTO"
                        }
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/PriceRecurringCreateDTO"
                    },
                    "basicServing": {
                        "type": "integer",
                        "description": "기본 제공량 - 계정/사용량 기반 요금 사용시",
                        "format": "int32"
                    },
                    "isRepresentative": {
                        "type": "boolean",
                        "description": "대표 가격 지정 - 스텝샵에서 기본 가격으로 설정됩니다."
                    },
                    "onetimeBundlePrice": {
                        "type": "number",
                        "description": "번들 플랜 설정 - 번들 플랜의 단건 가격을 설정합니다."
                    }
                },
                "description": "가격플랜 생성 데이터"
            },
            "ProductOrdercreatedto": {
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "고객 번호",
                        "format": "int64"
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "고객 코드"
                    },
                    "customerUuid": {
                        "type": "string",
                        "description": "고객 uuid",
                        "format": "uuid"
                    },
                    "items": {
                        "minLength": 1,
                        "type": "array",
                        "description": "주문 항목 생성 데이터 목록",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderitemcreatedto"
                        }
                    },
                    "purchaseDeadline": {
                        "type": "string",
                        "description": "결제 링크 유효 기간을 나타냅니다. ISO 8601 형식",
                        "format": "date-time"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "결제 화면에서 결제 할 수 있는 PG사를 고정합니다.",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "ProductOrderitemcreatedto": {
                "title": "주문 항목 생성 데이터",
                "minLength": 1,
                "required": [
                    "currency",
                    "minimumQuantity",
                    "priceCode",
                    "productCode"
                ],
                "type": "object",
                "properties": {
                    "productOption": {
                        "type": "array",
                        "description": "상품 옵션을 고정하는데 사용됩니다.",
                        "items": {
                            "type": "integer",
                            "description": "상품 옵션을 고정하는데 사용됩니다.",
                            "format": "int64"
                        },
                        "default": []
                    },
                    "currency": {
                        "type": "string",
                        "description": "통화 코드",
                        "default": "KRW"
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "description": "최소 수량을 지정합니다.",
                        "format": "int32",
                        "default": 0
                    },
                    "maximumQuantity": {
                        "type": "integer",
                        "description": "최대 수량을 지정합니다.",
                        "format": "int32"
                    },
                    "productCode": {
                        "type": "string",
                        "description": "상품 코드"
                    },
                    "priceCode": {
                        "type": "string",
                        "description": "가격플랜 코드"
                    }
                },
                "description": "주문 항목 생성 데이터 목록"
            },
            "ProductCustomer": {
                "type": "object",
                "properties": {
                    "postalCode": {
                        "type": "string"
                    }
                }
            },
            "ProductAppstoreordercreaterequestdto": {
                "required": [
                    "customerUuid",
                    "priceCode",
                    "productCode",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "customerUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    }
                }
            },
            "ProductOrderiteminternaldto": {
                "required": [
                    "claimMethodType",
                    "code",
                    "currency",
                    "id",
                    "paidAmount",
                    "planName",
                    "priceType",
                    "productName",
                    "productType",
                    "quantity",
                    "selectedProductOptionIds",
                    "status",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "paidAmount": {
                        "type": "number"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "BOX",
                            "SOFTWARE",
                            "BUNDLE",
                            "INVOICE",
                            "DRAFT"
                        ]
                    },
                    "featuredImageUrl": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "onetimeBundlePrice": {
                        "type": "number"
                    },
                    "interval": {
                        "type": "string"
                    },
                    "optionName": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "usedCount": {
                        "type": "number"
                    },
                    "additionalBillings": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "minimumQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parentOrderItemCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "DEPOSIT_WAITING",
                            "CANCELLED",
                            "PAID",
                            "CANCELLATION_REQUEST",
                            "CANCELLATION_REQUEST_CANCELLED",
                            "CANCELLATION_REQUEST_DENIED",
                            "CANCELLATION_REFUNDING",
                            "CANCELLATION_REFUNDED",
                            "CANCELLATION_REFUNDED_PARTIALLY",
                            "ORDER_DELIVERY_PREPARING",
                            "ORDER_DELIVERY_SUSPENDED",
                            "ORDER_DELIVERY_ON_THE_WAY",
                            "ORDER_DELIVERY_COMPLETED",
                            "EXCHANGE_REQUEST",
                            "EXCHANGE_REQUEST_CANCELLED",
                            "EXCHANGE_REQUEST_REJECTED",
                            "EXCHANGE_COLLECTION_PREPARING",
                            "EXCHANGE_COLLECTION_ON_THE_WAY",
                            "EXCHANGE_COLLECTION_COMPLETED",
                            "EXCHANGE_DELIVERY_PREPARING",
                            "EXCHANGE_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_DELIVERY_COMPLETED",
                            "EXCHANGE_REJECT_DELIVERY_PREPARING",
                            "EXCHANGE_REJECT_DELIVERY_ON_THE_WAY",
                            "EXCHANGE_REJECT_DELIVERY_COMPLETED",
                            "EXCHANGE_PENDING",
                            "EXCHANGE_REJECTED",
                            "RETURN_REQUEST",
                            "RETURN_REQUEST_CANCELLED",
                            "RETURN_REQUEST_REJECTED",
                            "RETURN_COLLECTION_PREPARING",
                            "RETURN_COLLECTION_ON_THE_WAY",
                            "RETURN_COLLECTION_COMPLETED",
                            "RETURN_REJECT_DELIVERY_PREPARING",
                            "RETURN_REJECT_DELIVERY_ON_THE_WAY",
                            "RETURN_REJECT_DELIVERY_COMPLETED",
                            "RETURN_PENDING",
                            "RETURN_REJECTED",
                            "RETURN_REFUNDING",
                            "RETURN_REFUNDED",
                            "RETURN_REFUNDED_PARTIALLY",
                            "PAYMENT_FAILURE",
                            "FINISHED_EXCHANGE_AVAILABLE",
                            "FINISHED_RETURN_AVAILABLE",
                            "FINISHED_SUCCESSFULLY"
                        ]
                    },
                    "currency": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "selectedProductOptionLabel": {
                        "type": "string"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "canceledDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "discountName": {
                        "type": "string"
                    },
                    "relatedOrderItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "priceSetupType": {
                        "type": "string",
                        "enum": [
                            "INITIALLY",
                            "PERIODIC"
                        ]
                    },
                    "demoCycle": {
                        "$ref": "#/components/schemas/DemoCycleDTO"
                    }
                }
            },
            "ProductSubscriptioniteminternalresponsedto": {
                "required": [
                    "id",
                    "isAdditional",
                    "keepWhenRenew",
                    "planName",
                    "price",
                    "priceType",
                    "productName",
                    "quantity",
                    "selectedOptions",
                    "selectedProductOptionIds",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SKU",
                            "TAX",
                            "SHIPPING",
                            "DISCOUNT",
                            "OFFLINE",
                            "FEE",
                            "ADDS",
                            "INSTANT"
                        ]
                    },
                    "productCode": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productFeaturedImageUrl": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "priceType": {
                        "type": "string",
                        "enum": [
                            "ONE_TIME",
                            "FLAT",
                            "UNIT_BASED",
                            "USAGE_BASED",
                            "VOLUME_BASED",
                            "BUNDLE"
                        ]
                    },
                    "parentSubscriptionItemCode": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "optionName": {
                        "type": "string"
                    },
                    "additionalBillings": {
                        "type": "string"
                    },
                    "usedCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "selectedProductOptionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "isAdditional": {
                        "type": "boolean"
                    },
                    "keepWhenRenew": {
                        "type": "boolean"
                    },
                    "maximumPurchaseQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "claimMethodType": {
                        "type": "string",
                        "enum": [
                            "PRE",
                            "POST"
                        ]
                    },
                    "selectedOptions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "ProductOrderidkeydto": {
                "required": [
                    "aSKUItemId",
                    "idKey",
                    "orderCode"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string"
                    },
                    "aSKUItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "orderCode": {
                        "type": "string"
                    }
                }
            },
            "ProductEnabledpaymentgatewaydto": {
                "required": [
                    "isBill",
                    "isTest",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "KICC",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "isTest": {
                        "type": "boolean"
                    },
                    "isBill": {
                        "type": "boolean"
                    }
                }
            },
            "ProductSubscriptiondto": {
                "required": [
                    "currentPeriod",
                    "customer",
                    "id",
                    "interval",
                    "intervalCount",
                    "relatedOrders",
                    "startDate",
                    "status",
                    "subscriptionLogs"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "UNPAID",
                            "PENDING_PAUSE",
                            "PAUSE",
                            "PENDING_CANCEL",
                            "EXPIRED",
                            "CANCELED",
                            "INCOMPLETE",
                            "QUEUEING"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nextPaymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trialEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionItemDTO"
                        }
                    },
                    "parentOrder": {
                        "$ref": "#/components/schemas/ProductOrderdto"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/SubscriptionCustomerDTO"
                    },
                    "relatedOrders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOrderdto"
                        }
                    },
                    "subscriptionLogs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionLogDTO"
                        }
                    },
                    "pausedDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "intervalCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentMethod": {
                        "$ref": "#/components/schemas/CustomerPaymentMethodDTO"
                    },
                    "provideStartDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "billingDate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "canceledVia": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "subscriptionMemo": {
                        "type": "string"
                    },
                    "currentPeriod": {
                        "$ref": "#/components/schemas/ProductPerioddto"
                    }
                }
            },
            "ProductCancel": {
                "required": [
                    "canceled",
                    "pendingCancel"
                ],
                "type": "object",
                "properties": {
                    "canceled": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pendingCancel": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ProductRequestlistwithfilter": {
                "type": "object",
                "properties": {
                    "statuses": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "PREPARING",
                                "SUSPENDED",
                                "ON_THE_WAY",
                                "COMPLETED"
                            ]
                        }
                    },
                    "directions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "TO_BUYER",
                                "TO_SELLER"
                            ]
                        }
                    },
                    "purposes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ORDER",
                                "EXCHANGE_COLLECTION",
                                "EXCHANGE_DELIVERY",
                                "EXCHANGE_REJECTED",
                                "RETURN_COLLECTION",
                                "RETURN_REJECTED"
                            ]
                        }
                    },
                    "searchCondition": {
                        "type": "string",
                        "enum": [
                            "ORDER_CODE",
                            "CUSTOMER_NAME",
                            "ITEM_NAME",
                            "CUSTOMER_PHONE_NUMBER",
                            "RECIPIENT_NAME",
                            "RECIPIENT_PHONE_NUMBER",
                            "EMAIL",
                            "TRACKING_NUMBER"
                        ]
                    }
                }
            },
            "FieldError": {
                "required": [
                    "field",
                    "reason",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "FileResponseDto": {
                "required": [
                    "modifiedAt",
                    "path",
                    "url",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "modifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "FileUploadResponse": {
                "required": [
                    "fileList",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "ACCOUNT",
                            "PRODUCT",
                            "BLOG",
                            "POST"
                        ]
                    },
                    "fileList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FileResponseDto"
                        }
                    }
                }
            },
            "ImageResponseDto": {
                "required": [
                    "contentType",
                    "createdAt",
                    "extension",
                    "path",
                    "url",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PrivateFileResponseDto": {
                "required": [
                    "contentType",
                    "createdAt",
                    "extension",
                    "isPrivate",
                    "path",
                    "url",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ContentFileResponseDto": {
                "required": [
                    "contentType",
                    "createdAt",
                    "extension",
                    "isPrivate",
                    "path",
                    "priceCode",
                    "url",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "path": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "string"
                    },
                    "priceCode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PageImageResponseDto": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageResponseDto"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PagePrivateFileResponseDto": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrivateFileResponseDto"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageContentFileResponseDto": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentFileResponseDto"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "StorageErrorresponse": {
                "required": [
                    "errorCode",
                    "httpStatus"
                ],
                "type": "object",
                "properties": {
                    "httpStatus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "fieldErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldError"
                        }
                    }
                }
            },
            "BaseUrlCreateDTO": {
                "required": [
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                }
            },
            "BaseUrlResponseDTO": {
                "required": [
                    "active",
                    "default",
                    "id",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "default": {
                        "type": "boolean"
                    }
                }
            },
            "BusinessInfoUpdateDTO": {
                "required": [
                    "businessType"
                ],
                "type": "object",
                "properties": {
                    "businessType": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "SELF_EMPLOYED",
                            "CORPORATION"
                        ]
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "mailOrderNumber": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "registrationNumber": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    }
                }
            },
            "CustomFieldUpdateDTO": {
                "required": [
                    "active",
                    "key",
                    "name",
                    "order",
                    "required",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "TEXT",
                            "EMAIL",
                            "PASSWORD",
                            "PHONE",
                            "CHECKBOX",
                            "DROPDOWN",
                            "CALENDAR",
                            "NUMBER",
                            "COMMENT"
                        ]
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "values": {
                        "type": "string"
                    }
                }
            },
            "CustomerServiceInfoUpdateDTO": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    }
                }
            },
            "FormSettingUpdateDTO": {
                "required": [
                    "emailAsUsername",
                    "verifyEmail"
                ],
                "type": "object",
                "properties": {
                    "emailAsUsername": {
                        "type": "boolean"
                    },
                    "verifyEmail": {
                        "type": "boolean"
                    }
                }
            },
            "SocialLinkUpdateDTO": {
                "required": [
                    "link",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "INSTAGRAM",
                            "FACEBOOK",
                            "NAVER",
                            "TWITTER",
                            "YOUTUBE"
                        ]
                    },
                    "link": {
                        "type": "string"
                    }
                }
            },
            "StoreUpdateRequestDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "escrowType": {
                        "type": "string",
                        "enum": [
                            "KG",
                            "NICE",
                            "TOSS",
                            "KB",
                            "NH",
                            "IBK"
                        ]
                    },
                    "escrowLink": {
                        "type": "string"
                    },
                    "headHtml": {
                        "type": "string"
                    },
                    "bodyHtml": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "storeOperationType": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    },
                    "keyColor": {
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "STOP"
                        ]
                    },
                    "term1": {
                        "type": "boolean"
                    },
                    "term2": {
                        "type": "boolean"
                    },
                    "term3": {
                        "type": "boolean"
                    },
                    "businessInfo": {
                        "$ref": "#/components/schemas/BusinessInfoUpdateDTO"
                    },
                    "csInfo": {
                        "$ref": "#/components/schemas/CustomerServiceInfoUpdateDTO"
                    },
                    "socialLinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialLinkUpdateDTO"
                        }
                    },
                    "formSettings": {
                        "$ref": "#/components/schemas/FormSettingUpdateDTO"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldUpdateDTO"
                        }
                    }
                }
            },
            "BusinessInfoDTO": {
                "required": [
                    "businessType"
                ],
                "type": "object",
                "properties": {
                    "businessType": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "SELF_EMPLOYED",
                            "CORPORATION"
                        ]
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "registrationNumber": {
                        "type": "string"
                    },
                    "mailOrderNumber": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    }
                }
            },
            "CustomFieldResponseDTO": {
                "required": [
                    "active",
                    "key",
                    "name",
                    "order",
                    "required",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "TEXT",
                            "EMAIL",
                            "PASSWORD",
                            "PHONE",
                            "CHECKBOX",
                            "DROPDOWN",
                            "CALENDAR",
                            "NUMBER",
                            "COMMENT"
                        ]
                    },
                    "key": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "values": {
                        "type": "string"
                    }
                }
            },
            "CustomerServiceInfoDTO": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    }
                }
            },
            "FormSettingsDTO": {
                "required": [
                    "emailAsUsername",
                    "verifyEmail"
                ],
                "type": "object",
                "properties": {
                    "emailAsUsername": {
                        "type": "boolean"
                    },
                    "verifyEmail": {
                        "type": "boolean"
                    }
                }
            },
            "SocialLinkResponseDTO": {
                "required": [
                    "link",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "INSTAGRAM",
                            "FACEBOOK",
                            "NAVER",
                            "TWITTER",
                            "YOUTUBE"
                        ]
                    },
                    "link": {
                        "type": "string"
                    }
                }
            },
            "StoreResponseDTO": {
                "required": [
                    "authServerUrl",
                    "baseUrls",
                    "customFields",
                    "faviconUrl",
                    "formSettings",
                    "id",
                    "keyColor",
                    "logoUrl",
                    "name",
                    "openidConfigurationUrl",
                    "realmId",
                    "socialLinks",
                    "status",
                    "subdomain",
                    "terms1",
                    "terms2",
                    "terms3",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmId": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "escrowType": {
                        "type": "string",
                        "enum": [
                            "KG",
                            "NICE",
                            "TOSS",
                            "KB",
                            "NH",
                            "IBK"
                        ]
                    },
                    "escrowLink": {
                        "type": "string"
                    },
                    "headHtml": {
                        "type": "string"
                    },
                    "bodyHtml": {
                        "type": "string"
                    },
                    "storeOperationType": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    },
                    "keyColor": {
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "formSettings": {
                        "$ref": "#/components/schemas/FormSettingsDTO"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "STOP"
                        ]
                    },
                    "terms1": {
                        "type": "boolean"
                    },
                    "terms2": {
                        "type": "boolean"
                    },
                    "terms3": {
                        "type": "boolean"
                    },
                    "businessInfo": {
                        "$ref": "#/components/schemas/BusinessInfoDTO"
                    },
                    "csInfo": {
                        "$ref": "#/components/schemas/CustomerServiceInfoDTO"
                    },
                    "baseUrls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseUrlResponseDTO"
                        }
                    },
                    "socialLinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialLinkResponseDTO"
                        }
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldResponseDTO"
                        }
                    },
                    "authServerUrl": {
                        "type": "string"
                    },
                    "openidConfigurationUrl": {
                        "type": "string"
                    }
                }
            },
            "MenuItemUpdateDTO": {
                "required": [
                    "children",
                    "menuItemName",
                    "newWindow",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "INSTANT_PAGE",
                            "EXTERNAL_LINK",
                            "CATEGORY",
                            "PRODUCT_PAGE"
                        ]
                    },
                    "menuItemName": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "pageId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItemUpdateDTO"
                        }
                    },
                    "newWindow": {
                        "type": "boolean"
                    }
                }
            },
            "MenuItemResponseDTO": {
                "required": [
                    "children",
                    "id",
                    "newWindow",
                    "order",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INSTANT_PAGE",
                            "EXTERNAL_LINK",
                            "CATEGORY",
                            "PRODUCT_PAGE"
                        ]
                    },
                    "uri": {
                        "type": "string"
                    },
                    "pageId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "value": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItemResponseDTO"
                        }
                    },
                    "newWindow": {
                        "type": "boolean"
                    }
                }
            },
            "MetadataValueDTO": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "STRING",
                            "LONG",
                            "BOOLEAN",
                            "TEXT"
                        ]
                    },
                    "stringValue": {
                        "type": "string"
                    },
                    "longValue": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "booleanValue": {
                        "type": "boolean"
                    }
                }
            },
            "StorePageUpdateDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "seoEnabled": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetadataValueDTO"
                        }
                    }
                }
            },
            "StorePageResponseDTO": {
                "required": [
                    "metadata",
                    "name",
                    "seoEnabled",
                    "uri"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "seoEnabled": {
                        "type": "boolean"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "array",
                        "example": "[ { \"name\": \"aspectRatio\": 0 } ]",
                        "items": {
                            "$ref": "#/components/schemas/MetadataValueDTO"
                        }
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationStoreDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationStoreDTO"
                    }
                }
            },
            "FirstActivationStoreDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 30,
                        "minLength": 2,
                        "type": "string"
                    },
                    "email": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tel": {
                        "pattern": "0[23456789]{1,2}-\\d{3,4}-\\d{3,4}",
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "keyColor": {
                        "pattern": "#[0-9A-F]{6}",
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationStoreTypeDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationStoreTypeDTO"
                    }
                }
            },
            "FirstActivationStoreTypeDTO": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    }
                }
            },
            "FirstActivationPaymentDTO": {
                "required": [
                    "activated",
                    "pgEnabled"
                ],
                "type": "object",
                "properties": {
                    "pgEnabled": {
                        "type": "object",
                        "additionalProperties": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CARD",
                                    "VBANK",
                                    "BANK",
                                    "CELLPHONE",
                                    "SIMPLE_PAY",
                                    "CMS",
                                    "CARD_BILL",
                                    "CELLPHONE_BILL",
                                    "CMS_BILL"
                                ]
                            }
                        }
                    },
                    "activated": {
                        "type": "boolean"
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationPaymentDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationPaymentDTO"
                    }
                }
            },
            "FirstActivationFinishDTO": {
                "required": [
                    "term1",
                    "term2",
                    "term3"
                ],
                "type": "object",
                "properties": {
                    "term1": {
                        "type": "boolean"
                    },
                    "term2": {
                        "type": "boolean"
                    },
                    "term3": {
                        "type": "boolean"
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationFinishDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationFinishDTO"
                    }
                }
            },
            "FirstActivationDeliveryDTO": {
                "required": [
                    "useDeliveryCharge"
                ],
                "type": "object",
                "properties": {
                    "useDeliveryCharge": {
                        "type": "boolean"
                    },
                    "deliveryChargeType": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "CONDITIONAL_FREE",
                            "FIXED"
                        ]
                    },
                    "defaultDeliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "freeShipOverAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "useLocalShipCharge": {
                        "type": "boolean"
                    },
                    "jejuShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "islandAndMountainShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationDeliveryDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationDeliveryDTO"
                    }
                }
            },
            "FirstActivationBusinessDTO": {
                "type": "object",
                "properties": {
                    "businessType": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "SELF_EMPLOYED",
                            "CORPORATION"
                        ]
                    },
                    "name": {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "registrationNumber": {
                        "pattern": "\\d{10}",
                        "type": "string"
                    },
                    "mailOrderNumber": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "termTax": {
                        "type": "boolean"
                    },
                    "termFee": {
                        "type": "boolean"
                    }
                }
            },
            "FirstActivationRequestWrapperDTOFirstActivationBusinessDTO": {
                "required": [
                    "request",
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/FirstActivationBusinessDTO"
                    }
                }
            },
            "StoreCreateRequestDTO": {
                "required": [
                    "name",
                    "realmId",
                    "subdomain",
                    "terms1",
                    "terms2",
                    "terms3",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmId": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "storeOperationType": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    },
                    "keyColor": {
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "STOP"
                        ]
                    },
                    "terms1": {
                        "type": "boolean"
                    },
                    "terms2": {
                        "type": "boolean"
                    },
                    "terms3": {
                        "type": "boolean"
                    },
                    "businessInfo": {
                        "$ref": "#/components/schemas/BusinessInfoDTO"
                    },
                    "csInfo": {
                        "$ref": "#/components/schemas/CustomerServiceInfoDTO"
                    }
                }
            },
            "PolicyResponseDTO": {
                "type": "object",
                "properties": {
                    "termsAndConditions": {
                        "type": "string"
                    },
                    "privacyConditions": {
                        "type": "string"
                    },
                    "deliveryReturnConditions": {
                        "type": "string"
                    }
                }
            },
            "StoreMetadataResponseDTO": {
                "required": [
                    "activeUrl",
                    "authServerUrl",
                    "authUrl",
                    "baseUrl",
                    "customFields",
                    "defaultUrl",
                    "faviconUrl",
                    "formSettings",
                    "id",
                    "keyColor",
                    "logoUrl",
                    "menus",
                    "name",
                    "openidConfigurationUrl",
                    "realmId",
                    "socialLinks",
                    "status",
                    "subdomain",
                    "uuid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "realmId": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "escrowType": {
                        "type": "string",
                        "enum": [
                            "KG",
                            "NICE",
                            "TOSS",
                            "KB",
                            "NH",
                            "IBK"
                        ]
                    },
                    "escrowLink": {
                        "type": "string"
                    },
                    "headHtml": {
                        "type": "string"
                    },
                    "bodyHtml": {
                        "type": "string"
                    },
                    "storeOperationType": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    },
                    "keyColor": {
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "LIVE",
                            "STOP"
                        ]
                    },
                    "businessInfo": {
                        "$ref": "#/components/schemas/BusinessInfoDTO"
                    },
                    "csInfo": {
                        "$ref": "#/components/schemas/CustomerServiceInfoDTO"
                    },
                    "formSettings": {
                        "$ref": "#/components/schemas/FormSettingsDTO"
                    },
                    "baseUrl": {
                        "type": "string"
                    },
                    "defaultUrl": {
                        "type": "string"
                    },
                    "activeUrl": {
                        "type": "string"
                    },
                    "menus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItemResponseDTO"
                        }
                    },
                    "socialLinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SocialLinkResponseDTO"
                        }
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldResponseDTO"
                        }
                    },
                    "authServerUrl": {
                        "type": "string"
                    },
                    "authUrl": {
                        "type": "string"
                    },
                    "openidConfigurationUrl": {
                        "type": "string"
                    }
                }
            },
            "InstantPageGroupResponseDTO": {
                "required": [
                    "name",
                    "pages"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstantPageResponseDTO"
                        }
                    }
                }
            },
            "InstantPageResponseDTO": {
                "required": [
                    "id",
                    "metadata",
                    "name",
                    "status",
                    "uri",
                    "visibleInMenu"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "visibleInMenu": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ]
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetadataDTO"
                        }
                    }
                }
            },
            "MetadataDTO": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "STRING",
                            "LONG",
                            "BOOLEAN",
                            "TEXT"
                        ]
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "FAAgreementCache": {
                "required": [
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "term1": {
                        "type": "boolean"
                    },
                    "term2": {
                        "type": "boolean"
                    },
                    "term3": {
                        "type": "boolean"
                    }
                }
            },
            "FABusinessCache": {
                "type": "object",
                "properties": {
                    "businessType": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "SELF_EMPLOYED",
                            "CORPORATION"
                        ]
                    },
                    "file": {
                        "type": "string"
                    },
                    "termTax": {
                        "type": "boolean"
                    },
                    "termFee": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "registrationNumber": {
                        "type": "string"
                    },
                    "mailOrderNumber": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "postcode": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    }
                }
            },
            "FADeliveryCache": {
                "required": [
                    "useDeliveryCharge",
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "useDeliveryCharge": {
                        "type": "boolean"
                    },
                    "deliveryChargeType": {
                        "type": "string",
                        "enum": [
                            "FREE",
                            "CONDITIONAL_FREE",
                            "FIXED"
                        ]
                    },
                    "defaultDeliveryCharge": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "freeShipOverAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "useLocalShipCharge": {
                        "type": "boolean"
                    },
                    "jejuShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "islandAndMountainShipAmount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "FAStoreCache": {
                "required": [
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "tel": {
                        "type": "string"
                    },
                    "businessHours": {
                        "type": "string"
                    },
                    "keyColor": {
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string"
                    },
                    "logoUrl": {
                        "type": "string"
                    }
                }
            },
            "FAStoreTypeCache": {
                "required": [
                    "vendorUuid"
                ],
                "type": "object",
                "properties": {
                    "vendorUuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "STANDALONE",
                            "ENTERED"
                        ]
                    }
                }
            },
            "FirstActivationResponseWrapperDTO": {
                "required": [
                    "screenCode"
                ],
                "type": "object",
                "properties": {
                    "screenCode": {
                        "type": "string"
                    },
                    "storeType": {
                        "$ref": "#/components/schemas/FAStoreTypeCache"
                    },
                    "store": {
                        "$ref": "#/components/schemas/FAStoreCache"
                    },
                    "business": {
                        "$ref": "#/components/schemas/FABusinessCache"
                    },
                    "delivery": {
                        "$ref": "#/components/schemas/FADeliveryCache"
                    },
                    "payment": {
                        "$ref": "#/components/schemas/FirstActivationPaymentDTO"
                    },
                    "agreement": {
                        "$ref": "#/components/schemas/FAAgreementCache"
                    }
                }
            },
            "StoreErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "StoreApiresponse": {
                "required": [
                    "message",
                    "success"
                ],
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Res": {
                "title": "기록 조회",
                "required": [
                    "accumulateRecord",
                    "amountForQuota",
                    "influxDate",
                    "restDays"
                ],
                "type": "object",
                "properties": {
                    "accumulateQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accumulateRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "amountForQuota": {
                        "type": "number"
                    },
                    "restDays": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "UsageRecordDTO": {
                "required": [
                    "accumulated",
                    "id",
                    "quantity",
                    "startDate",
                    "status",
                    "subscriptionItemId",
                    "via"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "기록 ID",
                        "format": "int64"
                    },
                    "subscriptionItemId": {
                        "type": "integer",
                        "description": "구독 항목 ID",
                        "format": "int64"
                    },
                    "payload": {
                        "type": "string",
                        "description": "사용량과 관련하여 추가적으로 저장한 데이터"
                    },
                    "status": {
                        "type": "string",
                        "description": "상태",
                        "enum": [
                            "IN",
                            "ACTIVE",
                            "OUT",
                            "REMOVED"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "description": "기록된 시각",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "이탈한 시각 - 계정 기반 데이터에 사용됩니다.",
                        "format": "date-time"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "기록 수량",
                        "format": "int64"
                    },
                    "via": {
                        "type": "string",
                        "description": "어떤 경로로 기록되었는지",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "accumulated": {
                        "type": "integer",
                        "description": "누적 사용량",
                        "format": "int64"
                    }
                }
            },
            "UsageRecordCreateDTO": {
                "title": "기록 생성",
                "required": [
                    "quantity",
                    "startDate",
                    "subscriptionItemId"
                ],
                "type": "object",
                "properties": {
                    "subscriptionItemId": {
                        "type": "integer",
                        "description": "구독 항목 ID",
                        "format": "int64"
                    },
                    "quantity": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "기록 수량",
                        "format": "int64"
                    },
                    "payload": {
                        "type": "string",
                        "description": "(사용량/계정)과 관련하여 추가적으로 저장이 필요한 데이터가 있을 때 저장하기 위한 공간"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "기록한 날짜 - 기본값은 현재 시점입니다.",
                        "format": "date-time"
                    }
                }
            },
            "CreateRecordsByExcelFailedResultDTO": {
                "required": [
                    "message",
                    "rows"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateRecordsByExcelFailedRowDTO"
                        }
                    }
                }
            },
            "CreateRecordsByExcelFailedRowDTO": {
                "required": [
                    "adminName",
                    "customerName",
                    "invalidColumns",
                    "planCode",
                    "planName",
                    "priceType",
                    "productName",
                    "record",
                    "startDate",
                    "subPlanCode",
                    "subPlanName",
                    "subProductName",
                    "subscriptionId"
                ],
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string"
                    },
                    "customerName": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "record": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string"
                    },
                    "priceType": {
                        "type": "string"
                    },
                    "subPlanCode": {
                        "type": "string"
                    },
                    "subPlanName": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "adminName": {
                        "type": "string"
                    },
                    "subProductName": {
                        "type": "string"
                    },
                    "invalidColumns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CreateRecordsByExcelResultDTO": {
                "required": [
                    "failedResult",
                    "succeededResult"
                ],
                "type": "object",
                "properties": {
                    "succeededResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Usage_recordReq"
                        }
                    },
                    "failedResult": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateRecordsByExcelFailedResultDTO"
                        }
                    }
                }
            },
            "BulkAggregatedUsageRecordRequestDTO": {
                "required": [
                    "endDate",
                    "startDate",
                    "subscriptionItemId"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "subscriptionItemId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InternalUsageDTO": {
                "required": [
                    "accumulatedRecord",
                    "items",
                    "subscriptionId",
                    "subscriptionItemId",
                    "usageId"
                ],
                "type": "object",
                "properties": {
                    "usageId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "subscriptionItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InternalUsageRecordQuotaDTO"
                        }
                    },
                    "accumulatedQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accumulatedRecord": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InternalUsageRecordQuotaDTO": {
                "required": [
                    "accumulateRecord",
                    "deltaQuota",
                    "deltaRecord",
                    "id",
                    "influxDate",
                    "via"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "accumulateQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accumulateRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "via": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    }
                }
            },
            "RecordForV1": {
                "required": [
                    "influxDate",
                    "record",
                    "via"
                ],
                "type": "object",
                "properties": {
                    "quota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "record": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "via": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "RecordForManager": {
                "required": [
                    "accumulateRecord",
                    "deltaRecord",
                    "influxDate",
                    "via"
                ],
                "type": "object",
                "properties": {
                    "accumulateQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accumulateRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "via": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "CumulativeSumForManager": {
                "required": [
                    "afterNormalizedAmount",
                    "beforeNormalizedAmount"
                ],
                "type": "object",
                "properties": {
                    "beforeNormalizedAmount": {
                        "type": "number"
                    },
                    "afterNormalizedAmount": {
                        "type": "number"
                    }
                }
            },
            "RecordForCustomer": {
                "required": [
                    "accumulateRecord",
                    "deltaRecord",
                    "influxDate",
                    "via"
                ],
                "type": "object",
                "properties": {
                    "accumulateQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "accumulateRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaQuota": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "deltaRecord": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "via": {
                        "type": "string",
                        "enum": [
                            "MANAGER",
                            "V1",
                            "RENEW",
                            "CUSTOMER",
                            "SYSTEM"
                        ]
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "CumulativeSumForCustomer": {
                "required": [
                    "afterNormalizedAmount",
                    "beforeNormalizedAmount"
                ],
                "type": "object",
                "properties": {
                    "beforeNormalizedAmount": {
                        "type": "number"
                    },
                    "afterNormalizedAmount": {
                        "type": "number"
                    }
                }
            },
            "Usage_recordErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "Usage_recordReq": {
                "title": "기록 생성",
                "required": [
                    "influxDate",
                    "quota",
                    "record",
                    "subscriptionItemId"
                ],
                "type": "object",
                "properties": {
                    "subscriptionItemId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "quota": {
                        "type": "integer",
                        "description": "기존 AccumulatedQuota 값에 대하여 증감합니다.",
                        "format": "int64"
                    },
                    "record": {
                        "type": "integer",
                        "description": "기존 AccumulatedRecord 값에 대하여 증감합니다.",
                        "format": "int64"
                    },
                    "influxDate": {
                        "type": "string",
                        "description": "인입일",
                        "format": "date-time"
                    },
                    "payload": {
                        "type": "string"
                    }
                }
            },
            "DefaultResponseDTO": {
                "title": "기본 응답 데이터",
                "required": [
                    "message",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "성공 여부"
                    },
                    "message": {
                        "type": "string",
                        "description": "메세지"
                    }
                }
            },
            "SubscriptionCreateDTO": {
                "title": "구독 생성 데이터",
                "required": [
                    "currentPeriodEnd",
                    "currentPeriodStart",
                    "customerId",
                    "partnerSubscriptionId",
                    "recurringInterval",
                    "recurringIntervalCount"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "description": "고객 ID",
                        "format": "int64"
                    },
                    "trialStart": {
                        "type": "string",
                        "description": "체험기간 시작 시점",
                        "format": "date-time"
                    },
                    "trialEnd": {
                        "type": "string",
                        "description": "체험기간 종료 시점",
                        "format": "date-time"
                    },
                    "start": {
                        "type": "string",
                        "description": "구독 시작 시점",
                        "format": "date-time"
                    },
                    "currentPeriodStart": {
                        "type": "string",
                        "description": "현재 주기의 시작 시점",
                        "format": "date-time"
                    },
                    "currentPeriodEnd": {
                        "type": "string",
                        "description": "현재 주기의 종료 시점",
                        "format": "date-time"
                    },
                    "canceledAt": {
                        "type": "string",
                        "description": "취소 시점",
                        "format": "date-time"
                    },
                    "cancelAtPeriodEnd": {
                        "type": "boolean",
                        "description": "이번 주기가 마지막인지 여부 - 이번 주기 후 만료될 경우 true 입력"
                    },
                    "initialOrderId": {
                        "type": "integer",
                        "description": "구독이 시작되는 최초 주문의 ID",
                        "format": "int64"
                    },
                    "replaceIfExists": {
                        "type": "boolean",
                        "description": "partnerSubscriptionId 이미 존재할 때 replaceIfExists가 true 이면 값을 수정하고, false 이면 exception 이 발생합니다."
                    },
                    "recurringIntervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "recurringInterval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "partnerSubscriptionId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 구독의 unique ID"
                    }
                },
                "description": "구독 생성 데이터"
            },
            "StartRecoveryResponse": {
                "title": "복구 시작 응답",
                "required": [
                    "coverId"
                ],
                "type": "object",
                "properties": {
                    "coverId": {
                        "type": "integer",
                        "description": "커버 ID - 다른 동작을 위해 사용됩니다.",
                        "format": "int64"
                    },
                    "retryDate": {
                        "type": "string",
                        "description": "다음 결제 시도 시점 - 시나리오에 의해서 계산된 시점입니다. 해당 시점에 다시 결제를 시도해주세요. NULL인 경우, 종료된 시나리오입니다.",
                        "format": "date-time"
                    }
                }
            },
            "StartRecoveryDTO": {
                "title": "복구 시작 데이터",
                "required": [
                    "orderId",
                    "subscriptionId"
                ],
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "integer",
                        "description": "구독 ID",
                        "format": "int64"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "주문 ID",
                        "format": "int64"
                    },
                    "errorCode": {
                        "type": "string",
                        "description": "PG사에서 알아낸 결제 오류 코드"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "PG사에서 알아낸 결제 오류 메세지"
                    }
                },
                "description": "복구 시작 데이터"
            },
            "RecoveryResponse": {
                "title": "복구 정보",
                "required": [
                    "changeDateEnabled",
                    "delayedCount",
                    "enabledPaymentGateways",
                    "expired",
                    "id",
                    "order",
                    "paymentDate",
                    "paymentDayOfWeek",
                    "paymentKey",
                    "paymentMonth",
                    "paymentYear",
                    "subscription"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "복구 정보 ID",
                        "format": "int64"
                    },
                    "order": {
                        "$ref": "#/components/schemas/CoverOrderdto"
                    },
                    "paymentYear": {
                        "type": "integer",
                        "description": "주문 연도",
                        "format": "int32"
                    },
                    "paymentMonth": {
                        "type": "integer",
                        "description": "주문 월",
                        "format": "int32"
                    },
                    "paymentDate": {
                        "type": "integer",
                        "description": "주문 일",
                        "format": "int32"
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "사용한 결제 정보"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "결제 실패 메세지"
                    },
                    "expired": {
                        "type": "boolean",
                        "description": "만기 여부 - 진행중인 복구인지"
                    },
                    "delayedCount": {
                        "type": "integer",
                        "description": "나중에 알림 기능을 몇 번 사용했는지(최대 3회 가능)",
                        "format": "int32"
                    },
                    "businessImageUrl": {
                        "type": "string",
                        "description": "가맹점 로고 이미지 URL"
                    },
                    "businessName": {
                        "type": "string",
                        "description": "가맹점 이름"
                    },
                    "paymentDayOfWeek": {
                        "type": "string",
                        "description": "결제 요일",
                        "enum": [
                            "MONDAY",
                            "TUESDAY",
                            "WEDNESDAY",
                            "THURSDAY",
                            "FRIDAY",
                            "SATURDAY",
                            "SUNDAY"
                        ]
                    },
                    "paymentKey": {
                        "type": "string",
                        "description": "결제에 사용할 paymentKey"
                    },
                    "enabledPaymentGateways": {
                        "type": "array",
                        "description": "사용할 수 있는 PG 목록",
                        "items": {
                            "$ref": "#/components/schemas/CoverEnabledpaymentgatewaydto"
                        }
                    },
                    "subscription": {
                        "$ref": "#/components/schemas/CoverSubscriptiondto"
                    },
                    "changeDateEnabled": {
                        "type": "boolean",
                        "description": "결제일 변경 사용 가능 여부"
                    }
                }
            },
            "CoverErrorresponse": {
                "required": [
                    "errorCode"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string"
                    },
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "details": {
                        "$ref": "#/components/schemas/ReturnError"
                    }
                }
            },
            "CoverCustomerdto": {
                "title": "고객 정보",
                "required": [
                    "email",
                    "id",
                    "name",
                    "partnerCustomerId",
                    "phone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "고객 ID - 다른 API 호출에 사용되므로 해당 고객 정보와 함께 저장해놓고 사용하세요.",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "고객 이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "고객 email"
                    },
                    "phone": {
                        "type": "string",
                        "description": "고객 전화번호"
                    },
                    "partnerCustomerId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 고객의 unique ID"
                    }
                },
                "description": "고객 정보"
            },
            "CoverOrderdto": {
                "title": "구독 정보",
                "required": [
                    "amount",
                    "amountReturned",
                    "customer",
                    "id",
                    "items",
                    "partnerOrderId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "주문 ID - 다른 API 호출에 사용되므로 해당 주문 정보와 함께 저장해놓고 사용하세요.",
                        "format": "int64"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CoverCustomerdto"
                    },
                    "amount": {
                        "type": "number",
                        "description": "주문 금액"
                    },
                    "amountReturned": {
                        "type": "number",
                        "description": "환불 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목",
                        "items": {
                            "$ref": "#/components/schemas/CoverOrderitemdto"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "주문 상태",
                        "enum": [
                            "CREATED",
                            "PAID",
                            "CANCEL_REQ",
                            "CANCELED",
                            "CHANGE_REQ",
                            "CHANGE_PROCESS",
                            "CHANGED",
                            "RETURN_REQ",
                            "RETURN_PROCESS",
                            "RETURNED",
                            "PREPARING",
                            "SHIPPING",
                            "FULFILLED",
                            "FULL_REFUND",
                            "PARTIAL_REFUND",
                            "PAYMENT_FAILURE"
                        ]
                    },
                    "canceledDate": {
                        "type": "string",
                        "description": "주문 취소 시점",
                        "format": "date-time"
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "주문 결제 시점",
                        "format": "date-time"
                    },
                    "idKey": {
                        "type": "string",
                        "description": "스텝페이 주문 idKey"
                    },
                    "retryDate": {
                        "type": "string",
                        "description": "다음 결제 시도 시점 - 시나리오에 의해서 계산된 시점입니다. 해당 시점에 다시 결제를 시도해주세요(실패 주문을 생성했을 때 포함됩니다).",
                        "format": "date-time"
                    },
                    "partnerOrderId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 주문의 unique ID"
                    }
                },
                "description": "구독과 연관된 갱신 주문 정보"
            },
            "CoverOrderitemdto": {
                "title": "주문 항목 정보",
                "required": [
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "price": {
                        "$ref": "#/components/schemas/CoverPricedto"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "항목 주문 수량",
                        "format": "int32"
                    }
                },
                "description": "주문 항목"
            },
            "CoverPricedto": {
                "title": "가격 플랜 정보",
                "required": [
                    "id",
                    "isRecurring",
                    "name",
                    "partnerPriceId",
                    "price",
                    "product"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "플랜 ID - 다른 API 호출에 사용되므로 해당 플랜 정보와 함께 저장해놓고 사용하세요.",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "플랜 이름"
                    },
                    "partnerPriceId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 플랜의 unique ID"
                    },
                    "product": {
                        "$ref": "#/components/schemas/CoverProductdto"
                    },
                    "price": {
                        "type": "number",
                        "description": "판매 가격"
                    },
                    "isRecurring": {
                        "type": "boolean",
                        "description": "정기결제인지 여부"
                    },
                    "recurringInterval": {
                        "type": "string",
                        "description": "결제 주기에 대한 단위(isRecurring이 true일 때)",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "recurringIntervalCount": {
                        "type": "integer",
                        "description": "결제 주기에 대한 수(isRecurring이 true일 때)",
                        "format": "int32"
                    }
                },
                "description": "가격 플랜 정보"
            },
            "CoverProductdto": {
                "title": "상품 정보",
                "required": [
                    "id",
                    "name",
                    "partnerProductId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "상품 ID - 다른 API 호출에 사용되므로 해당 상품 정보와 함께 저장해놓고 사용하세요.",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 대표 이미지 URL"
                    },
                    "partnerProductId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 상품의 unique ID"
                    }
                },
                "description": "플랜과 연관된 상품 정보"
            },
            "CoverSubscriptiondto": {
                "title": "구독 정보",
                "required": [
                    "currentPeriodEnd",
                    "currentPeriodStart",
                    "customer",
                    "id",
                    "partnerSubscriptionId",
                    "recurringInterval",
                    "recurringIntervalCount",
                    "renewalOrders",
                    "start",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "구독 ID - 다른 API 호출에 사용되므로 해당 구독 정보와 함께 저장해놓고 사용하세요.",
                        "format": "int64"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CoverCustomerdto"
                    },
                    "trialStart": {
                        "type": "string",
                        "description": "체험기간 시작 시점",
                        "format": "date-time"
                    },
                    "trialEnd": {
                        "type": "string",
                        "description": "체험기간 종료 시점",
                        "format": "date-time"
                    },
                    "start": {
                        "type": "string",
                        "description": "구독 시작 시점",
                        "format": "date-time"
                    },
                    "currentPeriodStart": {
                        "type": "string",
                        "description": "현재 주기의 시작 시점",
                        "format": "date-time"
                    },
                    "currentPeriodEnd": {
                        "type": "string",
                        "description": "현재 주기의 종료 시점",
                        "format": "date-time"
                    },
                    "canceledAt": {
                        "type": "string",
                        "description": "취소 시점",
                        "format": "date-time"
                    },
                    "cancelAtPeriodEnd": {
                        "type": "boolean",
                        "description": "이번 주기가 마지막인지 여부 - 이번 주기 후 만료될 경우 true"
                    },
                    "status": {
                        "type": "string",
                        "description": "구독 상태",
                        "enum": [
                            "ACTIVE",
                            "CANCELED",
                            "UNPAID",
                            "PAUSE",
                            "EXPIRED"
                        ]
                    },
                    "initialOrder": {
                        "$ref": "#/components/schemas/CoverOrderdto"
                    },
                    "renewalOrders": {
                        "type": "array",
                        "description": "구독과 연관된 갱신 주문 정보",
                        "items": {
                            "$ref": "#/components/schemas/CoverOrderdto"
                        }
                    },
                    "partnerSubscriptionId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 구독의 unique ID"
                    },
                    "recurringIntervalCount": {
                        "type": "integer",
                        "description": "구독 주기",
                        "format": "int32"
                    },
                    "recurringInterval": {
                        "type": "string",
                        "description": "구독 주기 단위",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    }
                },
                "description": "구독 정보"
            },
            "CoverProductcreatedto": {
                "title": "상품 생성 데이터",
                "required": [
                    "name",
                    "partnerProductId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "상품 이름"
                    },
                    "featuredImageUrl": {
                        "type": "string",
                        "description": "상품 대표 이미지 URL"
                    },
                    "replaceIfExists": {
                        "type": "boolean",
                        "description": "partnerProductId 이미 존재할 때 replaceIfExists가 true 이면 값을 수정하고, false 이면 exception 이 발생합니다."
                    },
                    "partnerProductId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 상품의 unique ID"
                    }
                },
                "description": "상품 생성 데이터"
            },
            "CoverPricecreatedto": {
                "title": "가격 플랜 생성 데이터",
                "required": [
                    "isRecurring",
                    "name",
                    "partnerPriceId",
                    "price",
                    "productId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "플랜 이름"
                    },
                    "productId": {
                        "type": "integer",
                        "description": "플랜과 연관된 상품 ID",
                        "format": "int64"
                    },
                    "price": {
                        "type": "number",
                        "description": "판매 가격"
                    },
                    "isRecurring": {
                        "type": "boolean",
                        "description": "정기결제인지 여부"
                    },
                    "replaceIfExists": {
                        "type": "boolean",
                        "description": "partnerPriceId 이미 존재할 때 replaceIfExists가 true 이면 값을 수정하고, false 이면 exception 이 발생합니다."
                    },
                    "recurringInterval": {
                        "type": "string",
                        "description": "결제 주기에 대한 단위(isRecurring이 true일 때)",
                        "enum": [
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR"
                        ]
                    },
                    "recurringIntervalCount": {
                        "type": "integer",
                        "description": "결제 주기에 대한 수(isRecurring이 true일 때)",
                        "format": "int32"
                    },
                    "partnerPriceId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 플랜의 unique ID"
                    }
                },
                "description": "가격 생성 데이터"
            },
            "CoverOrdercreatedto": {
                "title": "주문 생성 데이터",
                "required": [
                    "amount",
                    "amountReturned",
                    "customerId",
                    "items",
                    "partnerOrderId",
                    "paymentGateway"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "integer",
                        "description": "고객 ID",
                        "format": "int64"
                    },
                    "amount": {
                        "type": "number",
                        "description": "주문 금액"
                    },
                    "amountReturned": {
                        "type": "number",
                        "description": "환불된 금액"
                    },
                    "items": {
                        "type": "array",
                        "description": "주문 항목",
                        "items": {
                            "$ref": "#/components/schemas/CoverOrderitemcreatedto"
                        }
                    },
                    "paymentDate": {
                        "type": "string",
                        "description": "결제일",
                        "format": "date-time"
                    },
                    "idKey": {
                        "type": "string",
                        "description": "스텝페이 결제 ID"
                    },
                    "replaceIfExists": {
                        "type": "boolean",
                        "description": "partnerOrderId가 이미 존재할 때 replaceIfExists가 true 이면 값을 수정하고, false 이면 exception 이 발생합니다."
                    },
                    "canceledDate": {
                        "type": "string",
                        "description": "취소 날짜",
                        "format": "date-time"
                    },
                    "subscriptionId": {
                        "type": "integer",
                        "description": "연관된 구독 ID",
                        "format": "int64"
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "결제 정보(카드사, 카드번호 등)"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "결제 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "UNKNOWN"
                        ]
                    },
                    "paymentFailed": {
                        "type": "boolean",
                        "description": "주문 등록과 함께 시나리오가 실행되게 하려면 true 입력"
                    },
                    "errorCode": {
                        "type": "string",
                        "description": "PG사에서 받은 에러 코드(paymentFailed가 true일 때)"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "PG사에서 받은 에러 메세지(paymentFailed가 true일 때)"
                    },
                    "partnerOrderId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 주문의 unique ID"
                    }
                },
                "description": "주문 생성 데이터"
            },
            "CoverOrderitemcreatedto": {
                "title": "주문 항목 생성",
                "required": [
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "priceId": {
                        "type": "integer",
                        "description": "가격 플랜 ID",
                        "format": "int64"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "수량",
                        "format": "int32"
                    }
                },
                "description": "주문 항목"
            },
            "CoverCustomercreatedto": {
                "title": "고객 생성 데이터",
                "required": [
                    "email",
                    "name",
                    "partnerCustomerId",
                    "phone"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "고객 이름"
                    },
                    "email": {
                        "type": "string",
                        "description": "고객 email"
                    },
                    "phone": {
                        "type": "string",
                        "description": "고객 전화번호"
                    },
                    "replaceIfExists": {
                        "type": "boolean",
                        "description": "partnerCustomerId가 이미 존재할 때 replaceIfExists가 true 이면 값을 수정하고, false 이면 exception 이 발생합니다."
                    },
                    "partnerCustomerId": {
                        "type": "string",
                        "description": "가맹점에서 사용하는 고객의 unique ID"
                    }
                },
                "description": "고객 정보 등록 데이터"
            },
            "CoverOrderidkeydto": {
                "title": "주문과 idKey",
                "required": [
                    "orderId",
                    "paymentGateway"
                ],
                "type": "object",
                "properties": {
                    "idKey": {
                        "type": "string",
                        "description": "idKey"
                    },
                    "orderId": {
                        "type": "integer",
                        "description": "주문 ID",
                        "format": "int64"
                    },
                    "paymentGateway": {
                        "type": "string",
                        "description": "사용한 PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "CoverEnabledpaymentgatewaydto": {
                "title": "사용 가능한 PG 정보",
                "required": [
                    "isBill",
                    "isTest",
                    "paymentGateway",
                    "paymentMethod"
                ],
                "type": "object",
                "properties": {
                    "paymentGateway": {
                        "type": "string",
                        "description": "PG",
                        "enum": [
                            "NAVER",
                            "DANAL",
                            "KAKAO",
                            "KG",
                            "KCP",
                            "NICE",
                            "JT",
                            "GOOGLE",
                            "BANKPAY",
                            "BLUEWALNUT",
                            "KSNET",
                            "TOSS",
                            "EXIMBAY",
                            "SETTLE",
                            "DAOUDATA",
                            "WELCOME",
                            "NICE_V2",
                            "STRIPE",
                            "PAYPLE",
                            "PAYPLE_GLOBAL",
                            "UNKNOWN"
                        ]
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "결제 수단",
                        "enum": [
                            "CARD",
                            "VBANK",
                            "BANK",
                            "CELLPHONE",
                            "SIMPLE_PAY",
                            "CMS",
                            "CARD_BILL",
                            "CELLPHONE_BILL",
                            "CMS_BILL"
                        ]
                    },
                    "isTest": {
                        "type": "boolean",
                        "description": "테스트 결제인지 여부"
                    },
                    "isBill": {
                        "type": "boolean",
                        "description": "정기결제인지 여부"
                    }
                },
                "description": "사용할 수 있는 PG 목록"
            }
        }
    }
}